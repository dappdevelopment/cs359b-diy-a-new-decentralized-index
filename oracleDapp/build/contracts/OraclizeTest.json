{
  "contractName": "OraclizeTest",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "oraclizeCallbacks",
      "outputs": [
        {
          "name": "oState",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ETHUSD",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "BTCUSD",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "description",
          "type": "string"
        }
      ],
      "name": "LogInfo",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "price",
          "type": "string"
        }
      ],
      "name": "LogPriceUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "price",
          "type": "string"
        }
      ],
      "name": "LogPriceUpdate2",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_balance",
          "type": "uint256"
        }
      ],
      "name": "LogUpdate",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "myid",
          "type": "bytes32"
        },
        {
          "name": "result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "id",
          "type": "bytes32"
        },
        {
          "name": "result",
          "type": "string"
        },
        {
          "name": "proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "name": "_balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "update",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "update2",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x60806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806312065fe0146100a057806327dc297e146100cb57806338bbfa5014610142578063426d5ef1146101ff57806373db084414610252578063a2e62045146102e2578063d1bb76c2146102ec578063fc2650d8146102f6575b34801561009a57600080fd5b50600080fd5b3480156100ac57600080fd5b506100b5610386565b6040518082815260200191505060405180910390f35b3480156100d757600080fd5b506101406004803603810190808035600019169060200190929190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506103a5565b005b34801561014e57600080fd5b506101fd6004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506103e8565b005b34801561020b57600080fd5b5061022e6004803603810190808035600019169060200190929190505050610686565b6040518082600181111561023e57fe5b60ff16815260200191505060405180910390f35b34801561025e57600080fd5b506102676106b1565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102a757808201518184015260208101905061028c565b50505050905090810190601f1680156102d45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102ea61074f565b005b6102f4610a1e565b005b34801561030257600080fd5b5061030b610cec565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561034b578082015181840152602081019050610330565b50505050905090810190601f1680156103785780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b6103e4828260006040519080825280601f01601f1916602001820160405280156103de5781602001602082028038833980820191505090505b506103e8565b5050565b6103f0611f1f565b6103f8610d8a565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561043157600080fd5b600860008560001916600019168152602001908152602001600020602060405190810160405290816000820160009054906101000a900460ff16600181111561047657fe5b600181111561048157fe5b8152505090506000600181111561049457fe5b816000015160018111156104a457fe5b14156105845782600690805190602001906104c0929190611f3e565b507f221dd4a47b82d98e10a2a0ebcfdd3314637ca70f414c6987ea6774a907cc06c26006604051808060200182810382528381815460018160011615610100020316600290048152602001915080546001816001161561010002031660029004801561056d5780601f106105425761010080835404028352916020019161056d565b820191906000526020600020905b81548152906001019060200180831161055057829003601f168201915b50509250505060405180910390a161058361074f565b5b60018081111561059057fe5b816000015160018111156105a057fe5b14156106805782600790805190602001906105bc929190611f3e565b507ff208790d4132e9accd72813d9f33fd116721b4adfe9e9223d6cbb41e1bca5225600760405180806020018281038252838181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156106695780601f1061063e57610100808354040283529160200191610669565b820191906000526020600020905b81548152906001019060200180831161064c57829003601f168201915b50509250505060405180910390a161067f610a1e565b5b50505050565b60086020528060005260406000206000915090508060000160009054906101000a900460ff16905081565b60068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107475780601f1061071c57610100808354040283529160200191610747565b820191906000526020600020905b81548152906001019060200180831161072a57829003601f168201915b505050505081565b60003073ffffffffffffffffffffffffffffffffffffffff16316107a76040805190810160405280600381526020017f55524c00000000000000000000000000000000000000000000000000000000008152506110e8565b1115610866577ffee95ecae0c8f7f0743ec0ad254c78ab75e5ecca9f1ddcd9f11f9a98124b96bc60405180806020018281038252604f8152602001807f4f7261636c697a652045544820717565727920776173204e4f542073656e742c81526020017f20706c656173652061646420736f6d652045544820746f20636f76657220666f81526020017f722074686520717565727920666565000000000000000000000000000000000081525060600191505060405180910390a1610a1b565b7ffee95ecae0c8f7f0743ec0ad254c78ab75e5ecca9f1ddcd9f11f9a98124b96bc6040518080602001828103825260398152602001807f4f7261636c697a6520455448207175657279207761732073656e742c2073746181526020017f6e64696e6720627920666f722074686520616e737765722e2e0000000000000081525060400191505060405180910390a16109b56040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250608060405190810160405280604181526020017f6a736f6e2868747470733a2f2f6170692e636f696e626173652e636f6d2f763281526020017f2f7072696365732f4554482d5553442f73706f74292e646174612e616d6f756e81526020017f74000000000000000000000000000000000000000000000000000000000000008152506114b8565b9050602060405190810160405280600060018111156109d057fe5b81525060086000836000191660001916815260200190815260200160002060008201518160000160006101000a81548160ff02191690836001811115610a1257fe5b02179055509050505b50565b60003073ffffffffffffffffffffffffffffffffffffffff1631610a766040805190810160405280600381526020017f55524c00000000000000000000000000000000000000000000000000000000008152506110e8565b1115610b35577ffee95ecae0c8f7f0743ec0ad254c78ab75e5ecca9f1ddcd9f11f9a98124b96bc60405180806020018281038252604f8152602001807f4f7261636c697a652042544320717565727920776173204e4f542073656e742c81526020017f20706c656173652061646420736f6d652045544820746f20636f76657220666f81526020017f722074686520717565727920666565000000000000000000000000000000000081525060600191505060405180910390a1610ce9565b7ffee95ecae0c8f7f0743ec0ad254c78ab75e5ecca9f1ddcd9f11f9a98124b96bc6040518080602001828103825260398152602001807f4f7261636c697a6520425443207175657279207761732073656e742c2073746181526020017f6e64696e6720627920666f722074686520616e737765722e2e0000000000000081525060400191505060405180910390a1610c846040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250608060405190810160405280604681526020017f6a736f6e2868747470733a2f2f6170692e636f696e6d61726b65746361702e6381526020017f6f6d2f76322f7469636b65722f312f292e646174612e71756f7465732e55534481526020017f2e707269636500000000000000000000000000000000000000000000000000008152506114b8565b9050602060405190810160405280600180811115610c9e57fe5b81525060086000836000191660001916815260200190815260200160002060008201518160000160006101000a81548160ff02191690836001811115610ce057fe5b02179055509050505b50565b60078054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d825780601f10610d5757610100808354040283529160200191610d82565b820191906000526020600020905b815481529060010190602001808311610d6557829003601f168201915b505050505081565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610dfa57506000610df86000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611a5a565b145b15610e0b57610e096000611a65565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610e9057600080fd5b505af1158015610ea4573d6000803e3d6000fd5b505050506040513d6020811015610eba57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611022576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610fa657600080fd5b505af1158015610fba573d6000803e3d6000fd5b505050506040513d6020811015610fd057600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156110a857600080fd5b505af11580156110bc573d6000803e3d6000fd5b505050506040513d60208110156110d257600080fd5b8101908080519060200190929190505050905090565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480611158575060006111566000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611a5a565b145b15611169576111676000611a65565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156111ee57600080fd5b505af1158015611202573d6000803e3d6000fd5b505050506040513d602081101561121857600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611380576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561130457600080fd5b505af1158015611318573d6000803e3d6000fd5b505050506040513d602081101561132e57600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561142a57808201518184015260208101905061140f565b50505050905090810190601f1680156114575780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801561147657600080fd5b505af115801561148a573d6000803e3d6000fd5b505050506040513d60208110156114a057600080fd5b81019080805190602001909291905050509050919050565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061152a575060006115286000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611a5a565b145b1561153b576115396000611a65565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156115c057600080fd5b505af11580156115d4573d6000803e3d6000fd5b505050506040513d60208110156115ea57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611752576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156116d657600080fd5b505af11580156116ea573d6000803e3d6000fd5b505050506040513d602081101561170057600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156117fc5780820151818401526020810190506117e1565b50505050905090810190601f1680156118295780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801561184857600080fd5b505af115801561185c573d6000803e3d6000fd5b505050506040513d602081101561187257600080fd5b8101908080519060200190929190505050905062030d403a02670de0b6b3a7640000018111156118a85760006001029150611a53565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adf59f9982600087876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015611960578082015181840152602081019050611945565b50505050905090810190601f16801561198d5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b838110156119c65780820151818401526020810190506119ab565b50505050905090810190601f1680156119f35780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b158015611a1457600080fd5b505af1158015611a28573d6000803e3d6000fd5b50505050506040513d6020811015611a3f57600080fd5b810190808051906020019092919050505091505b5092915050565b6000813b9050919050565b6000611a6f611a76565b9050919050565b600080611a96731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed611a5a565b1115611b3757731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611b2e6040805190810160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250611f05565b60019050611f02565b6000611b5673c03a2615d5efaf5f49f60b7bb6583eaec212fdf1611a5a565b1115611bf75773c03a2615d5efaf5f49f60b7bb6583eaec212fdf16000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611bee6040805190810160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250611f05565b60019050611f02565b6000611c1673b7a07bcf2ba2f2703b24c0691b5278999c59ac7e611a5a565b1115611cb75773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611cae6040805190810160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250611f05565b60019050611f02565b6000611cd673146500cfd35b22e4a392fe0adc06de1a1368ed48611a5a565b1115611d775773146500cfd35b22e4a392fe0adc06de1a1368ed486000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611d6e6040805190810160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250611f05565b60019050611f02565b6000611d96736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475611a5a565b1115611df957736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4756000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611f02565b6000611e187320e12a1f859b3feae5fb2a0a32c18f5a65555bbf611a5a565b1115611e7b577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611f02565b6000611e9a7351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa611a5a565b1115611efd577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611f02565b600090505b90565b8060029080519060200190611f1b929190611f3e565b5050565b60206040519081016040528060006001811115611f3857fe5b81525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611f7f57805160ff1916838001178555611fad565b82800160010185558215611fad579182015b82811115611fac578251825591602001919060010190611f91565b5b509050611fba9190611fbe565b5090565b611fe091905b80821115611fdc576000816000905550600101611fc4565b5090565b905600a165627a7a723058205847ea0c6108f213865234f321b774c53317b5bbb16bfcb674c143051dc3e4d60029",
  "sourceMap": "97:3385:0:-;;;670:10;662:5;;:18;;;;;;;;;;;;;;;;;;721:4;713:21;;;706:5;;;;;;;;;;;696:39;;;;;;;;;;;;826:42;798:3;;:71;;;;;;;;;;;;;;;;;;880:58;2929:4:1;920:17:0;;2755:4:1;898:19:0;;:39;880:17;;;:58;;;:::i;:::-;948:8;:6;;;:8;;;:::i;:::-;966:9;:7;;;:9;;;:::i;:::-;97:3385;;25467:114:1;3255:1;3249:3;;;;;;;;;;;3241:15;;;3240:49;;;;3287:1;3260:25;3280:3;;;;;;;;;;;3260:11;;;:25;;;:::i;:::-;:28;3240:49;3237:101;;;3303:35;2971:1;3303:19;;;:35;;;:::i;:::-;;3237:101;3373:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3373:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3373:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3373:16:1;;;;;;;;;;;;;;;;3352:37;;3360:8;;;;;;;;;;;3352:37;;;;3349:92;;;3424:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3424:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3424:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3424:16:1;;;;;;;;;;;;;;;;3403:8;;:38;;;;;;;;;;;;;;;;;;3349:92;25545:8;;;;;;;;;;;:21;;;25567:6;25545:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25545:29:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;25545:29:1;;;;25467:114;:::o;1680:889:0:-;2063:15;1821:4;1813:21;;;1786:24;;;;;;;;;;;;;;;;;;;:17;;;:24;;;:::i;:::-;:48;1782:781;;;1855:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1782:781;;;1981:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2081:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;;;:89;;;:::i;:::-;2063:107;;2213:38;;;;;;;;;2230:20;2213:38;;;;;;;;;;;2184:17;:26;2202:7;2184:26;;;;;;;;;;;;;;;;;:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1782:781;1680:889;:::o;2575:902::-;2959:16;2717:4;2709:21;;;2682:24;;;;;;;;;;;;;;;;;;;:17;;;:24;;;:::i;:::-;:48;2678:793;;;2751:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2678:793;;;2877:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2978:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;;;:95;;;:::i;:::-;2959:114;;3117:42;;;;;;;;;3134:24;3117:42;;;;;;;;;;;3087:17;:27;3105:8;3087:27;;;;;;;;;;;;;;;;;:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2678:793;2575:902;:::o;25882:150:1:-;25944:10;26010:5;25998:18;25989:27;;25975:51;;;:::o;3565:183::-;3628:4;3648:21;:19;;;:21;;;:::i;:::-;3641:28;;3565:183;;;:::o;5776:134::-;5852:4;3255:1;3249:3;;;;;;;;;;;3241:15;;;3240:49;;;;3287:1;3260:25;3280:3;;;;;;;;;;;3260:11;;;:25;;;:::i;:::-;:28;3240:49;3237:101;;;3303:35;2971:1;3303:19;;;:35;;;:::i;:::-;;3237:101;3373:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3373:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3373:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3373:16:1;;;;;;;;;;;;;;;;3352:37;;3360:8;;;;;;;;;;;3352:37;;;;3349:92;;;3424:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3424:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3424:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3424:16:1;;;;;;;;;;;;;;;;3403:8;;:38;;;;;;;;;;;;;;;;;;3349:92;5874:8;;;;;;;;;;;:17;;;5892:10;5874:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5874:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5874:29:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5874:29:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5874:29:1;;;;;;;;;;;;;;;;5867:36;;5776:134;;;:::o;6081:306::-;6166:10;6187;3255:1;3249:3;;;;;;;;;;;3241:15;;;3240:49;;;;3287:1;3260:25;3280:3;;;;;;;;;;;3260:11;;;:25;;;:::i;:::-;:28;3240:49;3237:101;;;3303:35;2971:1;3303:19;;;:35;;;:::i;:::-;;3237:101;3373:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3373:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3373:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3373:16:1;;;;;;;;;;;;;;;;3352:37;;3360:8;;;;;;;;;;;3352:37;;;;3349:92;;;3424:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3424:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3424:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3424:16:1;;;;;;;;;;;;;;;;3403:8;;:38;;;;;;;;;;;;;;;;;;3349:92;6200:8;;;;;;;;;;;:17;;;6218:10;6200:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6200:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6200:29:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6200:29:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6200:29:1;;;;;;;;;;;;;;;;6187:42;;6273:6;6261:11;:18;6251:7;:28;6243:5;:36;6239:50;;;6288:1;6281:8;;;;;;6239:50;6333:8;;;;;;;;;;;:14;;;6354:5;6361:1;6364:10;6376:3;6333:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6333:47:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6333:47:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6333:47:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6333:47:1;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6333:47:1;;;;;;;;;;;;;;;;6326:54;;3452:1;6081:306;;;;;:::o;3753:1749::-;3801:4;3876:1;3820:55;3832:42;3820:11;;;:55;;;:::i;:::-;:57;3816:245;;;3930:42;3902:3;;:71;;;;;;;;;;;;;;;;;;3987:38;;;;;;;;;;;;;;;;;;;:23;;;:38;;;:::i;:::-;4046:4;4039:11;;;;3816:245;4130:1;4074:55;4086:42;4074:11;;;:55;;;:::i;:::-;:57;4070:254;;;4192:42;4164:3;;:71;;;;;;;;;;;;;;;;;;4249:39;;;;;;;;;;;;;;;;;;;:23;;;:39;;;:::i;:::-;4309:4;4302:11;;;;4070:254;4393:1;4337:55;4349:42;4337:11;;;:55;;;:::i;:::-;:57;4333:249;;;4453:42;4425:3;;:71;;;;;;;;;;;;;;;;;;4510:36;;;;;;;;;;;;;;;;;;;:23;;;:36;;;:::i;:::-;4567:4;4560:11;;;;4333:249;4651:1;4595:55;4607:42;4595:11;;;:55;;;:::i;:::-;:57;4591:253;;;4713:42;4685:3;;:71;;;;;;;;;;;;;;;;;;4770:38;;;;;;;;;;;;;;;;;;;:23;;;:38;;;:::i;:::-;4829:4;4822:11;;;;4591:253;4913:1;4857:55;4869:42;4857:11;;;:55;;;:::i;:::-;:57;4853:201;;;4975:42;4947:3;;:71;;;;;;;;;;;;;;;;;;5039:4;5032:11;;;;4853:201;5123:1;5067:55;5079:42;5067:11;;;:55;;;:::i;:::-;:57;5063:200;;;5184:42;5156:3;;:71;;;;;;;;;;;;;;;;;;5248:4;5241:11;;;;5063:200;5332:1;5276:55;5288:42;5276:11;;;:55;;;:::i;:::-;:57;5272:202;;;5395:42;5367:3;;:71;;;;;;;;;;;;;;;;;;5459:4;5452:11;;;;5272:202;5490:5;5483:12;;3753:1749;;:::o;34001:118::-;34099:13;34075:21;:37;;;;;;;;;;;;:::i;:::-;;34001:118;:::o;97:3385:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "97:3385:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;97:3385:0;1044:8;;;1568:106;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1568:106:0;;;;;;;;;;;;;;;;;;;;;;;5508:111:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5508:111:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1065:497:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1065:497:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;517:62;;8:9:-1;5:2;;;30:1;27;20:12;5:2;517:62:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;162:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;162:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;162:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1680:889;;;;;;2575:902;;;;;;188:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;188:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;188:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1568:106;1614:13;1654:4;1646:21;;;1639:28;;1568:106;:::o;5508:111:1:-;5574:38;5585:4;5591:6;5609:1;5599:12;;;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;5599:12:1;;;;5574:10;:38::i;:::-;5508:111;;:::o;1065:497:0:-;1199:25;;:::i;:::-;1168:20;:18;:20::i;:::-;1154:34;;:10;:34;;;1146:43;;;;;;;;1227:17;:21;1245:2;1227:21;;;;;;;;;;;;;;;;;1199:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1274:20;1262:32;;;;;;;;:1;:8;;;:32;;;;;;;;;1258:140;;;1318:6;1309;:15;;;;;;;;;;;;:::i;:::-;;1343:22;1358:6;1343:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1379:8;:6;:8::i;:::-;1258:140;1424:24;1412:36;;;;;;;;:1;:8;;;:36;;;;;;;;;1408:146;;;1472:6;1463;:15;;;;;;;;;;;;:::i;:::-;;1497:23;1513:6;1497:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1534:9;:7;:9::i;:::-;1408:146;1065:497;;;;:::o;517:62::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;162:20::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1680:889::-;2063:15;1821:4;1813:21;;;1786:24;;;;;;;;;;;;;;;;;;;:17;:24::i;:::-;:48;1782:781;;;1855:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1782:781;;;1981:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2081:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;:89::i;:::-;2063:107;;2213:38;;;;;;;;;2230:20;2213:38;;;;;;;;;;;2184:17;:26;2202:7;2184:26;;;;;;;;;;;;;;;;;:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1782:781;1680:889;:::o;2575:902::-;2959:16;2717:4;2709:21;;;2682:24;;;;;;;;;;;;;;;;;;;:17;:24::i;:::-;:48;2678:793;;;2751:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2678:793;;;2877:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2978:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;:95::i;:::-;2959:114;;3117:42;;;;;;;;;3134:24;3117:42;;;;;;;;;;;3087:17;:27;3105:8;3087:27;;;;;;;;;;;;;;;;;:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2678:793;2575:902;:::o;188:20::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;25350:112:1:-;25410:7;3255:1;3249:3;;;;;;;;;;;3241:15;;;3240:49;;;;3287:1;3260:25;3280:3;;;;;;;;;;;3260:11;:25::i;:::-;:28;3240:49;3237:101;;;3303:35;2971:1;3303:19;:35::i;:::-;;3237:101;3373:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3373:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3373:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3373:16:1;;;;;;;;;;;;;;;;3352:37;;3360:8;;;;;;;;;;;3352:37;;;;3349:92;;;3424:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3424:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3424:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3424:16:1;;;;;;;;;;;;;;;;3403:8;;:38;;;;;;;;;;;;;;;;;;3349:92;25435:8;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25435:20:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;25435:20:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;25435:20:1;;;;;;;;;;;;;;;;25428:27;;25350:112;:::o;5776:134::-;5852:4;3255:1;3249:3;;;;;;;;;;;3241:15;;;3240:49;;;;3287:1;3260:25;3280:3;;;;;;;;;;;3260:11;:25::i;:::-;:28;3240:49;3237:101;;;3303:35;2971:1;3303:19;:35::i;:::-;;3237:101;3373:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3373:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3373:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3373:16:1;;;;;;;;;;;;;;;;3352:37;;3360:8;;;;;;;;;;;3352:37;;;;3349:92;;;3424:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3424:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3424:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3424:16:1;;;;;;;;;;;;;;;;3403:8;;:38;;;;;;;;;;;;;;;;;;3349:92;5874:8;;;;;;;;;;;:17;;;5892:10;5874:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5874:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5874:29:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5874:29:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5874:29:1;;;;;;;;;;;;;;;;5867:36;;5776:134;;;:::o;6081:306::-;6166:10;6187;3255:1;3249:3;;;;;;;;;;;3241:15;;;3240:49;;;;3287:1;3260:25;3280:3;;;;;;;;;;;3260:11;:25::i;:::-;:28;3240:49;3237:101;;;3303:35;2971:1;3303:19;:35::i;:::-;;3237:101;3373:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3373:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3373:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3373:16:1;;;;;;;;;;;;;;;;3352:37;;3360:8;;;;;;;;;;;3352:37;;;;3349:92;;;3424:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3424:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3424:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3424:16:1;;;;;;;;;;;;;;;;3403:8;;:38;;;;;;;;;;;;;;;;;;3349:92;6200:8;;;;;;;;;;;:17;;;6218:10;6200:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6200:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6200:29:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6200:29:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6200:29:1;;;;;;;;;;;;;;;;6187:42;;6273:6;6261:11;:18;6251:7;:28;6243:5;:36;6239:50;;;6288:1;6281:8;;;;;;6239:50;6333:8;;;;;;;;;;;:14;;;6354:5;6361:1;6364:10;6376:3;6333:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6333:47:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6333:47:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6333:47:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6333:47:1;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6333:47:1;;;;;;;;;;;;;;;;6326:54;;3452:1;6081:306;;;;;:::o;25882:150::-;25944:10;26010:5;25998:18;25989:27;;25975:51;;;:::o;3565:183::-;3628:4;3648:21;:19;:21::i;:::-;3641:28;;3565:183;;;:::o;3753:1749::-;3801:4;3876:1;3820:55;3832:42;3820:11;:55::i;:::-;:57;3816:245;;;3930:42;3902:3;;:71;;;;;;;;;;;;;;;;;;3987:38;;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;4046:4;4039:11;;;;3816:245;4130:1;4074:55;4086:42;4074:11;:55::i;:::-;:57;4070:254;;;4192:42;4164:3;;:71;;;;;;;;;;;;;;;;;;4249:39;;;;;;;;;;;;;;;;;;;:23;:39::i;:::-;4309:4;4302:11;;;;4070:254;4393:1;4337:55;4349:42;4337:11;:55::i;:::-;:57;4333:249;;;4453:42;4425:3;;:71;;;;;;;;;;;;;;;;;;4510:36;;;;;;;;;;;;;;;;;;;:23;:36::i;:::-;4567:4;4560:11;;;;4333:249;4651:1;4595:55;4607:42;4595:11;:55::i;:::-;:57;4591:253;;;4713:42;4685:3;;:71;;;;;;;;;;;;;;;;;;4770:38;;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;4829:4;4822:11;;;;4591:253;4913:1;4857:55;4869:42;4857:11;:55::i;:::-;:57;4853:201;;;4975:42;4947:3;;:71;;;;;;;;;;;;;;;;;;5039:4;5032:11;;;;4853:201;5123:1;5067:55;5079:42;5067:11;:55::i;:::-;:57;5063:200;;;5184:42;5156:3;;:71;;;;;;;;;;;;;;;;;;5248:4;5241:11;;;;5063:200;5332:1;5276:55;5288:42;5276:11;:55::i;:::-;:57;5272:202;;;5395:42;5367:3;;:71;;;;;;;;;;;;;;;;;;5459:4;5452:11;;;;5272:202;5490:5;5483:12;;3753:1749;;:::o;34001:118::-;34099:13;34075:21;:37;;;;;;;;;;;;:::i;:::-;;34001:118;:::o;97:3385:0:-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.21;\nimport \"installed_contracts/oraclize-api/contracts/usingOraclize.sol\";\n\ncontract OraclizeTest is usingOraclize {\n\n    address owner;\n    string public ETHUSD;\n    string public BTCUSD;\n\n    event LogInfo(string description);\n    event LogPriceUpdate(string price);\n    event LogPriceUpdate2(string price);\n    event LogUpdate(address indexed _owner, uint indexed _balance);\n    enum oraclizeState { ForEth, ForBitcoin }\n\n    struct oraclizeCallback {\n        oraclizeState oState;\n    }\n\n    mapping (bytes32 => oraclizeCallback) public oraclizeCallbacks;\n\n    // Constructor\n    function OraclizeTest()\n    payable\n    public {\n        owner = msg.sender;\n\n        emit LogUpdate(owner, address(this).balance);\n\n        // Replace the next line with your version:\n        OAR = OraclizeAddrResolverI(0x6f485C8BF6fc43eA212E93BBF8ce046C7f1cb475);\n\n        oraclize_setProof(proofType_TLSNotary | proofStorage_IPFS);\n        update();\n        update2();\n    }\n\n    // Fallback function\n    function()\n    public{\n        revert();\n    }\n\n    function __callback(bytes32 id, string result, bytes proof)\n    public {\n        require(msg.sender == oraclize_cbAddress());\n        oraclizeCallback memory o = oraclizeCallbacks[id];\n        if (o.oState == oraclizeState.ForEth){\n            ETHUSD = result;\n            emit LogPriceUpdate(ETHUSD);\n            update();\n        } \n        if (o.oState == oraclizeState.ForBitcoin){\n            BTCUSD = result;\n            emit LogPriceUpdate2(BTCUSD);\n            update2();\n        } \n\n    }\n\n    function getBalance()\n    public\n    returns (uint _balance) {\n        return address(this).balance;\n    }\n\n    function update()\n    payable\n    public {\n        // Check if we have enough remaining funds\n        if (oraclize_getPrice(\"URL\") > address(this).balance) {\n            emit LogInfo(\"Oraclize ETH query was NOT sent, please add some ETH to cover for the query fee\");\n        } else {\n            emit LogInfo(\"Oraclize ETH query was sent, standing by for the answer..\");\n            bytes32 queryId = oraclize_query(\"URL\",\"json(https://api.coinbase.com/v2/prices/ETH-USD/spot).data.amount\");\n            oraclizeCallbacks[queryId] = oraclizeCallback(oraclizeState.ForEth);\n   \n            // Using XPath to to fetch the right element in the JSON response\n            // oraclize_query(\"URL\", \"json(https://api.coinbase.com/v2/prices/ETH-USD/spot).data.amount\");\n            // oraclize_query(\"URL\", \"json(https://api.coinmarketcap.com/v2/ticker/1/).data.quotes.USD.price\");\n        }\n    }\n\n    function update2()\n    payable\n    public {\n        // Check if we have enough remaining funds\n        if (oraclize_getPrice(\"URL\") > address(this).balance) {\n            emit LogInfo(\"Oraclize BTC query was NOT sent, please add some ETH to cover for the query fee\");\n        } else {\n            emit LogInfo(\"Oraclize BTC query was sent, standing by for the answer..\");\n            bytes32 queryId2 = oraclize_query(\"URL\", \"json(https://api.coinmarketcap.com/v2/ticker/1/).data.quotes.USD.price\");\n            oraclizeCallbacks[queryId2] = oraclizeCallback(oraclizeState.ForBitcoin);\n   \n            // Using XPath to to fetch the right element in the JSON response\n            // oraclize_query(\"URL\", \"json(https://api.coinbase.com/v2/prices/ETH-USD/spot).data.amount\");\n            // oraclize_query(\"URL\", \"json(https://api.coinmarketcap.com/v2/ticker/1/).data.quotes.USD.price\");\n        }\n    }\n\n\n\n}",
  "sourcePath": "/Users/jeffreyyu/Desktop/ClassRelated/CS359B/cs359b-diy-a-new-decentralized-index/oracleDapp/contracts/OraclizeTest.sol",
  "ast": {
    "absolutePath": "/Users/jeffreyyu/Desktop/ClassRelated/CS359B/cs359b-diy-a-new-decentralized-index/oracleDapp/contracts/OraclizeTest.sol",
    "exportedSymbols": {
      "OraclizeTest": [
        230
      ]
    },
    "id": 231,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "installed_contracts/oraclize-api/contracts/usingOraclize.sol",
        "file": "installed_contracts/oraclize-api/contracts/usingOraclize.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 231,
        "sourceUnit": 6053,
        "src": "25:70:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6052,
              "src": "122:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$6052",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "122:13:0"
          }
        ],
        "contractDependencies": [
          6052
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 230,
        "linearizedBaseContracts": [
          230,
          6052
        ],
        "name": "OraclizeTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 230,
            "src": "143:13:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "143:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 8,
            "name": "ETHUSD",
            "nodeType": "VariableDeclaration",
            "scope": 230,
            "src": "162:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 7,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "162:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 10,
            "name": "BTCUSD",
            "nodeType": "VariableDeclaration",
            "scope": 230,
            "src": "188:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 9,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "188:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 14,
            "name": "LogInfo",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12,
                  "indexed": false,
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "scope": 14,
                  "src": "229:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "229:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "228:20:0"
            },
            "src": "215:34:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 18,
            "name": "LogPriceUpdate",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16,
                  "indexed": false,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 18,
                  "src": "275:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "275:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "274:14:0"
            },
            "src": "254:35:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 22,
            "name": "LogPriceUpdate2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20,
                  "indexed": false,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 22,
                  "src": "316:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "316:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "315:14:0"
            },
            "src": "294:36:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 28,
            "name": "LogUpdate",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24,
                  "indexed": true,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "351:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "351:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26,
                  "indexed": true,
                  "name": "_balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "375:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "375:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "350:47:0"
            },
            "src": "335:63:0"
          },
          {
            "canonicalName": "OraclizeTest.oraclizeState",
            "id": 31,
            "members": [
              {
                "id": 29,
                "name": "ForEth",
                "nodeType": "EnumValue",
                "src": "424:6:0"
              },
              {
                "id": 30,
                "name": "ForBitcoin",
                "nodeType": "EnumValue",
                "src": "432:10:0"
              }
            ],
            "name": "oraclizeState",
            "nodeType": "EnumDefinition",
            "src": "403:41:0"
          },
          {
            "canonicalName": "OraclizeTest.oraclizeCallback",
            "id": 34,
            "members": [
              {
                "constant": false,
                "id": 33,
                "name": "oState",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "484:20:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_oraclizeState_$31",
                  "typeString": "enum OraclizeTest.oraclizeState"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 32,
                  "name": "oraclizeState",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 31,
                  "src": "484:13:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_oraclizeState_$31",
                    "typeString": "enum OraclizeTest.oraclizeState"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "oraclizeCallback",
            "nodeType": "StructDefinition",
            "scope": 230,
            "src": "450:61:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 38,
            "name": "oraclizeCallbacks",
            "nodeType": "VariableDeclaration",
            "scope": 230,
            "src": "517:62:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$34_storage_$",
              "typeString": "mapping(bytes32 => struct OraclizeTest.oraclizeCallback)"
            },
            "typeName": {
              "id": 37,
              "keyType": {
                "id": 35,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "526:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "517:37:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$34_storage_$",
                "typeString": "mapping(bytes32 => struct OraclizeTest.oraclizeCallback)"
              },
              "valueType": {
                "contractScope": null,
                "id": 36,
                "name": "oraclizeCallback",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 34,
                "src": "537:16:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_oraclizeCallback_$34_storage_ptr",
                  "typeString": "struct OraclizeTest.oraclizeCallback"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 72,
              "nodeType": "Block",
              "src": "652:330:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 41,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "662:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 42,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6067,
                        "src": "670:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 43,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "670:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "662:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 45,
                  "nodeType": "ExpressionStatement",
                  "src": "662:18:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 47,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "706:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 49,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6086,
                              "src": "721:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OraclizeTest_$230",
                                "typeString": "contract OraclizeTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_OraclizeTest_$230",
                                "typeString": "contract OraclizeTest"
                              }
                            ],
                            "id": 48,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "713:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 50,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "713:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 51,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "713:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 46,
                      "name": "LogUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "696:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "696:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53,
                  "nodeType": "EmitStatement",
                  "src": "691:44:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 58,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 54,
                      "name": "OAR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 408,
                      "src": "798:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$348",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "307836663438354338424636666334336541323132453933424246386365303436433766316362343735",
                          "id": 56,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "826:42:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x6f485C8BF6fc43eA212E93BBF8ce046C7f1cb475"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 55,
                        "name": "OraclizeAddrResolverI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 348,
                        "src": "804:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OraclizeAddrResolverI_$348_$",
                          "typeString": "type(contract OraclizeAddrResolverI)"
                        }
                      },
                      "id": 57,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "804:65:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$348",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "src": "798:71:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$348",
                      "typeString": "contract OraclizeAddrResolverI"
                    }
                  },
                  "id": 59,
                  "nodeType": "ExpressionStatement",
                  "src": "798:71:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        },
                        "id": 63,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 61,
                          "name": "proofType_TLSNotary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 379,
                          "src": "898:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "|",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 62,
                          "name": "proofStorage_IPFS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 391,
                          "src": "920:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "src": "898:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      ],
                      "id": 60,
                      "name": "oraclize_setProof",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3694,
                      "src": "880:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes1_$returns$__$",
                        "typeString": "function (bytes1)"
                      }
                    },
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "880:58:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65,
                  "nodeType": "ExpressionStatement",
                  "src": "880:58:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 66,
                      "name": "update",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 190,
                      "src": "948:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "948:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "948:8:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 69,
                      "name": "update2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 229,
                      "src": "966:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "966:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 71,
                  "nodeType": "ExpressionStatement",
                  "src": "966:9:0"
                }
              ]
            },
            "documentation": null,
            "id": 73,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "OraclizeTest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "626:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "652:0:0"
            },
            "scope": 230,
            "src": "605:377:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 79,
              "nodeType": "Block",
              "src": "1034:25:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 76,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6072,
                        6073
                      ],
                      "referencedDeclaration": 6072,
                      "src": "1044:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1044:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "1044:8:0"
                }
              ]
            },
            "documentation": null,
            "id": 80,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1021:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1034:0:0"
            },
            "scope": 230,
            "src": "1013:46:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 139,
              "nodeType": "Block",
              "src": "1136:426:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 94,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 90,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6067,
                            "src": "1154:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 91,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1154:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 92,
                            "name": "oraclize_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3681,
                            "src": "1168:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 93,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1168:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1154:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 89,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6070,
                        6071
                      ],
                      "referencedDeclaration": 6070,
                      "src": "1146:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 95,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1146:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 96,
                  "nodeType": "ExpressionStatement",
                  "src": "1146:43:0"
                },
                {
                  "assignments": [
                    98
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98,
                      "name": "o",
                      "nodeType": "VariableDeclaration",
                      "scope": 140,
                      "src": "1199:25:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_oraclizeCallback_$34_memory_ptr",
                        "typeString": "struct OraclizeTest.oraclizeCallback"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 97,
                        "name": "oraclizeCallback",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 34,
                        "src": "1199:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_oraclizeCallback_$34_storage_ptr",
                          "typeString": "struct OraclizeTest.oraclizeCallback"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 102,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 99,
                      "name": "oraclizeCallbacks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "1227:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$34_storage_$",
                        "typeString": "mapping(bytes32 => struct OraclizeTest.oraclizeCallback storage ref)"
                      }
                    },
                    "id": 101,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 100,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82,
                      "src": "1245:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1227:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_oraclizeCallback_$34_storage",
                      "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1199:49:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_oraclizeState_$31",
                      "typeString": "enum OraclizeTest.oraclizeState"
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 103,
                        "name": "o",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98,
                        "src": "1262:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_oraclizeCallback_$34_memory_ptr",
                          "typeString": "struct OraclizeTest.oraclizeCallback memory"
                        }
                      },
                      "id": 104,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "oState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33,
                      "src": "1262:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$31",
                        "typeString": "enum OraclizeTest.oraclizeState"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 105,
                        "name": "oraclizeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "1274:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_oraclizeState_$31_$",
                          "typeString": "type(enum OraclizeTest.oraclizeState)"
                        }
                      },
                      "id": 106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ForEth",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1274:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$31",
                        "typeString": "enum OraclizeTest.oraclizeState"
                      }
                    },
                    "src": "1262:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 120,
                  "nodeType": "IfStatement",
                  "src": "1258:140:0",
                  "trueBody": {
                    "id": 119,
                    "nodeType": "Block",
                    "src": "1295:103:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 108,
                            "name": "ETHUSD",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "1309:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 109,
                            "name": "result",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84,
                            "src": "1318:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1309:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 111,
                        "nodeType": "ExpressionStatement",
                        "src": "1309:15:0"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 113,
                              "name": "ETHUSD",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8,
                              "src": "1358:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            ],
                            "id": 112,
                            "name": "LogPriceUpdate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "1343:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1343:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 115,
                        "nodeType": "EmitStatement",
                        "src": "1338:27:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 116,
                            "name": "update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 190,
                            "src": "1379:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1379:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 118,
                        "nodeType": "ExpressionStatement",
                        "src": "1379:8:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_oraclizeState_$31",
                      "typeString": "enum OraclizeTest.oraclizeState"
                    },
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 121,
                        "name": "o",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98,
                        "src": "1412:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_oraclizeCallback_$34_memory_ptr",
                          "typeString": "struct OraclizeTest.oraclizeCallback memory"
                        }
                      },
                      "id": 122,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "oState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33,
                      "src": "1412:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$31",
                        "typeString": "enum OraclizeTest.oraclizeState"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 123,
                        "name": "oraclizeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "1424:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_oraclizeState_$31_$",
                          "typeString": "type(enum OraclizeTest.oraclizeState)"
                        }
                      },
                      "id": 124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ForBitcoin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1424:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$31",
                        "typeString": "enum OraclizeTest.oraclizeState"
                      }
                    },
                    "src": "1412:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 138,
                  "nodeType": "IfStatement",
                  "src": "1408:146:0",
                  "trueBody": {
                    "id": 137,
                    "nodeType": "Block",
                    "src": "1449:105:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 126,
                            "name": "BTCUSD",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "1463:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 127,
                            "name": "result",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84,
                            "src": "1472:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1463:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 129,
                        "nodeType": "ExpressionStatement",
                        "src": "1463:15:0"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 131,
                              "name": "BTCUSD",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10,
                              "src": "1513:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            ],
                            "id": 130,
                            "name": "LogPriceUpdate2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22,
                            "src": "1497:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1497:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 133,
                        "nodeType": "EmitStatement",
                        "src": "1492:28:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 134,
                            "name": "update2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 229,
                            "src": "1534:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1534:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 136,
                        "nodeType": "ExpressionStatement",
                        "src": "1534:9:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 140,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "1085:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1085:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 84,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "1097:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 83,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1097:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "1112:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1112:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1084:40:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1136:0:0"
            },
            "scope": 230,
            "src": "1065:497:0",
            "stateMutability": "nonpayable",
            "superFunction": 640,
            "visibility": "public"
          },
          {
            "body": {
              "id": 150,
              "nodeType": "Block",
              "src": "1629:45:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 146,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6086,
                          "src": "1654:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OraclizeTest_$230",
                            "typeString": "contract OraclizeTest"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_OraclizeTest_$230",
                            "typeString": "contract OraclizeTest"
                          }
                        ],
                        "id": 145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1646:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1646:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1646:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 144,
                  "id": 149,
                  "nodeType": "Return",
                  "src": "1639:28:0"
                }
              ]
            },
            "documentation": null,
            "id": 151,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "getBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1587:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 143,
                  "name": "_balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "1614:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1614:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1613:15:0"
            },
            "scope": 230,
            "src": "1568:106:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 189,
              "nodeType": "Block",
              "src": "1721:848:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1804:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          }
                        ],
                        "id": 154,
                        "name": "oraclize_getPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          655,
                          673
                        ],
                        "referencedDeclaration": 655,
                        "src": "1786:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) returns (uint256)"
                        }
                      },
                      "id": 156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1786:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 158,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6086,
                            "src": "1821:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OraclizeTest_$230",
                              "typeString": "contract OraclizeTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OraclizeTest_$230",
                              "typeString": "contract OraclizeTest"
                            }
                          ],
                          "id": 157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1813:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1813:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1813:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1786:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 187,
                    "nodeType": "Block",
                    "src": "1962:601:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a6520455448207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                              "id": 168,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1989:59:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_92558dea68f12d65c4a2f4516135d351df59a49eeb3667f4729fc6b0d7b950f2",
                                "typeString": "literal_string \"Oraclize ETH query was sent, standing by for the answer..\""
                              },
                              "value": "Oraclize ETH query was sent, standing by for the answer.."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_92558dea68f12d65c4a2f4516135d351df59a49eeb3667f4729fc6b0d7b950f2",
                                "typeString": "literal_string \"Oraclize ETH query was sent, standing by for the answer..\""
                              }
                            ],
                            "id": 167,
                            "name": "LogInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
                            "src": "1981:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1981:68:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 170,
                        "nodeType": "EmitStatement",
                        "src": "1976:73:0"
                      },
                      {
                        "assignments": [
                          172
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 172,
                            "name": "queryId",
                            "nodeType": "VariableDeclaration",
                            "scope": 190,
                            "src": "2063:15:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 171,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "2063:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 177,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "55524c",
                              "id": 174,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2096:5:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              "value": "URL"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6a736f6e2868747470733a2f2f6170692e636f696e626173652e636f6d2f76322f7072696365732f4554482d5553442f73706f74292e646174612e616d6f756e74",
                              "id": 175,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2102:67:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1cb3d5ca41f100645c3363042b531a7bc4905d034354e722c749236677568a8d",
                                "typeString": "literal_string \"json(https://api.coinbase.com/v2/prices/ETH-USD/spot).data.amount\""
                              },
                              "value": "json(https://api.coinbase.com/v2/prices/ETH-USD/spot).data.amount"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1cb3d5ca41f100645c3363042b531a7bc4905d034354e722c749236677568a8d",
                                "typeString": "literal_string \"json(https://api.coinbase.com/v2/prices/ETH-USD/spot).data.amount\""
                              }
                            ],
                            "id": 173,
                            "name": "oraclize_query",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              713,
                              755,
                              801,
                              845,
                              888,
                              933,
                              982,
                              1029,
                              1076,
                              1125,
                              1178,
                              1229,
                              1266,
                              1306,
                              1349,
                              1389,
                              1434,
                              1482,
                              1533,
                              1581,
                              1634,
                              1690,
                              1749,
                              1805,
                              1866,
                              1930,
                              1997,
                              2061,
                              2130,
                              2202,
                              2277,
                              2349,
                              2396,
                              2445,
                              2498,
                              2549,
                              2586,
                              2626,
                              2669,
                              2709,
                              2754,
                              2802,
                              2853,
                              2901,
                              2954,
                              3010,
                              3069,
                              3125,
                              3186,
                              3250,
                              3317,
                              3381,
                              3450,
                              3522,
                              3597,
                              3669
                            ],
                            "referencedDeclaration": 713,
                            "src": "2081:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (string memory,string memory) returns (bytes32)"
                            }
                          },
                          "id": 176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2081:89:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2063:107:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 178,
                              "name": "oraclizeCallbacks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38,
                              "src": "2184:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$34_storage_$",
                                "typeString": "mapping(bytes32 => struct OraclizeTest.oraclizeCallback storage ref)"
                              }
                            },
                            "id": 180,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 179,
                              "name": "queryId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 172,
                              "src": "2202:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2184:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$34_storage",
                              "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 182,
                                  "name": "oraclizeState",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31,
                                  "src": "2230:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_oraclizeState_$31_$",
                                    "typeString": "type(enum OraclizeTest.oraclizeState)"
                                  }
                                },
                                "id": 183,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "ForEth",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "2230:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_oraclizeState_$31",
                                  "typeString": "enum OraclizeTest.oraclizeState"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_oraclizeState_$31",
                                  "typeString": "enum OraclizeTest.oraclizeState"
                                }
                              ],
                              "id": 181,
                              "name": "oraclizeCallback",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "2213:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_oraclizeCallback_$34_storage_ptr_$",
                                "typeString": "type(struct OraclizeTest.oraclizeCallback storage pointer)"
                              }
                            },
                            "id": 184,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2213:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$34_memory",
                              "typeString": "struct OraclizeTest.oraclizeCallback memory"
                            }
                          },
                          "src": "2184:67:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_oraclizeCallback_$34_storage",
                            "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                          }
                        },
                        "id": 186,
                        "nodeType": "ExpressionStatement",
                        "src": "2184:67:0"
                      }
                    ]
                  },
                  "id": 188,
                  "nodeType": "IfStatement",
                  "src": "1782:781:0",
                  "trueBody": {
                    "id": 166,
                    "nodeType": "Block",
                    "src": "1836:120:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a652045544820717565727920776173204e4f542073656e742c20706c656173652061646420736f6d652045544820746f20636f76657220666f722074686520717565727920666565",
                              "id": 163,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1863:81:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_86b4e52b9d7e6dbfbdb9744fcb31ec13df7de8e1138baadabd3c7def0014c40b",
                                "typeString": "literal_string \"Oraclize ETH query was NOT sent, please add some ETH to cover for the query fee\""
                              },
                              "value": "Oraclize ETH query was NOT sent, please add some ETH to cover for the query fee"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_86b4e52b9d7e6dbfbdb9744fcb31ec13df7de8e1138baadabd3c7def0014c40b",
                                "typeString": "literal_string \"Oraclize ETH query was NOT sent, please add some ETH to cover for the query fee\""
                              }
                            ],
                            "id": 162,
                            "name": "LogInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
                            "src": "1855:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1855:90:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 165,
                        "nodeType": "EmitStatement",
                        "src": "1850:95:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 190,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "update",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 152,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1695:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 153,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1721:0:0"
            },
            "scope": 230,
            "src": "1680:889:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 228,
              "nodeType": "Block",
              "src": "2617:860:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2700:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          }
                        ],
                        "id": 193,
                        "name": "oraclize_getPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          655,
                          673
                        ],
                        "referencedDeclaration": 655,
                        "src": "2682:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) returns (uint256)"
                        }
                      },
                      "id": 195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2682:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 197,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6086,
                            "src": "2717:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OraclizeTest_$230",
                              "typeString": "contract OraclizeTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OraclizeTest_$230",
                              "typeString": "contract OraclizeTest"
                            }
                          ],
                          "id": 196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2709:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2709:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2709:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2682:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 226,
                    "nodeType": "Block",
                    "src": "2858:613:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a6520425443207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                              "id": 207,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2885:59:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6ac407d1c2ba3f8046de888d33b594dec521d7891fc5dd4c92883338b6b9d0ac",
                                "typeString": "literal_string \"Oraclize BTC query was sent, standing by for the answer..\""
                              },
                              "value": "Oraclize BTC query was sent, standing by for the answer.."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_6ac407d1c2ba3f8046de888d33b594dec521d7891fc5dd4c92883338b6b9d0ac",
                                "typeString": "literal_string \"Oraclize BTC query was sent, standing by for the answer..\""
                              }
                            ],
                            "id": 206,
                            "name": "LogInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
                            "src": "2877:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2877:68:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 209,
                        "nodeType": "EmitStatement",
                        "src": "2872:73:0"
                      },
                      {
                        "assignments": [
                          211
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 211,
                            "name": "queryId2",
                            "nodeType": "VariableDeclaration",
                            "scope": 229,
                            "src": "2959:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 210,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "2959:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 216,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "55524c",
                              "id": 213,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2993:5:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              "value": "URL"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6a736f6e2868747470733a2f2f6170692e636f696e6d61726b65746361702e636f6d2f76322f7469636b65722f312f292e646174612e71756f7465732e5553442e7072696365",
                              "id": 214,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3000:72:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d427b349ec7ef8a6b76bda49b4d30de4f58341deb151e97d4ea42791801d2917",
                                "typeString": "literal_string \"json(https://api.coinmarketcap.com/v2/ticker/1/).data.quotes.USD.price\""
                              },
                              "value": "json(https://api.coinmarketcap.com/v2/ticker/1/).data.quotes.USD.price"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d427b349ec7ef8a6b76bda49b4d30de4f58341deb151e97d4ea42791801d2917",
                                "typeString": "literal_string \"json(https://api.coinmarketcap.com/v2/ticker/1/).data.quotes.USD.price\""
                              }
                            ],
                            "id": 212,
                            "name": "oraclize_query",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              713,
                              755,
                              801,
                              845,
                              888,
                              933,
                              982,
                              1029,
                              1076,
                              1125,
                              1178,
                              1229,
                              1266,
                              1306,
                              1349,
                              1389,
                              1434,
                              1482,
                              1533,
                              1581,
                              1634,
                              1690,
                              1749,
                              1805,
                              1866,
                              1930,
                              1997,
                              2061,
                              2130,
                              2202,
                              2277,
                              2349,
                              2396,
                              2445,
                              2498,
                              2549,
                              2586,
                              2626,
                              2669,
                              2709,
                              2754,
                              2802,
                              2853,
                              2901,
                              2954,
                              3010,
                              3069,
                              3125,
                              3186,
                              3250,
                              3317,
                              3381,
                              3450,
                              3522,
                              3597,
                              3669
                            ],
                            "referencedDeclaration": 713,
                            "src": "2978:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (string memory,string memory) returns (bytes32)"
                            }
                          },
                          "id": 215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2978:95:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2959:114:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 217,
                              "name": "oraclizeCallbacks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38,
                              "src": "3087:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$34_storage_$",
                                "typeString": "mapping(bytes32 => struct OraclizeTest.oraclizeCallback storage ref)"
                              }
                            },
                            "id": 219,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 218,
                              "name": "queryId2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 211,
                              "src": "3105:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3087:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$34_storage",
                              "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 221,
                                  "name": "oraclizeState",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31,
                                  "src": "3134:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_oraclizeState_$31_$",
                                    "typeString": "type(enum OraclizeTest.oraclizeState)"
                                  }
                                },
                                "id": 222,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "ForBitcoin",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "3134:24:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_oraclizeState_$31",
                                  "typeString": "enum OraclizeTest.oraclizeState"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_oraclizeState_$31",
                                  "typeString": "enum OraclizeTest.oraclizeState"
                                }
                              ],
                              "id": 220,
                              "name": "oraclizeCallback",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "3117:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_oraclizeCallback_$34_storage_ptr_$",
                                "typeString": "type(struct OraclizeTest.oraclizeCallback storage pointer)"
                              }
                            },
                            "id": 223,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3117:42:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$34_memory",
                              "typeString": "struct OraclizeTest.oraclizeCallback memory"
                            }
                          },
                          "src": "3087:72:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_oraclizeCallback_$34_storage",
                            "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                          }
                        },
                        "id": 225,
                        "nodeType": "ExpressionStatement",
                        "src": "3087:72:0"
                      }
                    ]
                  },
                  "id": 227,
                  "nodeType": "IfStatement",
                  "src": "2678:793:0",
                  "trueBody": {
                    "id": 205,
                    "nodeType": "Block",
                    "src": "2732:120:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a652042544320717565727920776173204e4f542073656e742c20706c656173652061646420736f6d652045544820746f20636f76657220666f722074686520717565727920666565",
                              "id": 202,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2759:81:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a341b6b95b58ad24c13357146fe388f5e7a724df6c082e66b536f64c700186c1",
                                "typeString": "literal_string \"Oraclize BTC query was NOT sent, please add some ETH to cover for the query fee\""
                              },
                              "value": "Oraclize BTC query was NOT sent, please add some ETH to cover for the query fee"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_a341b6b95b58ad24c13357146fe388f5e7a724df6c082e66b536f64c700186c1",
                                "typeString": "literal_string \"Oraclize BTC query was NOT sent, please add some ETH to cover for the query fee\""
                              }
                            ],
                            "id": 201,
                            "name": "LogInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
                            "src": "2751:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2751:90:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 204,
                        "nodeType": "EmitStatement",
                        "src": "2746:95:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 229,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "update2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 191,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2591:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2617:0:0"
            },
            "scope": 230,
            "src": "2575:902:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 231,
        "src": "97:3385:0"
      }
    ],
    "src": "0:3482:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/jeffreyyu/Desktop/ClassRelated/CS359B/cs359b-diy-a-new-decentralized-index/oracleDapp/contracts/OraclizeTest.sol",
    "exportedSymbols": {
      "OraclizeTest": [
        230
      ]
    },
    "id": 231,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "installed_contracts/oraclize-api/contracts/usingOraclize.sol",
        "file": "installed_contracts/oraclize-api/contracts/usingOraclize.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 231,
        "sourceUnit": 6053,
        "src": "25:70:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6052,
              "src": "122:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$6052",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "122:13:0"
          }
        ],
        "contractDependencies": [
          6052
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 230,
        "linearizedBaseContracts": [
          230,
          6052
        ],
        "name": "OraclizeTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 230,
            "src": "143:13:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "143:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 8,
            "name": "ETHUSD",
            "nodeType": "VariableDeclaration",
            "scope": 230,
            "src": "162:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 7,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "162:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 10,
            "name": "BTCUSD",
            "nodeType": "VariableDeclaration",
            "scope": 230,
            "src": "188:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 9,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "188:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 14,
            "name": "LogInfo",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12,
                  "indexed": false,
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "scope": 14,
                  "src": "229:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "229:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "228:20:0"
            },
            "src": "215:34:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 18,
            "name": "LogPriceUpdate",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16,
                  "indexed": false,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 18,
                  "src": "275:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "275:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "274:14:0"
            },
            "src": "254:35:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 22,
            "name": "LogPriceUpdate2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20,
                  "indexed": false,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 22,
                  "src": "316:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "316:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "315:14:0"
            },
            "src": "294:36:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 28,
            "name": "LogUpdate",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24,
                  "indexed": true,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "351:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "351:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26,
                  "indexed": true,
                  "name": "_balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "375:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "375:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "350:47:0"
            },
            "src": "335:63:0"
          },
          {
            "canonicalName": "OraclizeTest.oraclizeState",
            "id": 31,
            "members": [
              {
                "id": 29,
                "name": "ForEth",
                "nodeType": "EnumValue",
                "src": "424:6:0"
              },
              {
                "id": 30,
                "name": "ForBitcoin",
                "nodeType": "EnumValue",
                "src": "432:10:0"
              }
            ],
            "name": "oraclizeState",
            "nodeType": "EnumDefinition",
            "src": "403:41:0"
          },
          {
            "canonicalName": "OraclizeTest.oraclizeCallback",
            "id": 34,
            "members": [
              {
                "constant": false,
                "id": 33,
                "name": "oState",
                "nodeType": "VariableDeclaration",
                "scope": 34,
                "src": "484:20:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_oraclizeState_$31",
                  "typeString": "enum OraclizeTest.oraclizeState"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 32,
                  "name": "oraclizeState",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 31,
                  "src": "484:13:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_oraclizeState_$31",
                    "typeString": "enum OraclizeTest.oraclizeState"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "oraclizeCallback",
            "nodeType": "StructDefinition",
            "scope": 230,
            "src": "450:61:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 38,
            "name": "oraclizeCallbacks",
            "nodeType": "VariableDeclaration",
            "scope": 230,
            "src": "517:62:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$34_storage_$",
              "typeString": "mapping(bytes32 => struct OraclizeTest.oraclizeCallback)"
            },
            "typeName": {
              "id": 37,
              "keyType": {
                "id": 35,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "526:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "517:37:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$34_storage_$",
                "typeString": "mapping(bytes32 => struct OraclizeTest.oraclizeCallback)"
              },
              "valueType": {
                "contractScope": null,
                "id": 36,
                "name": "oraclizeCallback",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 34,
                "src": "537:16:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_oraclizeCallback_$34_storage_ptr",
                  "typeString": "struct OraclizeTest.oraclizeCallback"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 72,
              "nodeType": "Block",
              "src": "652:330:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 41,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "662:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 42,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6067,
                        "src": "670:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 43,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "670:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "662:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 45,
                  "nodeType": "ExpressionStatement",
                  "src": "662:18:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 47,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "706:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 49,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6086,
                              "src": "721:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OraclizeTest_$230",
                                "typeString": "contract OraclizeTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_OraclizeTest_$230",
                                "typeString": "contract OraclizeTest"
                              }
                            ],
                            "id": 48,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "713:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 50,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "713:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 51,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "713:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 46,
                      "name": "LogUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "696:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "696:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53,
                  "nodeType": "EmitStatement",
                  "src": "691:44:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 58,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 54,
                      "name": "OAR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 408,
                      "src": "798:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$348",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "307836663438354338424636666334336541323132453933424246386365303436433766316362343735",
                          "id": 56,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "826:42:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x6f485C8BF6fc43eA212E93BBF8ce046C7f1cb475"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 55,
                        "name": "OraclizeAddrResolverI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 348,
                        "src": "804:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OraclizeAddrResolverI_$348_$",
                          "typeString": "type(contract OraclizeAddrResolverI)"
                        }
                      },
                      "id": 57,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "804:65:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$348",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "src": "798:71:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$348",
                      "typeString": "contract OraclizeAddrResolverI"
                    }
                  },
                  "id": 59,
                  "nodeType": "ExpressionStatement",
                  "src": "798:71:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        },
                        "id": 63,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 61,
                          "name": "proofType_TLSNotary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 379,
                          "src": "898:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "|",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 62,
                          "name": "proofStorage_IPFS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 391,
                          "src": "920:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "src": "898:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      ],
                      "id": 60,
                      "name": "oraclize_setProof",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3694,
                      "src": "880:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes1_$returns$__$",
                        "typeString": "function (bytes1)"
                      }
                    },
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "880:58:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65,
                  "nodeType": "ExpressionStatement",
                  "src": "880:58:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 66,
                      "name": "update",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 190,
                      "src": "948:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "948:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "948:8:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 69,
                      "name": "update2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 229,
                      "src": "966:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "966:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 71,
                  "nodeType": "ExpressionStatement",
                  "src": "966:9:0"
                }
              ]
            },
            "documentation": null,
            "id": 73,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "OraclizeTest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "626:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "652:0:0"
            },
            "scope": 230,
            "src": "605:377:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 79,
              "nodeType": "Block",
              "src": "1034:25:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 76,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6072,
                        6073
                      ],
                      "referencedDeclaration": 6072,
                      "src": "1044:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1044:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "1044:8:0"
                }
              ]
            },
            "documentation": null,
            "id": 80,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1021:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1034:0:0"
            },
            "scope": 230,
            "src": "1013:46:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 139,
              "nodeType": "Block",
              "src": "1136:426:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 94,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 90,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6067,
                            "src": "1154:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 91,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1154:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 92,
                            "name": "oraclize_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3681,
                            "src": "1168:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 93,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1168:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1154:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 89,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6070,
                        6071
                      ],
                      "referencedDeclaration": 6070,
                      "src": "1146:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 95,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1146:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 96,
                  "nodeType": "ExpressionStatement",
                  "src": "1146:43:0"
                },
                {
                  "assignments": [
                    98
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98,
                      "name": "o",
                      "nodeType": "VariableDeclaration",
                      "scope": 140,
                      "src": "1199:25:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_oraclizeCallback_$34_memory_ptr",
                        "typeString": "struct OraclizeTest.oraclizeCallback"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 97,
                        "name": "oraclizeCallback",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 34,
                        "src": "1199:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_oraclizeCallback_$34_storage_ptr",
                          "typeString": "struct OraclizeTest.oraclizeCallback"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 102,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 99,
                      "name": "oraclizeCallbacks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "1227:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$34_storage_$",
                        "typeString": "mapping(bytes32 => struct OraclizeTest.oraclizeCallback storage ref)"
                      }
                    },
                    "id": 101,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 100,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82,
                      "src": "1245:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1227:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_oraclizeCallback_$34_storage",
                      "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1199:49:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_oraclizeState_$31",
                      "typeString": "enum OraclizeTest.oraclizeState"
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 103,
                        "name": "o",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98,
                        "src": "1262:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_oraclizeCallback_$34_memory_ptr",
                          "typeString": "struct OraclizeTest.oraclizeCallback memory"
                        }
                      },
                      "id": 104,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "oState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33,
                      "src": "1262:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$31",
                        "typeString": "enum OraclizeTest.oraclizeState"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 105,
                        "name": "oraclizeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "1274:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_oraclizeState_$31_$",
                          "typeString": "type(enum OraclizeTest.oraclizeState)"
                        }
                      },
                      "id": 106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ForEth",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1274:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$31",
                        "typeString": "enum OraclizeTest.oraclizeState"
                      }
                    },
                    "src": "1262:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 120,
                  "nodeType": "IfStatement",
                  "src": "1258:140:0",
                  "trueBody": {
                    "id": 119,
                    "nodeType": "Block",
                    "src": "1295:103:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 108,
                            "name": "ETHUSD",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "1309:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 109,
                            "name": "result",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84,
                            "src": "1318:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1309:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 111,
                        "nodeType": "ExpressionStatement",
                        "src": "1309:15:0"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 113,
                              "name": "ETHUSD",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8,
                              "src": "1358:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            ],
                            "id": 112,
                            "name": "LogPriceUpdate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "1343:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1343:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 115,
                        "nodeType": "EmitStatement",
                        "src": "1338:27:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 116,
                            "name": "update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 190,
                            "src": "1379:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1379:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 118,
                        "nodeType": "ExpressionStatement",
                        "src": "1379:8:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_oraclizeState_$31",
                      "typeString": "enum OraclizeTest.oraclizeState"
                    },
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 121,
                        "name": "o",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98,
                        "src": "1412:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_oraclizeCallback_$34_memory_ptr",
                          "typeString": "struct OraclizeTest.oraclizeCallback memory"
                        }
                      },
                      "id": 122,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "oState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33,
                      "src": "1412:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$31",
                        "typeString": "enum OraclizeTest.oraclizeState"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 123,
                        "name": "oraclizeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "1424:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_oraclizeState_$31_$",
                          "typeString": "type(enum OraclizeTest.oraclizeState)"
                        }
                      },
                      "id": 124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ForBitcoin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1424:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$31",
                        "typeString": "enum OraclizeTest.oraclizeState"
                      }
                    },
                    "src": "1412:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 138,
                  "nodeType": "IfStatement",
                  "src": "1408:146:0",
                  "trueBody": {
                    "id": 137,
                    "nodeType": "Block",
                    "src": "1449:105:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 126,
                            "name": "BTCUSD",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "1463:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 127,
                            "name": "result",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84,
                            "src": "1472:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1463:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 129,
                        "nodeType": "ExpressionStatement",
                        "src": "1463:15:0"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 131,
                              "name": "BTCUSD",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10,
                              "src": "1513:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            ],
                            "id": 130,
                            "name": "LogPriceUpdate2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22,
                            "src": "1497:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1497:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 133,
                        "nodeType": "EmitStatement",
                        "src": "1492:28:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 134,
                            "name": "update2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 229,
                            "src": "1534:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1534:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 136,
                        "nodeType": "ExpressionStatement",
                        "src": "1534:9:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 140,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "1085:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1085:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 84,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "1097:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 83,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1097:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "1112:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1112:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1084:40:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1136:0:0"
            },
            "scope": 230,
            "src": "1065:497:0",
            "stateMutability": "nonpayable",
            "superFunction": 640,
            "visibility": "public"
          },
          {
            "body": {
              "id": 150,
              "nodeType": "Block",
              "src": "1629:45:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 146,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6086,
                          "src": "1654:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OraclizeTest_$230",
                            "typeString": "contract OraclizeTest"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_OraclizeTest_$230",
                            "typeString": "contract OraclizeTest"
                          }
                        ],
                        "id": 145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1646:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1646:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1646:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 144,
                  "id": 149,
                  "nodeType": "Return",
                  "src": "1639:28:0"
                }
              ]
            },
            "documentation": null,
            "id": 151,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "getBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1587:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 143,
                  "name": "_balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "1614:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1614:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1613:15:0"
            },
            "scope": 230,
            "src": "1568:106:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 189,
              "nodeType": "Block",
              "src": "1721:848:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1804:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          }
                        ],
                        "id": 154,
                        "name": "oraclize_getPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          655,
                          673
                        ],
                        "referencedDeclaration": 655,
                        "src": "1786:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) returns (uint256)"
                        }
                      },
                      "id": 156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1786:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 158,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6086,
                            "src": "1821:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OraclizeTest_$230",
                              "typeString": "contract OraclizeTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OraclizeTest_$230",
                              "typeString": "contract OraclizeTest"
                            }
                          ],
                          "id": 157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1813:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1813:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1813:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1786:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 187,
                    "nodeType": "Block",
                    "src": "1962:601:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a6520455448207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                              "id": 168,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1989:59:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_92558dea68f12d65c4a2f4516135d351df59a49eeb3667f4729fc6b0d7b950f2",
                                "typeString": "literal_string \"Oraclize ETH query was sent, standing by for the answer..\""
                              },
                              "value": "Oraclize ETH query was sent, standing by for the answer.."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_92558dea68f12d65c4a2f4516135d351df59a49eeb3667f4729fc6b0d7b950f2",
                                "typeString": "literal_string \"Oraclize ETH query was sent, standing by for the answer..\""
                              }
                            ],
                            "id": 167,
                            "name": "LogInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
                            "src": "1981:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1981:68:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 170,
                        "nodeType": "EmitStatement",
                        "src": "1976:73:0"
                      },
                      {
                        "assignments": [
                          172
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 172,
                            "name": "queryId",
                            "nodeType": "VariableDeclaration",
                            "scope": 190,
                            "src": "2063:15:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 171,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "2063:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 177,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "55524c",
                              "id": 174,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2096:5:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              "value": "URL"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6a736f6e2868747470733a2f2f6170692e636f696e626173652e636f6d2f76322f7072696365732f4554482d5553442f73706f74292e646174612e616d6f756e74",
                              "id": 175,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2102:67:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1cb3d5ca41f100645c3363042b531a7bc4905d034354e722c749236677568a8d",
                                "typeString": "literal_string \"json(https://api.coinbase.com/v2/prices/ETH-USD/spot).data.amount\""
                              },
                              "value": "json(https://api.coinbase.com/v2/prices/ETH-USD/spot).data.amount"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1cb3d5ca41f100645c3363042b531a7bc4905d034354e722c749236677568a8d",
                                "typeString": "literal_string \"json(https://api.coinbase.com/v2/prices/ETH-USD/spot).data.amount\""
                              }
                            ],
                            "id": 173,
                            "name": "oraclize_query",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              713,
                              755,
                              801,
                              845,
                              888,
                              933,
                              982,
                              1029,
                              1076,
                              1125,
                              1178,
                              1229,
                              1266,
                              1306,
                              1349,
                              1389,
                              1434,
                              1482,
                              1533,
                              1581,
                              1634,
                              1690,
                              1749,
                              1805,
                              1866,
                              1930,
                              1997,
                              2061,
                              2130,
                              2202,
                              2277,
                              2349,
                              2396,
                              2445,
                              2498,
                              2549,
                              2586,
                              2626,
                              2669,
                              2709,
                              2754,
                              2802,
                              2853,
                              2901,
                              2954,
                              3010,
                              3069,
                              3125,
                              3186,
                              3250,
                              3317,
                              3381,
                              3450,
                              3522,
                              3597,
                              3669
                            ],
                            "referencedDeclaration": 713,
                            "src": "2081:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (string memory,string memory) returns (bytes32)"
                            }
                          },
                          "id": 176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2081:89:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2063:107:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 178,
                              "name": "oraclizeCallbacks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38,
                              "src": "2184:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$34_storage_$",
                                "typeString": "mapping(bytes32 => struct OraclizeTest.oraclizeCallback storage ref)"
                              }
                            },
                            "id": 180,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 179,
                              "name": "queryId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 172,
                              "src": "2202:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2184:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$34_storage",
                              "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 182,
                                  "name": "oraclizeState",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31,
                                  "src": "2230:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_oraclizeState_$31_$",
                                    "typeString": "type(enum OraclizeTest.oraclizeState)"
                                  }
                                },
                                "id": 183,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "ForEth",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "2230:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_oraclizeState_$31",
                                  "typeString": "enum OraclizeTest.oraclizeState"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_oraclizeState_$31",
                                  "typeString": "enum OraclizeTest.oraclizeState"
                                }
                              ],
                              "id": 181,
                              "name": "oraclizeCallback",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "2213:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_oraclizeCallback_$34_storage_ptr_$",
                                "typeString": "type(struct OraclizeTest.oraclizeCallback storage pointer)"
                              }
                            },
                            "id": 184,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2213:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$34_memory",
                              "typeString": "struct OraclizeTest.oraclizeCallback memory"
                            }
                          },
                          "src": "2184:67:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_oraclizeCallback_$34_storage",
                            "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                          }
                        },
                        "id": 186,
                        "nodeType": "ExpressionStatement",
                        "src": "2184:67:0"
                      }
                    ]
                  },
                  "id": 188,
                  "nodeType": "IfStatement",
                  "src": "1782:781:0",
                  "trueBody": {
                    "id": 166,
                    "nodeType": "Block",
                    "src": "1836:120:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a652045544820717565727920776173204e4f542073656e742c20706c656173652061646420736f6d652045544820746f20636f76657220666f722074686520717565727920666565",
                              "id": 163,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1863:81:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_86b4e52b9d7e6dbfbdb9744fcb31ec13df7de8e1138baadabd3c7def0014c40b",
                                "typeString": "literal_string \"Oraclize ETH query was NOT sent, please add some ETH to cover for the query fee\""
                              },
                              "value": "Oraclize ETH query was NOT sent, please add some ETH to cover for the query fee"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_86b4e52b9d7e6dbfbdb9744fcb31ec13df7de8e1138baadabd3c7def0014c40b",
                                "typeString": "literal_string \"Oraclize ETH query was NOT sent, please add some ETH to cover for the query fee\""
                              }
                            ],
                            "id": 162,
                            "name": "LogInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
                            "src": "1855:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1855:90:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 165,
                        "nodeType": "EmitStatement",
                        "src": "1850:95:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 190,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "update",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 152,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1695:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 153,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1721:0:0"
            },
            "scope": 230,
            "src": "1680:889:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 228,
              "nodeType": "Block",
              "src": "2617:860:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2700:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          }
                        ],
                        "id": 193,
                        "name": "oraclize_getPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          655,
                          673
                        ],
                        "referencedDeclaration": 655,
                        "src": "2682:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) returns (uint256)"
                        }
                      },
                      "id": 195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2682:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 197,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6086,
                            "src": "2717:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OraclizeTest_$230",
                              "typeString": "contract OraclizeTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OraclizeTest_$230",
                              "typeString": "contract OraclizeTest"
                            }
                          ],
                          "id": 196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2709:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2709:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2709:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2682:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 226,
                    "nodeType": "Block",
                    "src": "2858:613:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a6520425443207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                              "id": 207,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2885:59:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6ac407d1c2ba3f8046de888d33b594dec521d7891fc5dd4c92883338b6b9d0ac",
                                "typeString": "literal_string \"Oraclize BTC query was sent, standing by for the answer..\""
                              },
                              "value": "Oraclize BTC query was sent, standing by for the answer.."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_6ac407d1c2ba3f8046de888d33b594dec521d7891fc5dd4c92883338b6b9d0ac",
                                "typeString": "literal_string \"Oraclize BTC query was sent, standing by for the answer..\""
                              }
                            ],
                            "id": 206,
                            "name": "LogInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
                            "src": "2877:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2877:68:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 209,
                        "nodeType": "EmitStatement",
                        "src": "2872:73:0"
                      },
                      {
                        "assignments": [
                          211
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 211,
                            "name": "queryId2",
                            "nodeType": "VariableDeclaration",
                            "scope": 229,
                            "src": "2959:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 210,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "2959:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 216,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "55524c",
                              "id": 213,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2993:5:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              "value": "URL"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6a736f6e2868747470733a2f2f6170692e636f696e6d61726b65746361702e636f6d2f76322f7469636b65722f312f292e646174612e71756f7465732e5553442e7072696365",
                              "id": 214,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3000:72:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d427b349ec7ef8a6b76bda49b4d30de4f58341deb151e97d4ea42791801d2917",
                                "typeString": "literal_string \"json(https://api.coinmarketcap.com/v2/ticker/1/).data.quotes.USD.price\""
                              },
                              "value": "json(https://api.coinmarketcap.com/v2/ticker/1/).data.quotes.USD.price"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d427b349ec7ef8a6b76bda49b4d30de4f58341deb151e97d4ea42791801d2917",
                                "typeString": "literal_string \"json(https://api.coinmarketcap.com/v2/ticker/1/).data.quotes.USD.price\""
                              }
                            ],
                            "id": 212,
                            "name": "oraclize_query",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              713,
                              755,
                              801,
                              845,
                              888,
                              933,
                              982,
                              1029,
                              1076,
                              1125,
                              1178,
                              1229,
                              1266,
                              1306,
                              1349,
                              1389,
                              1434,
                              1482,
                              1533,
                              1581,
                              1634,
                              1690,
                              1749,
                              1805,
                              1866,
                              1930,
                              1997,
                              2061,
                              2130,
                              2202,
                              2277,
                              2349,
                              2396,
                              2445,
                              2498,
                              2549,
                              2586,
                              2626,
                              2669,
                              2709,
                              2754,
                              2802,
                              2853,
                              2901,
                              2954,
                              3010,
                              3069,
                              3125,
                              3186,
                              3250,
                              3317,
                              3381,
                              3450,
                              3522,
                              3597,
                              3669
                            ],
                            "referencedDeclaration": 713,
                            "src": "2978:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (string memory,string memory) returns (bytes32)"
                            }
                          },
                          "id": 215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2978:95:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2959:114:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 217,
                              "name": "oraclizeCallbacks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38,
                              "src": "3087:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$34_storage_$",
                                "typeString": "mapping(bytes32 => struct OraclizeTest.oraclizeCallback storage ref)"
                              }
                            },
                            "id": 219,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 218,
                              "name": "queryId2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 211,
                              "src": "3105:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3087:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$34_storage",
                              "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 221,
                                  "name": "oraclizeState",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31,
                                  "src": "3134:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_oraclizeState_$31_$",
                                    "typeString": "type(enum OraclizeTest.oraclizeState)"
                                  }
                                },
                                "id": 222,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "ForBitcoin",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "3134:24:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_oraclizeState_$31",
                                  "typeString": "enum OraclizeTest.oraclizeState"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_oraclizeState_$31",
                                  "typeString": "enum OraclizeTest.oraclizeState"
                                }
                              ],
                              "id": 220,
                              "name": "oraclizeCallback",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "3117:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_oraclizeCallback_$34_storage_ptr_$",
                                "typeString": "type(struct OraclizeTest.oraclizeCallback storage pointer)"
                              }
                            },
                            "id": 223,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3117:42:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$34_memory",
                              "typeString": "struct OraclizeTest.oraclizeCallback memory"
                            }
                          },
                          "src": "3087:72:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_oraclizeCallback_$34_storage",
                            "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                          }
                        },
                        "id": 225,
                        "nodeType": "ExpressionStatement",
                        "src": "3087:72:0"
                      }
                    ]
                  },
                  "id": 227,
                  "nodeType": "IfStatement",
                  "src": "2678:793:0",
                  "trueBody": {
                    "id": 205,
                    "nodeType": "Block",
                    "src": "2732:120:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a652042544320717565727920776173204e4f542073656e742c20706c656173652061646420736f6d652045544820746f20636f76657220666f722074686520717565727920666565",
                              "id": 202,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2759:81:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a341b6b95b58ad24c13357146fe388f5e7a724df6c082e66b536f64c700186c1",
                                "typeString": "literal_string \"Oraclize BTC query was NOT sent, please add some ETH to cover for the query fee\""
                              },
                              "value": "Oraclize BTC query was NOT sent, please add some ETH to cover for the query fee"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_a341b6b95b58ad24c13357146fe388f5e7a724df6c082e66b536f64c700186c1",
                                "typeString": "literal_string \"Oraclize BTC query was NOT sent, please add some ETH to cover for the query fee\""
                              }
                            ],
                            "id": 201,
                            "name": "LogInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
                            "src": "2751:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2751:90:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 204,
                        "nodeType": "EmitStatement",
                        "src": "2746:95:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 229,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "update2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 191,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2591:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2617:0:0"
            },
            "scope": 230,
            "src": "2575:902:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 231,
        "src": "97:3385:0"
      }
    ],
    "src": "0:3482:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.23+commit.124ca40d.Emscripten.clang"
  },
  "networks": {
    "1526104725480": {
      "events": {},
      "links": {},
      "address": "0x05462546a54b89019458707781570cc6c4a10d3e",
      "transactionHash": "0x0991cd8aea84bddf728599b25c70bab35bdc98365cfaded94389a3fc888e2eb2"
    },
    "1526106557443": {
      "events": {},
      "links": {},
      "address": "0x1190011127e61177887591e8cbab80a01bedd693",
      "transactionHash": "0x99ba5fa621c95f6be72ed91347e2147a62aded02131fe847d88ca92d846289ac"
    },
    "1526107425595": {
      "events": {},
      "links": {},
      "address": "0x82034a9010344cf4d2a95f2716dbcd03b3fec477",
      "transactionHash": "0xdda529474bd93a2d6a49678fea05ebc4c4c608f499b9805cd112e42e21bd1e1c"
    },
    "1526110849215": {
      "events": {},
      "links": {},
      "address": "0x5d20d57d345fb4b93a925432edf33b6ac498b3bb",
      "transactionHash": "0x76fa4952955a99978ffd0946883416b03ae73d2f499413c70bfb8d495b17675e"
    },
    "1526111141973": {
      "events": {},
      "links": {},
      "address": "0x95ff7fad99b6bb2ee3cec70f1da48612ba8332ea",
      "transactionHash": "0xacfc8b0adb482f38d97ecbd1ca61b22bd230bf9974487db4984134c75f0c7304"
    },
    "1526113890666": {
      "events": {},
      "links": {},
      "address": "0x71c55be92bb099eb977c00d3c49760a2fd739d51",
      "transactionHash": "0xe6ca08f139928e0b84faa2baaed45b519b2d0c3cfb08d16f3dae7141d49fa406"
    },
    "1526126366591": {
      "events": {},
      "links": {},
      "address": "0x42e309c7b6ac7736b0dbeb06d20a41c38e6d1cec",
      "transactionHash": "0x8e865249ca6ffc6b27ce2b0b60eeddb58259d9673b3928f20c3b3f0b744fedb4"
    },
    "1526254790019": {
      "events": {},
      "links": {},
      "address": "0xe0208ca923a70cd80f1a0948bc7ddf21419a00d5",
      "transactionHash": "0xfd864a108f4ce8efa4aeb39548d5f4c38eaaf6e1957d4d4f2f92d76a24393ce5"
    }
  },
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-05-14T00:30:28.739Z"
}