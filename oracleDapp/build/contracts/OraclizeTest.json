{
  "contractName": "OraclizeTest",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "oraclizeCallbacks",
      "outputs": [
        {
          "name": "oState",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "description",
          "type": "string"
        }
      ],
      "name": "LogInfo",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "price",
          "type": "string"
        }
      ],
      "name": "LogPriceUpdateEth",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "price",
          "type": "string"
        }
      ],
      "name": "LogPriceUpdateEos",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "price",
          "type": "string"
        }
      ],
      "name": "LogPriceUpdateTrx",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "price",
          "type": "string"
        }
      ],
      "name": "LogPriceUpdateVen",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "price",
          "type": "string"
        }
      ],
      "name": "LogPriceUpdateIcx",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "price",
          "type": "string"
        }
      ],
      "name": "LogPriceUpdateBnb",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "price",
          "type": "string"
        }
      ],
      "name": "LogPriceUpdateOmg",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "price",
          "type": "string"
        }
      ],
      "name": "LogPriceUpdateZil",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "price",
          "type": "string"
        }
      ],
      "name": "LogPriceUpdateAe",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "price",
          "type": "string"
        }
      ],
      "name": "LogPriceUpdateZrx",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "price",
          "type": "string"
        }
      ],
      "name": "LogPriceUpdateBtm",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_balance",
          "type": "uint256"
        }
      ],
      "name": "LogUpdate",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "myid",
          "type": "bytes32"
        },
        {
          "name": "result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "id",
          "type": "bytes32"
        },
        {
          "name": "result",
          "type": "string"
        },
        {
          "name": "proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "name": "_balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "updateEth",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "updateEos",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "updateTrx",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "updateVen",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "updateIcx",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "updateBnb",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "updateOmg",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "updateZil",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "updateAe",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "updateZrx",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "updateBtm",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100db576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806305e82023146100ed57806312065fe0146100f7578063262df77a14610122578063279e50f51461012c57806327b2cb761461013657806327dc297e1461014057806338bbfa50146101b7578063426d5ef1146102745780636201306c146102c7578063a05360be146102d1578063a0d07da7146102db578063a3367b91146102e5578063bbd501ed146102ef578063f716eb2e146102f9578063f84c49e014610303575b3480156100e757600080fd5b50600080fd5b6100f561030d565b005b34801561010357600080fd5b5061010c6105dc565b6040518082815260200191505060405180910390f35b61012a6105fb565b005b6101346108ca565b005b61013e610b99565b005b34801561014c57600080fd5b506101b56004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610e68565b005b3480156101c357600080fd5b506102726004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610eab565b005b34801561028057600080fd5b506102a360048036038101908080356000191690602001909291905050506117e7565b6040518082600a8111156102b357fe5b60ff16815260200191505060405180910390f35b6102cf611812565b005b6102d9611ae1565b005b6102e3611db0565b005b6102ed61207e565b005b6102f761234d565b005b61030161261c565b005b61030b6128eb565b005b60003073ffffffffffffffffffffffffffffffffffffffff16316103656040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250612bba565b1115610424577ffee95ecae0c8f7f0743ec0ad254c78ab75e5ecca9f1ddcd9f11f9a98124b96bc60405180806020018281038252604f8152602001807f4f7261636c697a65205a494c20717565727920776173204e4f542073656e742c81526020017f20706c656173652061646420736f6d652045544820746f20636f76657220666f81526020017f722074686520717565727920666565000000000000000000000000000000000081525060600191505060405180910390a16105d9565b7ffee95ecae0c8f7f0743ec0ad254c78ab75e5ecca9f1ddcd9f11f9a98124b96bc6040518080602001828103825260398152602001807f4f7261636c697a65205a494c207175657279207761732073656e742c2073746181526020017f6e64696e6720627920666f722074686520616e737765722e2e0000000000000081525060400191505060405180910390a16105736040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250608060405190810160405280604981526020017f6a736f6e2868747470733a2f2f6170692e636f696e6d61726b65746361702e6381526020017f6f6d2f76322f7469636b65722f323436392f292e646174612e71756f7465732e81526020017f5553442e70726963650000000000000000000000000000000000000000000000815250612f8a565b90506020604051908101604052806007600a81111561058e57fe5b81525060066000836000191660001916815260200190815260200160002060008201518160000160006101000a81548160ff0219169083600a8111156105d057fe5b02179055509050505b50565b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b60003073ffffffffffffffffffffffffffffffffffffffff16316106536040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250612bba565b1115610712577ffee95ecae0c8f7f0743ec0ad254c78ab75e5ecca9f1ddcd9f11f9a98124b96bc60405180806020018281038252604f8152602001807f4f7261636c697a652049435820717565727920776173204e4f542073656e742c81526020017f20706c656173652061646420736f6d652045544820746f20636f76657220666f81526020017f722074686520717565727920666565000000000000000000000000000000000081525060600191505060405180910390a16108c7565b7ffee95ecae0c8f7f0743ec0ad254c78ab75e5ecca9f1ddcd9f11f9a98124b96bc6040518080602001828103825260398152602001807f4f7261636c697a6520494358207175657279207761732073656e742c2073746181526020017f6e64696e6720627920666f722074686520616e737765722e2e0000000000000081525060400191505060405180910390a16108616040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250608060405190810160405280604981526020017f6a736f6e2868747470733a2f2f6170692e636f696e6d61726b65746361702e6381526020017f6f6d2f76322f7469636b65722f323039392f292e646174612e71756f7465732e81526020017f5553442e70726963650000000000000000000000000000000000000000000000815250612f8a565b90506020604051908101604052806004600a81111561087c57fe5b81525060066000836000191660001916815260200190815260200160002060008201518160000160006101000a81548160ff0219169083600a8111156108be57fe5b02179055509050505b50565b60003073ffffffffffffffffffffffffffffffffffffffff16316109226040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250612bba565b11156109e1577ffee95ecae0c8f7f0743ec0ad254c78ab75e5ecca9f1ddcd9f11f9a98124b96bc60405180806020018281038252604f8152602001807f4f7261636c697a65205a525820717565727920776173204e4f542073656e742c81526020017f20706c656173652061646420736f6d652045544820746f20636f76657220666f81526020017f722074686520717565727920666565000000000000000000000000000000000081525060600191505060405180910390a1610b96565b7ffee95ecae0c8f7f0743ec0ad254c78ab75e5ecca9f1ddcd9f11f9a98124b96bc6040518080602001828103825260398152602001807f4f7261636c697a65205a5258207175657279207761732073656e742c2073746181526020017f6e64696e6720627920666f722074686520616e737765722e2e0000000000000081525060400191505060405180910390a1610b306040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250608060405190810160405280604981526020017f6a736f6e2868747470733a2f2f6170692e636f696e6d61726b65746361702e6381526020017f6f6d2f76322f7469636b65722f313839362f292e646174612e71756f7465732e81526020017f5553442e70726963650000000000000000000000000000000000000000000000815250612f8a565b90506020604051908101604052806009600a811115610b4b57fe5b81525060066000836000191660001916815260200190815260200160002060008201518160000160006101000a81548160ff0219169083600a811115610b8d57fe5b02179055509050505b50565b60003073ffffffffffffffffffffffffffffffffffffffff1631610bf16040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250612bba565b1115610cb0577ffee95ecae0c8f7f0743ec0ad254c78ab75e5ecca9f1ddcd9f11f9a98124b96bc60405180806020018281038252604f8152602001807f4f7261636c697a652045544820717565727920776173204e4f542073656e742c81526020017f20706c656173652061646420736f6d652045544820746f20636f76657220666f81526020017f722074686520717565727920666565000000000000000000000000000000000081525060600191505060405180910390a1610e65565b7ffee95ecae0c8f7f0743ec0ad254c78ab75e5ecca9f1ddcd9f11f9a98124b96bc6040518080602001828103825260398152602001807f4f7261636c697a6520455448207175657279207761732073656e742c2073746181526020017f6e64696e6720627920666f722074686520616e737765722e2e0000000000000081525060400191505060405180910390a1610dff6040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250608060405190810160405280604181526020017f6a736f6e2868747470733a2f2f6170692e636f696e626173652e636f6d2f763281526020017f2f7072696365732f4554482d5553442f73706f74292e646174612e616d6f756e81526020017f7400000000000000000000000000000000000000000000000000000000000000815250612f8a565b90506020604051908101604052806000600a811115610e1a57fe5b81525060066000836000191660001916815260200190815260200160002060008201518160000160006101000a81548160ff0219169083600a811115610e5c57fe5b02179055509050505b50565b610ea7828260006040519080825280601f01601f191660200182016040528015610ea15781602001602082028038833980820191505090505b50610eab565b5050565b610eb3613d4f565b610ebb61352c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610ef457600080fd5b600660008560001916600019168152602001908152602001600020602060405190810160405290816000820160009054906101000a900460ff16600a811115610f3957fe5b600a811115610f4457fe5b8152505090506000600a811115610f5757fe5b8160000151600a811115610f6757fe5b1415611012577f599a5df22e4b09176c6d41840b590d5eca7672685af51c038c8992c64d09ccfe836040518080602001828103825283818151815260200191508051906020019080838360005b83811015610fcf578082015181840152602081019050610fb4565b50505050905090810190601f168015610ffc5780820380516001836020036101000a031916815260200191505b509250505060405180910390a1611011610b99565b5b6001600a81111561101f57fe5b8160000151600a81111561102f57fe5b14156110da577f9f328f05f015c20758fe7c5469abaa1c1cf5e5aa74682d679941876cb770c481836040518080602001828103825283818151815260200191508051906020019080838360005b8381101561109757808201518184015260208101905061107c565b50505050905090810190601f1680156110c45780820380516001836020036101000a031916815260200191505b509250505060405180910390a16110d9611812565b5b6002600a8111156110e757fe5b8160000151600a8111156110f757fe5b14156111a2577f2d4b6bea85c1023c74a28804ce62ca61b5519dda192aa5a0e9df9811d58f50f4836040518080602001828103825283818151815260200191508051906020019080838360005b8381101561115f578082015181840152602081019050611144565b50505050905090810190601f16801561118c5780820380516001836020036101000a031916815260200191505b509250505060405180910390a16111a161234d565b5b6003600a8111156111af57fe5b8160000151600a8111156111bf57fe5b141561126a577f634e2efa96cf12d7ee51567bf3d388ceb53d29ffcfb00948bfce12653e5ffa51836040518080602001828103825283818151815260200191508051906020019080838360005b8381101561122757808201518184015260208101905061120c565b50505050905090810190601f1680156112545780820380516001836020036101000a031916815260200191505b509250505060405180910390a161126961207e565b5b6004600a81111561127757fe5b8160000151600a81111561128757fe5b1415611332577fa3f17072dd968837e4a17c15dde250e453bf6456f8a98b51dde57c9dca661a8d836040518080602001828103825283818151815260200191508051906020019080838360005b838110156112ef5780820151818401526020810190506112d4565b50505050905090810190601f16801561131c5780820380516001836020036101000a031916815260200191505b509250505060405180910390a16113316105fb565b5b6005600a81111561133f57fe5b8160000151600a81111561134f57fe5b14156113fa577f2b785429dfabab7e522473007d83ac2707b638046b4fe6f096a2d53286a3adf2836040518080602001828103825283818151815260200191508051906020019080838360005b838110156113b757808201518184015260208101905061139c565b50505050905090810190601f1680156113e45780820380516001836020036101000a031916815260200191505b509250505060405180910390a16113f96128eb565b5b6006600a81111561140757fe5b8160000151600a81111561141757fe5b14156114c2577f6428a8b77a4fc727a1629e5e9b4000f236f7400a2089ec714af6380a55ac26ef836040518080602001828103825283818151815260200191508051906020019080838360005b8381101561147f578082015181840152602081019050611464565b50505050905090810190601f1680156114ac5780820380516001836020036101000a031916815260200191505b509250505060405180910390a16114c1611ae1565b5b6007600a8111156114cf57fe5b8160000151600a8111156114df57fe5b141561158a577ff6c6f093a2641264c6f2bba35dccee520654694754f5378edc81a4939ad1af12836040518080602001828103825283818151815260200191508051906020019080838360005b8381101561154757808201518184015260208101905061152c565b50505050905090810190601f1680156115745780820380516001836020036101000a031916815260200191505b509250505060405180910390a161158961030d565b5b6008600a81111561159757fe5b8160000151600a8111156115a757fe5b1415611652577f92191e457856873f0897549a6baa90eb29a0a04a87412e8b3c0a460b846d8609836040518080602001828103825283818151815260200191508051906020019080838360005b8381101561160f5780820151818401526020810190506115f4565b50505050905090810190601f16801561163c5780820380516001836020036101000a031916815260200191505b509250505060405180910390a161165161261c565b5b6009600a81111561165f57fe5b8160000151600a81111561166f57fe5b141561171a577f2d3fb6444f3ed2c6d30777d3ad5c61c9a4402a0ce2ca9032284a19a33fb8d6ca836040518080602001828103825283818151815260200191508051906020019080838360005b838110156116d75780820151818401526020810190506116bc565b50505050905090810190601f1680156117045780820380516001836020036101000a031916815260200191505b509250505060405180910390a16117196108ca565b5b600a8081111561172657fe5b8160000151600a81111561173657fe5b14156117e1577ffae2934378bccb8f14d3f56e4673f0784c20efed1814c323ee6092a8a0e140dc836040518080602001828103825283818151815260200191508051906020019080838360005b8381101561179e578082015181840152602081019050611783565b50505050905090810190601f1680156117cb5780820380516001836020036101000a031916815260200191505b509250505060405180910390a16117e0611db0565b5b50505050565b60066020528060005260406000206000915090508060000160009054906101000a900460ff16905081565b60003073ffffffffffffffffffffffffffffffffffffffff163161186a6040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250612bba565b1115611929577ffee95ecae0c8f7f0743ec0ad254c78ab75e5ecca9f1ddcd9f11f9a98124b96bc60405180806020018281038252604f8152602001807f4f7261636c697a6520454f5320717565727920776173204e4f542073656e742c81526020017f20706c656173652061646420736f6d652045544820746f20636f76657220666f81526020017f722074686520717565727920666565000000000000000000000000000000000081525060600191505060405180910390a1611ade565b7ffee95ecae0c8f7f0743ec0ad254c78ab75e5ecca9f1ddcd9f11f9a98124b96bc6040518080602001828103825260398152602001807f4f7261636c697a6520454f53207175657279207761732073656e742c2073746181526020017f6e64696e6720627920666f722074686520616e737765722e2e0000000000000081525060400191505060405180910390a1611a786040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250608060405190810160405280604981526020017f6a736f6e2868747470733a2f2f6170692e636f696e6d61726b65746361702e6381526020017f6f6d2f76322f7469636b65722f313736352f292e646174612e71756f7465732e81526020017f5553442e70726963650000000000000000000000000000000000000000000000815250612f8a565b90506020604051908101604052806001600a811115611a9357fe5b81525060066000836000191660001916815260200190815260200160002060008201518160000160006101000a81548160ff0219169083600a811115611ad557fe5b02179055509050505b50565b60003073ffffffffffffffffffffffffffffffffffffffff1631611b396040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250612bba565b1115611bf8577ffee95ecae0c8f7f0743ec0ad254c78ab75e5ecca9f1ddcd9f11f9a98124b96bc60405180806020018281038252604f8152602001807f4f7261636c697a65204f4d4720717565727920776173204e4f542073656e742c81526020017f20706c656173652061646420736f6d652045544820746f20636f76657220666f81526020017f722074686520717565727920666565000000000000000000000000000000000081525060600191505060405180910390a1611dad565b7ffee95ecae0c8f7f0743ec0ad254c78ab75e5ecca9f1ddcd9f11f9a98124b96bc6040518080602001828103825260398152602001807f4f7261636c697a65204f4d47207175657279207761732073656e742c2073746181526020017f6e64696e6720627920666f722074686520616e737765722e2e0000000000000081525060400191505060405180910390a1611d476040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250608060405190810160405280604981526020017f6a736f6e2868747470733a2f2f6170692e636f696e6d61726b65746361702e6381526020017f6f6d2f76322f7469636b65722f313830382f292e646174612e71756f7465732e81526020017f5553442e70726963650000000000000000000000000000000000000000000000815250612f8a565b90506020604051908101604052806006600a811115611d6257fe5b81525060066000836000191660001916815260200190815260200160002060008201518160000160006101000a81548160ff0219169083600a811115611da457fe5b02179055509050505b50565b60003073ffffffffffffffffffffffffffffffffffffffff1631611e086040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250612bba565b1115611ec7577ffee95ecae0c8f7f0743ec0ad254c78ab75e5ecca9f1ddcd9f11f9a98124b96bc60405180806020018281038252604f8152602001807f4f7261636c697a652042544d20717565727920776173204e4f542073656e742c81526020017f20706c656173652061646420736f6d652045544820746f20636f76657220666f81526020017f722074686520717565727920666565000000000000000000000000000000000081525060600191505060405180910390a161207b565b7ffee95ecae0c8f7f0743ec0ad254c78ab75e5ecca9f1ddcd9f11f9a98124b96bc6040518080602001828103825260398152602001807f4f7261636c697a652042544d207175657279207761732073656e742c2073746181526020017f6e64696e6720627920666f722074686520616e737765722e2e0000000000000081525060400191505060405180910390a16120166040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250608060405190810160405280604981526020017f6a736f6e2868747470733a2f2f6170692e636f696e6d61726b65746361702e6381526020017f6f6d2f76322f7469636b65722f313836362f292e646174612e71756f7465732e81526020017f5553442e70726963650000000000000000000000000000000000000000000000815250612f8a565b9050602060405190810160405280600a8081111561203057fe5b81525060066000836000191660001916815260200190815260200160002060008201518160000160006101000a81548160ff0219169083600a81111561207257fe5b02179055509050505b50565b60003073ffffffffffffffffffffffffffffffffffffffff16316120d66040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250612bba565b1115612195577ffee95ecae0c8f7f0743ec0ad254c78ab75e5ecca9f1ddcd9f11f9a98124b96bc60405180806020018281038252604f8152602001807f4f7261636c697a652056454e20717565727920776173204e4f542073656e742c81526020017f20706c656173652061646420736f6d652045544820746f20636f76657220666f81526020017f722074686520717565727920666565000000000000000000000000000000000081525060600191505060405180910390a161234a565b7ffee95ecae0c8f7f0743ec0ad254c78ab75e5ecca9f1ddcd9f11f9a98124b96bc6040518080602001828103825260398152602001807f4f7261636c697a652056454e207175657279207761732073656e742c2073746181526020017f6e64696e6720627920666f722074686520616e737765722e2e0000000000000081525060400191505060405180910390a16122e46040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250608060405190810160405280604981526020017f6a736f6e2868747470733a2f2f6170692e636f696e6d61726b65746361702e6381526020017f6f6d2f76322f7469636b65722f313930342f292e646174612e71756f7465732e81526020017f5553442e70726963650000000000000000000000000000000000000000000000815250612f8a565b90506020604051908101604052806003600a8111156122ff57fe5b81525060066000836000191660001916815260200190815260200160002060008201518160000160006101000a81548160ff0219169083600a81111561234157fe5b02179055509050505b50565b60003073ffffffffffffffffffffffffffffffffffffffff16316123a56040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250612bba565b1115612464577ffee95ecae0c8f7f0743ec0ad254c78ab75e5ecca9f1ddcd9f11f9a98124b96bc60405180806020018281038252604f8152602001807f4f7261636c697a652054525820717565727920776173204e4f542073656e742c81526020017f20706c656173652061646420736f6d652045544820746f20636f76657220666f81526020017f722074686520717565727920666565000000000000000000000000000000000081525060600191505060405180910390a1612619565b7ffee95ecae0c8f7f0743ec0ad254c78ab75e5ecca9f1ddcd9f11f9a98124b96bc6040518080602001828103825260398152602001807f4f7261636c697a6520545258207175657279207761732073656e742c2073746181526020017f6e64696e6720627920666f722074686520616e737765722e2e0000000000000081525060400191505060405180910390a16125b36040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250608060405190810160405280604981526020017f6a736f6e2868747470733a2f2f6170692e636f696e6d61726b65746361702e6381526020017f6f6d2f76322f7469636b65722f313935382f292e646174612e71756f7465732e81526020017f5553442e70726963650000000000000000000000000000000000000000000000815250612f8a565b90506020604051908101604052806002600a8111156125ce57fe5b81525060066000836000191660001916815260200190815260200160002060008201518160000160006101000a81548160ff0219169083600a81111561261057fe5b02179055509050505b50565b60003073ffffffffffffffffffffffffffffffffffffffff16316126746040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250612bba565b1115612733577ffee95ecae0c8f7f0743ec0ad254c78ab75e5ecca9f1ddcd9f11f9a98124b96bc60405180806020018281038252604e8152602001807f4f7261636c697a6520414520717565727920776173204e4f542073656e742c2081526020017f706c656173652061646420736f6d652045544820746f20636f76657220666f7281526020017f207468652071756572792066656500000000000000000000000000000000000081525060600191505060405180910390a16128e8565b7ffee95ecae0c8f7f0743ec0ad254c78ab75e5ecca9f1ddcd9f11f9a98124b96bc6040518080602001828103825260388152602001807f4f7261636c697a65204145207175657279207761732073656e742c207374616e81526020017f64696e6720627920666f722074686520616e737765722e2e000000000000000081525060400191505060405180910390a16128826040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250608060405190810160405280604981526020017f6a736f6e2868747470733a2f2f6170692e636f696e6d61726b65746361702e6381526020017f6f6d2f76322f7469636b65722f313730302f292e646174612e71756f7465732e81526020017f5553442e70726963650000000000000000000000000000000000000000000000815250612f8a565b90506020604051908101604052806008600a81111561289d57fe5b81525060066000836000191660001916815260200190815260200160002060008201518160000160006101000a81548160ff0219169083600a8111156128df57fe5b02179055509050505b50565b60003073ffffffffffffffffffffffffffffffffffffffff16316129436040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250612bba565b1115612a02577ffee95ecae0c8f7f0743ec0ad254c78ab75e5ecca9f1ddcd9f11f9a98124b96bc60405180806020018281038252604f8152602001807f4f7261636c697a6520424e4220717565727920776173204e4f542073656e742c81526020017f20706c656173652061646420736f6d652045544820746f20636f76657220666f81526020017f722074686520717565727920666565000000000000000000000000000000000081525060600191505060405180910390a1612bb7565b7ffee95ecae0c8f7f0743ec0ad254c78ab75e5ecca9f1ddcd9f11f9a98124b96bc6040518080602001828103825260398152602001807f4f7261636c697a6520424e42207175657279207761732073656e742c2073746181526020017f6e64696e6720627920666f722074686520616e737765722e2e0000000000000081525060400191505060405180910390a1612b516040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250608060405190810160405280604981526020017f6a736f6e2868747470733a2f2f6170692e636f696e6d61726b65746361702e6381526020017f6f6d2f76322f7469636b65722f313833392f292e646174612e71756f7465732e81526020017f5553442e70726963650000000000000000000000000000000000000000000000815250612f8a565b90506020604051908101604052806005600a811115612b6c57fe5b81525060066000836000191660001916815260200190815260200160002060008201518160000160006101000a81548160ff0219169083600a811115612bae57fe5b02179055509050505b50565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480612c2a57506000612c286000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661388a565b145b15612c3b57612c396000613895565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015612cc057600080fd5b505af1158015612cd4573d6000803e3d6000fd5b505050506040513d6020811015612cea57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515612e52576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015612dd657600080fd5b505af1158015612dea573d6000803e3d6000fd5b505050506040513d6020811015612e0057600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612efc578082015181840152602081019050612ee1565b50505050905090810190601f168015612f295780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015612f4857600080fd5b505af1158015612f5c573d6000803e3d6000fd5b505050506040513d6020811015612f7257600080fd5b81019080805190602001909291905050509050919050565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480612ffc57506000612ffa6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661388a565b145b1561300d5761300b6000613895565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561309257600080fd5b505af11580156130a6573d6000803e3d6000fd5b505050506040513d60208110156130bc57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515613224576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156131a857600080fd5b505af11580156131bc573d6000803e3d6000fd5b505050506040513d60208110156131d257600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156132ce5780820151818401526020810190506132b3565b50505050905090810190601f1680156132fb5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801561331a57600080fd5b505af115801561332e573d6000803e3d6000fd5b505050506040513d602081101561334457600080fd5b8101908080519060200190929190505050905062030d403a02670de0b6b3a76400000181111561337a5760006001029150613525565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adf59f9982600087876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015613432578082015181840152602081019050613417565b50505050905090810190601f16801561345f5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b8381101561349857808201518184015260208101905061347d565b50505050905090810190601f1680156134c55780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b1580156134e657600080fd5b505af11580156134fa573d6000803e3d6000fd5b50505050506040513d602081101561351157600080fd5b810190808051906020019092919050505091505b5092915050565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061359c5750600061359a6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661388a565b145b156135ad576135ab6000613895565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561363257600080fd5b505af1158015613646573d6000803e3d6000fd5b505050506040513d602081101561365c57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156137c4576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561374857600080fd5b505af115801561375c573d6000803e3d6000fd5b505050506040513d602081101561377257600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561384a57600080fd5b505af115801561385e573d6000803e3d6000fd5b505050506040513d602081101561387457600080fd5b8101908080519060200190929190505050905090565b6000813b9050919050565b600061389f6138a6565b9050919050565b6000806138c6731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed61388a565b111561396757731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061395e6040805190810160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250613d35565b60019050613d32565b600061398673c03a2615d5efaf5f49f60b7bb6583eaec212fdf161388a565b1115613a275773c03a2615d5efaf5f49f60b7bb6583eaec212fdf16000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550613a1e6040805190810160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250613d35565b60019050613d32565b6000613a4673b7a07bcf2ba2f2703b24c0691b5278999c59ac7e61388a565b1115613ae75773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550613ade6040805190810160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250613d35565b60019050613d32565b6000613b0673146500cfd35b22e4a392fe0adc06de1a1368ed4861388a565b1115613ba75773146500cfd35b22e4a392fe0adc06de1a1368ed486000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550613b9e6040805190810160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250613d35565b60019050613d32565b6000613bc6736f485c8bf6fc43ea212e93bbf8ce046c7f1cb47561388a565b1115613c2957736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4756000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050613d32565b6000613c487320e12a1f859b3feae5fb2a0a32c18f5a65555bbf61388a565b1115613cab577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050613d32565b6000613cca7351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa61388a565b1115613d2d577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050613d32565b600090505b90565b8060029080519060200190613d4b929190613d6e565b5050565b6020604051908101604052806000600a811115613d6857fe5b81525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10613daf57805160ff1916838001178555613ddd565b82800160010185558215613ddd579182015b82811115613ddc578251825591602001919060010190613dc1565b5b509050613dea9190613dee565b5090565b613e1091905b80821115613e0c576000816000905550600101613df4565b5090565b905600a165627a7a723058201af7abd73858a521008143ff51db71d103c49c5ec5d6c6b92bbbf047f9e2d9d10029",
  "sourceMap": "97:9976:0:-;;;1075:10;1067:5;;:18;;;;;;;;;;;;;;;;;;1126:4;1118:21;;;1111:5;;;;;;;;;;;1101:39;;;;;;;;;;;;1231:42;1203:3;;:71;;;;;;;;;;;;;;;;;;1285:58;2929:4:1;1325:17:0;;2755:4:1;1303:19:0;;:39;1285:17;;;:58;;;:::i;:::-;1353:11;:9;;;:11;;;:::i;:::-;1374;:9;;;:11;;;:::i;:::-;1395;:9;;;:11;;;:::i;:::-;1416;:9;;;:11;;;:::i;:::-;1437;:9;;;:11;;;:::i;:::-;1458;:9;;;:11;;;:::i;:::-;1479;:9;;;:11;;;:::i;:::-;1500;:9;;;:11;;;:::i;:::-;1521:10;:8;;;:10;;;:::i;:::-;1541:11;:9;;;:11;;;:::i;:::-;1562;:9;;;:11;;;:::i;:::-;97:9976;;25467:114:1;3255:1;3249:3;;;;;;;;;;;3241:15;;;3240:49;;;;3287:1;3260:25;3280:3;;;;;;;;;;;3260:11;;;:25;;;:::i;:::-;:28;3240:49;3237:101;;;3303:35;2971:1;3303:19;;;:35;;;:::i;:::-;;3237:101;3373:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3373:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3373:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3373:16:1;;;;;;;;;;;;;;;;3352:37;;3360:8;;;;;;;;;;;3352:37;;;;3349:92;;;3424:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3424:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3424:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3424:16:1;;;;;;;;;;;;;;;;3403:8;;:38;;;;;;;;;;;;;;;;;;3349:92;25545:8;;;;;;;;;;;:21;;;25567:6;25545:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25545:29:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;25545:29:1;;;;25467:114;:::o;3366:591:0:-;3752:15;3510:4;3502:21;;;3475:24;;;;;;;;;;;;;;;;;;;:17;;;:24;;;:::i;:::-;:48;3471:480;;;3544:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3471:480;;;3670:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3770:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;;;:89;;;:::i;:::-;3752:107;;3902:38;;;;;;;;;3919:20;3902:38;;;;;;;;;;;3873:17;:26;3891:7;3873:26;;;;;;;;;;;;;;;;;:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3471:480;3366:591;:::o;3963:602::-;4349:16;4107:4;4099:21;;;4072:24;;;;;;;;;;;;;;;;;;;:17;;;:24;;;:::i;:::-;:48;4068:491;;;4141:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4068:491;;;4267:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4368:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;;;:98;;;:::i;:::-;4349:117;;4510:38;;;;;;;;;4527:20;4510:38;;;;;;;;;;;4480:17;:27;4498:8;4480:27;;;;;;;;;;;;;;;;;:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4068:491;3963:602;:::o;4571:606::-;4957:16;4715:4;4707:21;;;4680:24;;;;;;;;;;;;;;;;;;;:17;;;:24;;;:::i;:::-;:48;4676:495;;;4749:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4676:495;;;4875:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4976:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;;;:98;;;:::i;:::-;4957:117;;5118:38;;;;;;;;;5135:20;5118:38;;;;;;;;;;;5088:17;:27;5106:8;5088:27;;;;;;;;;;;;;;;;;:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4676:495;4571:606;:::o;5183:::-;5569:16;5327:4;5319:21;;;5292:24;;;;;;;;;;;;;;;;;;;:17;;;:24;;;:::i;:::-;:48;5288:495;;;5361:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5288:495;;;5487:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5588:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;;;:98;;;:::i;:::-;5569:117;;5730:38;;;;;;;;;5747:20;5730:38;;;;;;;;;;;5700:17;:27;5718:8;5700:27;;;;;;;;;;;;;;;;;:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5288:495;5183:606;:::o;5795:::-;6181:16;5939:4;5931:21;;;5904:24;;;;;;;;;;;;;;;;;;;:17;;;:24;;;:::i;:::-;:48;5900:495;;;5973:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5900:495;;;6099:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6200:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;;;:98;;;:::i;:::-;6181:117;;6342:38;;;;;;;;;6359:20;6342:38;;;;;;;;;;;6312:17;:27;6330:8;6312:27;;;;;;;;;;;;;;;;;:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5900:495;5795:606;:::o;6411:::-;6797:16;6555:4;6547:21;;;6520:24;;;;;;;;;;;;;;;;;;;:17;;;:24;;;:::i;:::-;:48;6516:495;;;6589:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6516:495;;;6715:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6816:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;;;:98;;;:::i;:::-;6797:117;;6958:38;;;;;;;;;6975:20;6958:38;;;;;;;;;;;6928:17;:27;6946:8;6928:27;;;;;;;;;;;;;;;;;:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6516:495;6411:606;:::o;7023:::-;7409:16;7167:4;7159:21;;;7132:24;;;;;;;;;;;;;;;;;;;:17;;;:24;;;:::i;:::-;:48;7128:495;;;7201:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7128:495;;;7327:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7428:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;;;:98;;;:::i;:::-;7409:117;;7570:38;;;;;;;;;7587:20;7570:38;;;;;;;;;;;7540:17;:27;7558:8;7540:27;;;;;;;;;;;;;;;;;:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7128:495;7023:606;:::o;7635:::-;8021:16;7779:4;7771:21;;;7744:24;;;;;;;;;;;;;;;;;;;:17;;;:24;;;:::i;:::-;:48;7740:495;;;7813:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7740:495;;;7939:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8040:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;;;:98;;;:::i;:::-;8021:117;;8182:38;;;;;;;;;8199:20;8182:38;;;;;;;;;;;8152:17;:27;8170:8;8152:27;;;;;;;;;;;;;;;;;:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7740:495;7635:606;:::o;8246:598::-;8629:16;8389:4;8381:21;;;8354:24;;;;;;;;;;;;;;;;;;;:17;;;:24;;;:::i;:::-;:48;8350:488;;;8423:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8350:488;;;8548:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8648:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;;;:98;;;:::i;:::-;8629:117;;8790:37;;;;;;;;;8807:19;8790:37;;;;;;;;;;;8760:17;:27;8778:8;8760:27;;;;;;;;;;;;;;;;;:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8350:488;8246:598;:::o;8849:608::-;9235:17;8993:4;8985:21;;;8958:24;;;;;;;;;;;;;;;;;;;:17;;;:24;;;:::i;:::-;:48;8954:497;;;9027:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8954:497;;;9153:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9255:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;;;:98;;;:::i;:::-;9235:118;;9398:38;;;;;;;;;9415:20;9398:38;;;;;;;;;;;9367:17;:28;9385:9;9367:28;;;;;;;;;;;;;;;;;:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8954:497;8849:608;:::o;9463:::-;9849:17;9607:4;9599:21;;;9572:24;;;;;;;;;;;;;;;;;;;:17;;;:24;;;:::i;:::-;:48;9568:497;;;9641:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9568:497;;;9767:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9869:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;;;:98;;;:::i;:::-;9849:118;;10012:38;;;;;;;;;10029:20;10012:38;;;;;;;;;;;9981:17;:28;9999:9;9981:28;;;;;;;;;;;;;;;;;:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9568:497;9463:608;:::o;25882:150:1:-;25944:10;26010:5;25998:18;25989:27;;25975:51;;;:::o;3565:183::-;3628:4;3648:21;:19;;;:21;;;:::i;:::-;3641:28;;3565:183;;;:::o;5776:134::-;5852:4;3255:1;3249:3;;;;;;;;;;;3241:15;;;3240:49;;;;3287:1;3260:25;3280:3;;;;;;;;;;;3260:11;;;:25;;;:::i;:::-;:28;3240:49;3237:101;;;3303:35;2971:1;3303:19;;;:35;;;:::i;:::-;;3237:101;3373:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3373:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3373:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3373:16:1;;;;;;;;;;;;;;;;3352:37;;3360:8;;;;;;;;;;;3352:37;;;;3349:92;;;3424:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3424:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3424:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3424:16:1;;;;;;;;;;;;;;;;3403:8;;:38;;;;;;;;;;;;;;;;;;3349:92;5874:8;;;;;;;;;;;:17;;;5892:10;5874:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5874:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5874:29:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5874:29:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5874:29:1;;;;;;;;;;;;;;;;5867:36;;5776:134;;;:::o;6081:306::-;6166:10;6187;3255:1;3249:3;;;;;;;;;;;3241:15;;;3240:49;;;;3287:1;3260:25;3280:3;;;;;;;;;;;3260:11;;;:25;;;:::i;:::-;:28;3240:49;3237:101;;;3303:35;2971:1;3303:19;;;:35;;;:::i;:::-;;3237:101;3373:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3373:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3373:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3373:16:1;;;;;;;;;;;;;;;;3352:37;;3360:8;;;;;;;;;;;3352:37;;;;3349:92;;;3424:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3424:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3424:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3424:16:1;;;;;;;;;;;;;;;;3403:8;;:38;;;;;;;;;;;;;;;;;;3349:92;6200:8;;;;;;;;;;;:17;;;6218:10;6200:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6200:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6200:29:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6200:29:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6200:29:1;;;;;;;;;;;;;;;;6187:42;;6273:6;6261:11;:18;6251:7;:28;6243:5;:36;6239:50;;;6288:1;6281:8;;;;;;6239:50;6333:8;;;;;;;;;;;:14;;;6354:5;6361:1;6364:10;6376:3;6333:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6333:47:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6333:47:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6333:47:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6333:47:1;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6333:47:1;;;;;;;;;;;;;;;;6326:54;;3452:1;6081:306;;;;;:::o;3753:1749::-;3801:4;3876:1;3820:55;3832:42;3820:11;;;:55;;;:::i;:::-;:57;3816:245;;;3930:42;3902:3;;:71;;;;;;;;;;;;;;;;;;3987:38;;;;;;;;;;;;;;;;;;;:23;;;:38;;;:::i;:::-;4046:4;4039:11;;;;3816:245;4130:1;4074:55;4086:42;4074:11;;;:55;;;:::i;:::-;:57;4070:254;;;4192:42;4164:3;;:71;;;;;;;;;;;;;;;;;;4249:39;;;;;;;;;;;;;;;;;;;:23;;;:39;;;:::i;:::-;4309:4;4302:11;;;;4070:254;4393:1;4337:55;4349:42;4337:11;;;:55;;;:::i;:::-;:57;4333:249;;;4453:42;4425:3;;:71;;;;;;;;;;;;;;;;;;4510:36;;;;;;;;;;;;;;;;;;;:23;;;:36;;;:::i;:::-;4567:4;4560:11;;;;4333:249;4651:1;4595:55;4607:42;4595:11;;;:55;;;:::i;:::-;:57;4591:253;;;4713:42;4685:3;;:71;;;;;;;;;;;;;;;;;;4770:38;;;;;;;;;;;;;;;;;;;:23;;;:38;;;:::i;:::-;4829:4;4822:11;;;;4591:253;4913:1;4857:55;4869:42;4857:11;;;:55;;;:::i;:::-;:57;4853:201;;;4975:42;4947:3;;:71;;;;;;;;;;;;;;;;;;5039:4;5032:11;;;;4853:201;5123:1;5067:55;5079:42;5067:11;;;:55;;;:::i;:::-;:57;5063:200;;;5184:42;5156:3;;:71;;;;;;;;;;;;;;;;;;5248:4;5241:11;;;;5063:200;5332:1;5276:55;5288:42;5276:11;;;:55;;;:::i;:::-;:57;5272:202;;;5395:42;5367:3;;:71;;;;;;;;;;;;;;;;;;5459:4;5452:11;;;;5272:202;5490:5;5483:12;;3753:1749;;:::o;34001:118::-;34099:13;34075:21;:37;;;;;;;;;;;;:::i;:::-;;34001:118;:::o;97:9976:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "97:9976:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;97:9976:0;1642:8;;;7635:606;;;;;;3254:106;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3254:106:0;;;;;;;;;;;;;;;;;;;;;;;5795:606;;;;;;8849:608;;;;;;3366:591;;;;;;5508:111:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5508:111:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1663:1585:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1663:1585:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;922:62;;8:9:-1;5:2;;;30:1;27;20:12;5:2;922:62:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3963:602;;;;;;7023:606;;;;;;9463:608;;;;;;5183:606;;;;;;4571;;;;;;8246:598;;;;;;6411:606;;;;;;7635;8021:16;7779:4;7771:21;;;7744:24;;;;;;;;;;;;;;;;;;;:17;:24::i;:::-;:48;7740:495;;;7813:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7740:495;;;7939:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8040:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;:98::i;:::-;8021:117;;8182:38;;;;;;;;;8199:20;8182:38;;;;;;;;;;;8152:17;:27;8170:8;8152:27;;;;;;;;;;;;;;;;;:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7740:495;7635:606;:::o;3254:106::-;3300:13;3340:4;3332:21;;;3325:28;;3254:106;:::o;5795:606::-;6181:16;5939:4;5931:21;;;5904:24;;;;;;;;;;;;;;;;;;;:17;:24::i;:::-;:48;5900:495;;;5973:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5900:495;;;6099:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6200:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;:98::i;:::-;6181:117;;6342:38;;;;;;;;;6359:20;6342:38;;;;;;;;;;;6312:17;:27;6330:8;6312:27;;;;;;;;;;;;;;;;;:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5900:495;5795:606;:::o;8849:608::-;9235:17;8993:4;8985:21;;;8958:24;;;;;;;;;;;;;;;;;;;:17;:24::i;:::-;:48;8954:497;;;9027:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8954:497;;;9153:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9255:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;:98::i;:::-;9235:118;;9398:38;;;;;;;;;9415:20;9398:38;;;;;;;;;;;9367:17;:28;9385:9;9367:28;;;;;;;;;;;;;;;;;:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8954:497;8849:608;:::o;3366:591::-;3752:15;3510:4;3502:21;;;3475:24;;;;;;;;;;;;;;;;;;;:17;:24::i;:::-;:48;3471:480;;;3544:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3471:480;;;3670:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3770:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;:89::i;:::-;3752:107;;3902:38;;;;;;;;;3919:20;3902:38;;;;;;;;;;;3873:17;:26;3891:7;3873:26;;;;;;;;;;;;;;;;;:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3471:480;3366:591;:::o;5508:111:1:-;5574:38;5585:4;5591:6;5609:1;5599:12;;;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;5599:12:1;;;;5574:10;:38::i;:::-;5508:111;;:::o;1663:1585:0:-;1798:25;;:::i;:::-;1766:20;:18;:20::i;:::-;1752:34;;:10;:34;;;1744:43;;;;;;;;1826:17;:21;1844:2;1826:21;;;;;;;;;;;;;;;;;1798:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1873:20;1861:32;;;;;;;;:1;:8;;;:32;;;;;;;;;1857:117;;;1913:25;1931:6;1913:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1913:25:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1952:11;:9;:11::i;:::-;1857:117;2000:20;1988:32;;;;;;;;:1;:8;;;:32;;;;;;;;;1984:117;;;2040:25;2058:6;2040:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2040:25:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2079:11;:9;:11::i;:::-;1984:117;2127:20;2115:32;;;;;;;;:1;:8;;;:32;;;;;;;;;2111:117;;;2167:25;2185:6;2167:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2167:25:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2206:11;:9;:11::i;:::-;2111:117;2254:20;2242:32;;;;;;;;:1;:8;;;:32;;;;;;;;;2238:117;;;2294:25;2312:6;2294:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2294:25:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2333:11;:9;:11::i;:::-;2238:117;2381:20;2369:32;;;;;;;;:1;:8;;;:32;;;;;;;;;2365:117;;;2421:25;2439:6;2421:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2421:25:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2460:11;:9;:11::i;:::-;2365:117;2508:20;2496:32;;;;;;;;:1;:8;;;:32;;;;;;;;;2492:117;;;2548:25;2566:6;2548:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2548:25:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2587:11;:9;:11::i;:::-;2492:117;2635:20;2623:32;;;;;;;;:1;:8;;;:32;;;;;;;;;2619:117;;;2675:25;2693:6;2675:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2675:25:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2714:11;:9;:11::i;:::-;2619:117;2762:20;2750:32;;;;;;;;:1;:8;;;:32;;;;;;;;;2746:117;;;2802:25;2820:6;2802:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2802:25:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2841:11;:9;:11::i;:::-;2746:117;2889:19;2877:31;;;;;;;;:1;:8;;;:31;;;;;;;;;2873:114;;;2928:24;2945:6;2928:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2928:24:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2966:10;:8;:10::i;:::-;2873:114;3013:20;3001:32;;;;;;;;:1;:8;;;:32;;;;;;;;;2997:117;;;3053:25;3071:6;3053:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3053:25:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3092:11;:9;:11::i;:::-;2997:117;3140:20;3128:32;;;;;;;;:1;:8;;;:32;;;;;;;;;3124:117;;;3180:25;3198:6;3180:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3180:25:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3219:11;:9;:11::i;:::-;3124:117;1663:1585;;;;:::o;922:62::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3963:602::-;4349:16;4107:4;4099:21;;;4072:24;;;;;;;;;;;;;;;;;;;:17;:24::i;:::-;:48;4068:491;;;4141:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4068:491;;;4267:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4368:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;:98::i;:::-;4349:117;;4510:38;;;;;;;;;4527:20;4510:38;;;;;;;;;;;4480:17;:27;4498:8;4480:27;;;;;;;;;;;;;;;;;:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4068:491;3963:602;:::o;7023:606::-;7409:16;7167:4;7159:21;;;7132:24;;;;;;;;;;;;;;;;;;;:17;:24::i;:::-;:48;7128:495;;;7201:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7128:495;;;7327:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7428:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;:98::i;:::-;7409:117;;7570:38;;;;;;;;;7587:20;7570:38;;;;;;;;;;;7540:17;:27;7558:8;7540:27;;;;;;;;;;;;;;;;;:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7128:495;7023:606;:::o;9463:608::-;9849:17;9607:4;9599:21;;;9572:24;;;;;;;;;;;;;;;;;;;:17;:24::i;:::-;:48;9568:497;;;9641:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9568:497;;;9767:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9869:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;:98::i;:::-;9849:118;;10012:38;;;;;;;;;10029:20;10012:38;;;;;;;;;;;9981:17;:28;9999:9;9981:28;;;;;;;;;;;;;;;;;:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9568:497;9463:608;:::o;5183:606::-;5569:16;5327:4;5319:21;;;5292:24;;;;;;;;;;;;;;;;;;;:17;:24::i;:::-;:48;5288:495;;;5361:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5288:495;;;5487:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5588:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;:98::i;:::-;5569:117;;5730:38;;;;;;;;;5747:20;5730:38;;;;;;;;;;;5700:17;:27;5718:8;5700:27;;;;;;;;;;;;;;;;;:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5288:495;5183:606;:::o;4571:::-;4957:16;4715:4;4707:21;;;4680:24;;;;;;;;;;;;;;;;;;;:17;:24::i;:::-;:48;4676:495;;;4749:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4676:495;;;4875:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4976:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;:98::i;:::-;4957:117;;5118:38;;;;;;;;;5135:20;5118:38;;;;;;;;;;;5088:17;:27;5106:8;5088:27;;;;;;;;;;;;;;;;;:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4676:495;4571:606;:::o;8246:598::-;8629:16;8389:4;8381:21;;;8354:24;;;;;;;;;;;;;;;;;;;:17;:24::i;:::-;:48;8350:488;;;8423:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8350:488;;;8548:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8648:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;:98::i;:::-;8629:117;;8790:37;;;;;;;;;8807:19;8790:37;;;;;;;;;;;8760:17;:27;8778:8;8760:27;;;;;;;;;;;;;;;;;:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8350:488;8246:598;:::o;6411:606::-;6797:16;6555:4;6547:21;;;6520:24;;;;;;;;;;;;;;;;;;;:17;:24::i;:::-;:48;6516:495;;;6589:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6516:495;;;6715:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6816:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;:98::i;:::-;6797:117;;6958:38;;;;;;;;;6975:20;6958:38;;;;;;;;;;;6928:17;:27;6946:8;6928:27;;;;;;;;;;;;;;;;;:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6516:495;6411:606;:::o;5776:134:1:-;5852:4;3255:1;3249:3;;;;;;;;;;;3241:15;;;3240:49;;;;3287:1;3260:25;3280:3;;;;;;;;;;;3260:11;:25::i;:::-;:28;3240:49;3237:101;;;3303:35;2971:1;3303:19;:35::i;:::-;;3237:101;3373:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3373:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3373:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3373:16:1;;;;;;;;;;;;;;;;3352:37;;3360:8;;;;;;;;;;;3352:37;;;;3349:92;;;3424:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3424:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3424:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3424:16:1;;;;;;;;;;;;;;;;3403:8;;:38;;;;;;;;;;;;;;;;;;3349:92;5874:8;;;;;;;;;;;:17;;;5892:10;5874:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5874:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5874:29:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5874:29:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5874:29:1;;;;;;;;;;;;;;;;5867:36;;5776:134;;;:::o;6081:306::-;6166:10;6187;3255:1;3249:3;;;;;;;;;;;3241:15;;;3240:49;;;;3287:1;3260:25;3280:3;;;;;;;;;;;3260:11;:25::i;:::-;:28;3240:49;3237:101;;;3303:35;2971:1;3303:19;:35::i;:::-;;3237:101;3373:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3373:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3373:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3373:16:1;;;;;;;;;;;;;;;;3352:37;;3360:8;;;;;;;;;;;3352:37;;;;3349:92;;;3424:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3424:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3424:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3424:16:1;;;;;;;;;;;;;;;;3403:8;;:38;;;;;;;;;;;;;;;;;;3349:92;6200:8;;;;;;;;;;;:17;;;6218:10;6200:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6200:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6200:29:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6200:29:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6200:29:1;;;;;;;;;;;;;;;;6187:42;;6273:6;6261:11;:18;6251:7;:28;6243:5;:36;6239:50;;;6288:1;6281:8;;;;;;6239:50;6333:8;;;;;;;;;;;:14;;;6354:5;6361:1;6364:10;6376:3;6333:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6333:47:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6333:47:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6333:47:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6333:47:1;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6333:47:1;;;;;;;;;;;;;;;;6326:54;;3452:1;6081:306;;;;;:::o;25350:112::-;25410:7;3255:1;3249:3;;;;;;;;;;;3241:15;;;3240:49;;;;3287:1;3260:25;3280:3;;;;;;;;;;;3260:11;:25::i;:::-;:28;3240:49;3237:101;;;3303:35;2971:1;3303:19;:35::i;:::-;;3237:101;3373:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3373:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3373:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3373:16:1;;;;;;;;;;;;;;;;3352:37;;3360:8;;;;;;;;;;;3352:37;;;;3349:92;;;3424:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3424:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3424:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3424:16:1;;;;;;;;;;;;;;;;3403:8;;:38;;;;;;;;;;;;;;;;;;3349:92;25435:8;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25435:20:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;25435:20:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;25435:20:1;;;;;;;;;;;;;;;;25428:27;;25350:112;:::o;25882:150::-;25944:10;26010:5;25998:18;25989:27;;25975:51;;;:::o;3565:183::-;3628:4;3648:21;:19;:21::i;:::-;3641:28;;3565:183;;;:::o;3753:1749::-;3801:4;3876:1;3820:55;3832:42;3820:11;:55::i;:::-;:57;3816:245;;;3930:42;3902:3;;:71;;;;;;;;;;;;;;;;;;3987:38;;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;4046:4;4039:11;;;;3816:245;4130:1;4074:55;4086:42;4074:11;:55::i;:::-;:57;4070:254;;;4192:42;4164:3;;:71;;;;;;;;;;;;;;;;;;4249:39;;;;;;;;;;;;;;;;;;;:23;:39::i;:::-;4309:4;4302:11;;;;4070:254;4393:1;4337:55;4349:42;4337:11;:55::i;:::-;:57;4333:249;;;4453:42;4425:3;;:71;;;;;;;;;;;;;;;;;;4510:36;;;;;;;;;;;;;;;;;;;:23;:36::i;:::-;4567:4;4560:11;;;;4333:249;4651:1;4595:55;4607:42;4595:11;:55::i;:::-;:57;4591:253;;;4713:42;4685:3;;:71;;;;;;;;;;;;;;;;;;4770:38;;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;4829:4;4822:11;;;;4591:253;4913:1;4857:55;4869:42;4857:11;:55::i;:::-;:57;4853:201;;;4975:42;4947:3;;:71;;;;;;;;;;;;;;;;;;5039:4;5032:11;;;;4853:201;5123:1;5067:55;5079:42;5067:11;:55::i;:::-;:57;5063:200;;;5184:42;5156:3;;:71;;;;;;;;;;;;;;;;;;5248:4;5241:11;;;;5063:200;5332:1;5276:55;5288:42;5276:11;:55::i;:::-;:57;5272:202;;;5395:42;5367:3;;:71;;;;;;;;;;;;;;;;;;5459:4;5452:11;;;;5272:202;5490:5;5483:12;;3753:1749;;:::o;34001:118::-;34099:13;34075:21;:37;;;;;;;;;;;;:::i;:::-;;34001:118;:::o;97:9976:0:-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.21;\nimport \"installed_contracts/oraclize-api/contracts/usingOraclize.sol\";\n\ncontract OraclizeTest is usingOraclize {\n\n    address owner;\n\n    event LogInfo(string description);\n    event LogPriceUpdateEth(string price);\n    event LogPriceUpdateEos(string price);\n    event LogPriceUpdateTrx(string price);\n    event LogPriceUpdateVen(string price);\n    event LogPriceUpdateIcx(string price);\n    event LogPriceUpdateBnb(string price);\n    event LogPriceUpdateOmg(string price);\n    event LogPriceUpdateZil(string price);\n    event LogPriceUpdateAe(string price);\n    event LogPriceUpdateZrx(string price);\n    event LogPriceUpdateBtm(string price);\n    event LogUpdate(address indexed _owner, uint indexed _balance);\n    enum oraclizeState { ForEth, ForEos, ForTrx, ForVen, ForIcx, ForBnb, ForOmg, ForZil, ForAe, ForZrx, ForBtm}\n\n    struct oraclizeCallback {\n        oraclizeState oState;\n    }\n\n    mapping (bytes32 => oraclizeCallback) public oraclizeCallbacks;\n\n    // Constructor\n    function OraclizeTest()\n    payable\n    public {\n        owner = msg.sender;\n\n        emit LogUpdate(owner, address(this).balance);\n\n        // Replace the next line with your version:\n        OAR = OraclizeAddrResolverI(0x08193C23804b292452a6fdc0E88F42Fd121A2443);\n\n        oraclize_setProof(proofType_TLSNotary | proofStorage_IPFS);\n        updateEth();\n        updateEos();\n        updateTrx();\n        updateVen();\n        updateIcx();\n        updateBnb();\n        updateOmg();\n        updateZil();\n        updateAe();\n        updateZrx();\n        updateBtm();\n    }\n\n    // Fallback function\n    function()\n    public{\n        revert();\n    }\n\n    function __callback(bytes32 id, string result, bytes proof)\n    public {\n        require(msg.sender == oraclize_cbAddress());\n\n        oraclizeCallback memory o = oraclizeCallbacks[id];\n        if (o.oState == oraclizeState.ForEth){\n            emit LogPriceUpdateEth(result);\n            updateEth();\n        } \n        if (o.oState == oraclizeState.ForEos){\n            emit LogPriceUpdateEos(result);\n            updateEos();\n        } \n        if (o.oState == oraclizeState.ForTrx){\n            emit LogPriceUpdateTrx(result);\n            updateTrx();\n        } \n        if (o.oState == oraclizeState.ForVen){\n            emit LogPriceUpdateVen(result);\n            updateVen();\n        } \n        if (o.oState == oraclizeState.ForIcx){\n            emit LogPriceUpdateIcx(result);\n            updateIcx();\n        } \n        if (o.oState == oraclizeState.ForBnb){\n            emit LogPriceUpdateBnb(result);\n            updateBnb();\n        } \n        if (o.oState == oraclizeState.ForOmg){\n            emit LogPriceUpdateOmg(result);\n            updateOmg();\n        } \n        if (o.oState == oraclizeState.ForZil){\n            emit LogPriceUpdateZil(result);\n            updateZil();\n        } \n        if (o.oState == oraclizeState.ForAe){\n            emit LogPriceUpdateAe(result);\n            updateAe();\n        } \n        if (o.oState == oraclizeState.ForZrx){\n            emit LogPriceUpdateZrx(result);\n            updateZrx();\n        } \n        if (o.oState == oraclizeState.ForBtm){\n            emit LogPriceUpdateBtm(result);\n            updateBtm();\n        } \n    }\n\n    function getBalance()\n    public\n    returns (uint _balance) {\n        return address(this).balance;\n    }\n\n    function updateEth()\n    payable\n    public {\n        // Check if we have enough remaining funds\n        if (oraclize_getPrice(\"URL\") > address(this).balance) {\n            emit LogInfo(\"Oraclize ETH query was NOT sent, please add some ETH to cover for the query fee\");\n        } else {\n            emit LogInfo(\"Oraclize ETH query was sent, standing by for the answer..\");\n            bytes32 queryId = oraclize_query(\"URL\",\"json(https://api.coinbase.com/v2/prices/ETH-USD/spot).data.amount\");\n            oraclizeCallbacks[queryId] = oraclizeCallback(oraclizeState.ForEth);\n        }\n    }\n\n    function updateEos()\n    payable\n    public {\n        // Check if we have enough remaining funds\n        if (oraclize_getPrice(\"URL\") > address(this).balance) {\n            emit LogInfo(\"Oraclize EOS query was NOT sent, please add some ETH to cover for the query fee\");\n        } else {\n            emit LogInfo(\"Oraclize EOS query was sent, standing by for the answer..\");\n            bytes32 queryId2 = oraclize_query(\"URL\", \"json(https://api.coinmarketcap.com/v2/ticker/1765/).data.quotes.USD.price\");\n            oraclizeCallbacks[queryId2] = oraclizeCallback(oraclizeState.ForEos);\n        }\n    }\n\n    function updateTrx()\n    payable\n    public {\n        // Check if we have enough remaining funds\n        if (oraclize_getPrice(\"URL\") > address(this).balance) {\n            emit LogInfo(\"Oraclize TRX query was NOT sent, please add some ETH to cover for the query fee\");\n        } else {\n            emit LogInfo(\"Oraclize TRX query was sent, standing by for the answer..\");\n            bytes32 queryId3 = oraclize_query(\"URL\", \"json(https://api.coinmarketcap.com/v2/ticker/1958/).data.quotes.USD.price\");\n            oraclizeCallbacks[queryId3] = oraclizeCallback(oraclizeState.ForTrx);\n   \n        }\n    }\n\n    function updateVen()\n    payable\n    public {\n        // Check if we have enough remaining funds\n        if (oraclize_getPrice(\"URL\") > address(this).balance) {\n            emit LogInfo(\"Oraclize VEN query was NOT sent, please add some ETH to cover for the query fee\");\n        } else {\n            emit LogInfo(\"Oraclize VEN query was sent, standing by for the answer..\");\n            bytes32 queryId4 = oraclize_query(\"URL\", \"json(https://api.coinmarketcap.com/v2/ticker/1904/).data.quotes.USD.price\");\n            oraclizeCallbacks[queryId4] = oraclizeCallback(oraclizeState.ForVen);\n   \n        }\n    }\n\n    function updateIcx()\n    payable\n    public {\n        // Check if we have enough remaining funds\n        if (oraclize_getPrice(\"URL\") > address(this).balance) {\n            emit LogInfo(\"Oraclize ICX query was NOT sent, please add some ETH to cover for the query fee\");\n        } else {\n            emit LogInfo(\"Oraclize ICX query was sent, standing by for the answer..\");\n            bytes32 queryId5 = oraclize_query(\"URL\", \"json(https://api.coinmarketcap.com/v2/ticker/2099/).data.quotes.USD.price\");\n            oraclizeCallbacks[queryId5] = oraclizeCallback(oraclizeState.ForIcx);\n   \n        }\n    }\n    \n    function updateBnb()\n    payable\n    public {\n        // Check if we have enough remaining funds\n        if (oraclize_getPrice(\"URL\") > address(this).balance) {\n            emit LogInfo(\"Oraclize BNB query was NOT sent, please add some ETH to cover for the query fee\");\n        } else {\n            emit LogInfo(\"Oraclize BNB query was sent, standing by for the answer..\");\n            bytes32 queryId6 = oraclize_query(\"URL\", \"json(https://api.coinmarketcap.com/v2/ticker/1839/).data.quotes.USD.price\");\n            oraclizeCallbacks[queryId6] = oraclizeCallback(oraclizeState.ForBnb);\n   \n        }\n    }\n\n    function updateOmg()\n    payable\n    public {\n        // Check if we have enough remaining funds\n        if (oraclize_getPrice(\"URL\") > address(this).balance) {\n            emit LogInfo(\"Oraclize OMG query was NOT sent, please add some ETH to cover for the query fee\");\n        } else {\n            emit LogInfo(\"Oraclize OMG query was sent, standing by for the answer..\");\n            bytes32 queryId7 = oraclize_query(\"URL\", \"json(https://api.coinmarketcap.com/v2/ticker/1808/).data.quotes.USD.price\");\n            oraclizeCallbacks[queryId7] = oraclizeCallback(oraclizeState.ForOmg);\n   \n        }\n    }\n\n    function updateZil()\n    payable\n    public {\n        // Check if we have enough remaining funds\n        if (oraclize_getPrice(\"URL\") > address(this).balance) {\n            emit LogInfo(\"Oraclize ZIL query was NOT sent, please add some ETH to cover for the query fee\");\n        } else {\n            emit LogInfo(\"Oraclize ZIL query was sent, standing by for the answer..\");\n            bytes32 queryId8 = oraclize_query(\"URL\", \"json(https://api.coinmarketcap.com/v2/ticker/2469/).data.quotes.USD.price\");\n            oraclizeCallbacks[queryId8] = oraclizeCallback(oraclizeState.ForZil);\n   \n        }\n    }\n    function updateAe()\n    payable\n    public {\n        // Check if we have enough remaining funds\n        if (oraclize_getPrice(\"URL\") > address(this).balance) {\n            emit LogInfo(\"Oraclize AE query was NOT sent, please add some ETH to cover for the query fee\");\n        } else {\n            emit LogInfo(\"Oraclize AE query was sent, standing by for the answer..\");\n            bytes32 queryId9 = oraclize_query(\"URL\", \"json(https://api.coinmarketcap.com/v2/ticker/1700/).data.quotes.USD.price\");\n            oraclizeCallbacks[queryId9] = oraclizeCallback(oraclizeState.ForAe);\n        }\n    }\n    function updateZrx()\n    payable\n    public {\n        // Check if we have enough remaining funds\n        if (oraclize_getPrice(\"URL\") > address(this).balance) {\n            emit LogInfo(\"Oraclize ZRX query was NOT sent, please add some ETH to cover for the query fee\");\n        } else {\n            emit LogInfo(\"Oraclize ZRX query was sent, standing by for the answer..\");\n            bytes32 queryId10 = oraclize_query(\"URL\", \"json(https://api.coinmarketcap.com/v2/ticker/1896/).data.quotes.USD.price\");\n            oraclizeCallbacks[queryId10] = oraclizeCallback(oraclizeState.ForZrx);\n   \n        }\n    }\n\n    function updateBtm()\n    payable\n    public {\n        // Check if we have enough remaining funds\n        if (oraclize_getPrice(\"URL\") > address(this).balance) {\n            emit LogInfo(\"Oraclize BTM query was NOT sent, please add some ETH to cover for the query fee\");\n        } else {\n            emit LogInfo(\"Oraclize BTM query was sent, standing by for the answer..\");\n            bytes32 queryId11 = oraclize_query(\"URL\", \"json(https://api.coinmarketcap.com/v2/ticker/1866/).data.quotes.USD.price\");\n            oraclizeCallbacks[queryId11] = oraclizeCallback(oraclizeState.ForBtm);\n   \n        }\n    }\n}",
  "sourcePath": "/Users/jeffreyyu/Desktop/ClassRelated/CS359B/cs359b-diy-a-new-decentralized-index/oracleDapp/contracts/OraclizeTest.sol",
  "ast": {
    "absolutePath": "/Users/jeffreyyu/Desktop/ClassRelated/CS359B/cs359b-diy-a-new-decentralized-index/oracleDapp/contracts/OraclizeTest.sol",
    "exportedSymbols": {
      "OraclizeTest": [
        767
      ]
    },
    "id": 768,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "installed_contracts/oraclize-api/contracts/usingOraclize.sol",
        "file": "installed_contracts/oraclize-api/contracts/usingOraclize.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 768,
        "sourceUnit": 6590,
        "src": "25:70:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6589,
              "src": "122:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$6589",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "122:13:0"
          }
        ],
        "contractDependencies": [
          6589
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 767,
        "linearizedBaseContracts": [
          767,
          6589
        ],
        "name": "OraclizeTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 767,
            "src": "143:13:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "143:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 10,
            "name": "LogInfo",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8,
                  "indexed": false,
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "scope": 10,
                  "src": "177:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "177:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "176:20:0"
            },
            "src": "163:34:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 14,
            "name": "LogPriceUpdateEth",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12,
                  "indexed": false,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 14,
                  "src": "226:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "226:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "225:14:0"
            },
            "src": "202:38:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 18,
            "name": "LogPriceUpdateEos",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16,
                  "indexed": false,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 18,
                  "src": "269:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "269:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "268:14:0"
            },
            "src": "245:38:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 22,
            "name": "LogPriceUpdateTrx",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20,
                  "indexed": false,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 22,
                  "src": "312:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "312:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "311:14:0"
            },
            "src": "288:38:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 26,
            "name": "LogPriceUpdateVen",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 25,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24,
                  "indexed": false,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 26,
                  "src": "355:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "355:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "354:14:0"
            },
            "src": "331:38:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 30,
            "name": "LogPriceUpdateIcx",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28,
                  "indexed": false,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "398:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "398:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "397:14:0"
            },
            "src": "374:38:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 34,
            "name": "LogPriceUpdateBnb",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32,
                  "indexed": false,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 34,
                  "src": "441:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "441:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "440:14:0"
            },
            "src": "417:38:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 38,
            "name": "LogPriceUpdateOmg",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36,
                  "indexed": false,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 38,
                  "src": "484:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "484:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "483:14:0"
            },
            "src": "460:38:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 42,
            "name": "LogPriceUpdateZil",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40,
                  "indexed": false,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 42,
                  "src": "527:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "527:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "526:14:0"
            },
            "src": "503:38:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 46,
            "name": "LogPriceUpdateAe",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44,
                  "indexed": false,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 46,
                  "src": "569:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "569:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "568:14:0"
            },
            "src": "546:37:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 50,
            "name": "LogPriceUpdateZrx",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48,
                  "indexed": false,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 50,
                  "src": "612:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "612:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "611:14:0"
            },
            "src": "588:38:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 54,
            "name": "LogPriceUpdateBtm",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52,
                  "indexed": false,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 54,
                  "src": "655:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "655:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "654:14:0"
            },
            "src": "631:38:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 60,
            "name": "LogUpdate",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56,
                  "indexed": true,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 60,
                  "src": "690:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "690:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58,
                  "indexed": true,
                  "name": "_balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 60,
                  "src": "714:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "714:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "689:47:0"
            },
            "src": "674:63:0"
          },
          {
            "canonicalName": "OraclizeTest.oraclizeState",
            "id": 72,
            "members": [
              {
                "id": 61,
                "name": "ForEth",
                "nodeType": "EnumValue",
                "src": "763:6:0"
              },
              {
                "id": 62,
                "name": "ForEos",
                "nodeType": "EnumValue",
                "src": "771:6:0"
              },
              {
                "id": 63,
                "name": "ForTrx",
                "nodeType": "EnumValue",
                "src": "779:6:0"
              },
              {
                "id": 64,
                "name": "ForVen",
                "nodeType": "EnumValue",
                "src": "787:6:0"
              },
              {
                "id": 65,
                "name": "ForIcx",
                "nodeType": "EnumValue",
                "src": "795:6:0"
              },
              {
                "id": 66,
                "name": "ForBnb",
                "nodeType": "EnumValue",
                "src": "803:6:0"
              },
              {
                "id": 67,
                "name": "ForOmg",
                "nodeType": "EnumValue",
                "src": "811:6:0"
              },
              {
                "id": 68,
                "name": "ForZil",
                "nodeType": "EnumValue",
                "src": "819:6:0"
              },
              {
                "id": 69,
                "name": "ForAe",
                "nodeType": "EnumValue",
                "src": "827:5:0"
              },
              {
                "id": 70,
                "name": "ForZrx",
                "nodeType": "EnumValue",
                "src": "834:6:0"
              },
              {
                "id": 71,
                "name": "ForBtm",
                "nodeType": "EnumValue",
                "src": "842:6:0"
              }
            ],
            "name": "oraclizeState",
            "nodeType": "EnumDefinition",
            "src": "742:107:0"
          },
          {
            "canonicalName": "OraclizeTest.oraclizeCallback",
            "id": 75,
            "members": [
              {
                "constant": false,
                "id": 74,
                "name": "oState",
                "nodeType": "VariableDeclaration",
                "scope": 75,
                "src": "889:20:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_oraclizeState_$72",
                  "typeString": "enum OraclizeTest.oraclizeState"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 73,
                  "name": "oraclizeState",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 72,
                  "src": "889:13:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_oraclizeState_$72",
                    "typeString": "enum OraclizeTest.oraclizeState"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "oraclizeCallback",
            "nodeType": "StructDefinition",
            "scope": 767,
            "src": "855:61:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 79,
            "name": "oraclizeCallbacks",
            "nodeType": "VariableDeclaration",
            "scope": 767,
            "src": "922:62:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$75_storage_$",
              "typeString": "mapping(bytes32 => struct OraclizeTest.oraclizeCallback)"
            },
            "typeName": {
              "id": 78,
              "keyType": {
                "id": 76,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "931:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "922:37:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$75_storage_$",
                "typeString": "mapping(bytes32 => struct OraclizeTest.oraclizeCallback)"
              },
              "valueType": {
                "contractScope": null,
                "id": 77,
                "name": "oraclizeCallback",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 75,
                "src": "942:16:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_oraclizeCallback_$75_storage_ptr",
                  "typeString": "struct OraclizeTest.oraclizeCallback"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 140,
              "nodeType": "Block",
              "src": "1057:523:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 82,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "1067:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 83,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6604,
                        "src": "1075:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 84,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1075:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1067:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "1067:18:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 88,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "1111:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 90,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6623,
                              "src": "1126:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OraclizeTest_$767",
                                "typeString": "contract OraclizeTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_OraclizeTest_$767",
                                "typeString": "contract OraclizeTest"
                              }
                            ],
                            "id": 89,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1118:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 91,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1118:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 92,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1118:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 87,
                      "name": "LogUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "1101:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1101:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 94,
                  "nodeType": "EmitStatement",
                  "src": "1096:44:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 95,
                      "name": "OAR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 945,
                      "src": "1203:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$885",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "307830383139334332333830346232393234353261366664633045383846343246643132314132343433",
                          "id": 97,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1231:42:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x08193C23804b292452a6fdc0E88F42Fd121A2443"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 96,
                        "name": "OraclizeAddrResolverI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 885,
                        "src": "1209:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OraclizeAddrResolverI_$885_$",
                          "typeString": "type(contract OraclizeAddrResolverI)"
                        }
                      },
                      "id": 98,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1209:65:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$885",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "src": "1203:71:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$885",
                      "typeString": "contract OraclizeAddrResolverI"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "1203:71:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        },
                        "id": 104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 102,
                          "name": "proofType_TLSNotary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 916,
                          "src": "1303:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "|",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 103,
                          "name": "proofStorage_IPFS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 928,
                          "src": "1325:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "src": "1303:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      ],
                      "id": 101,
                      "name": "oraclize_setProof",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4231,
                      "src": "1285:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes1_$returns$__$",
                        "typeString": "function (bytes1)"
                      }
                    },
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1285:58:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 106,
                  "nodeType": "ExpressionStatement",
                  "src": "1285:58:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 107,
                      "name": "updateEth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 376,
                      "src": "1353:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1353:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "1353:11:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 110,
                      "name": "updateEos",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 415,
                      "src": "1374:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1374:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 112,
                  "nodeType": "ExpressionStatement",
                  "src": "1374:11:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 113,
                      "name": "updateTrx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 454,
                      "src": "1395:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1395:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 115,
                  "nodeType": "ExpressionStatement",
                  "src": "1395:11:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 116,
                      "name": "updateVen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 493,
                      "src": "1416:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1416:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 118,
                  "nodeType": "ExpressionStatement",
                  "src": "1416:11:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 119,
                      "name": "updateIcx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 532,
                      "src": "1437:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1437:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 121,
                  "nodeType": "ExpressionStatement",
                  "src": "1437:11:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 122,
                      "name": "updateBnb",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 571,
                      "src": "1458:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1458:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "1458:11:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 125,
                      "name": "updateOmg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 610,
                      "src": "1479:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1479:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 127,
                  "nodeType": "ExpressionStatement",
                  "src": "1479:11:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 128,
                      "name": "updateZil",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 649,
                      "src": "1500:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1500:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 130,
                  "nodeType": "ExpressionStatement",
                  "src": "1500:11:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 131,
                      "name": "updateAe",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 688,
                      "src": "1521:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1521:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 133,
                  "nodeType": "ExpressionStatement",
                  "src": "1521:10:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 134,
                      "name": "updateZrx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 727,
                      "src": "1541:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1541:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 136,
                  "nodeType": "ExpressionStatement",
                  "src": "1541:11:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 137,
                      "name": "updateBtm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 766,
                      "src": "1562:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1562:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 139,
                  "nodeType": "ExpressionStatement",
                  "src": "1562:11:0"
                }
              ]
            },
            "documentation": null,
            "id": 141,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "OraclizeTest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1031:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1057:0:0"
            },
            "scope": 767,
            "src": "1010:570:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 147,
              "nodeType": "Block",
              "src": "1632:25:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 144,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6609,
                        6610
                      ],
                      "referencedDeclaration": 6609,
                      "src": "1642:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1642:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 146,
                  "nodeType": "ExpressionStatement",
                  "src": "1642:8:0"
                }
              ]
            },
            "documentation": null,
            "id": 148,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1619:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 143,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1632:0:0"
            },
            "scope": 767,
            "src": "1611:46:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 325,
              "nodeType": "Block",
              "src": "1734:1514:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 158,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6604,
                            "src": "1752:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1752:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 160,
                            "name": "oraclize_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4218,
                            "src": "1766:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1766:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1752:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 157,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6607,
                        6608
                      ],
                      "referencedDeclaration": 6607,
                      "src": "1744:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1744:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 164,
                  "nodeType": "ExpressionStatement",
                  "src": "1744:43:0"
                },
                {
                  "assignments": [
                    166
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 166,
                      "name": "o",
                      "nodeType": "VariableDeclaration",
                      "scope": 326,
                      "src": "1798:25:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_oraclizeCallback_$75_memory_ptr",
                        "typeString": "struct OraclizeTest.oraclizeCallback"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 165,
                        "name": "oraclizeCallback",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 75,
                        "src": "1798:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_oraclizeCallback_$75_storage_ptr",
                          "typeString": "struct OraclizeTest.oraclizeCallback"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 170,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 167,
                      "name": "oraclizeCallbacks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79,
                      "src": "1826:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$75_storage_$",
                        "typeString": "mapping(bytes32 => struct OraclizeTest.oraclizeCallback storage ref)"
                      }
                    },
                    "id": 169,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 168,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 150,
                      "src": "1844:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1826:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_oraclizeCallback_$75_storage",
                      "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1798:49:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_oraclizeState_$72",
                      "typeString": "enum OraclizeTest.oraclizeState"
                    },
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 171,
                        "name": "o",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 166,
                        "src": "1861:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_oraclizeCallback_$75_memory_ptr",
                          "typeString": "struct OraclizeTest.oraclizeCallback memory"
                        }
                      },
                      "id": 172,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "oState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74,
                      "src": "1861:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$72",
                        "typeString": "enum OraclizeTest.oraclizeState"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 173,
                        "name": "oraclizeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "1873:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_oraclizeState_$72_$",
                          "typeString": "type(enum OraclizeTest.oraclizeState)"
                        }
                      },
                      "id": 174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ForEth",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1873:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$72",
                        "typeString": "enum OraclizeTest.oraclizeState"
                      }
                    },
                    "src": "1861:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 184,
                  "nodeType": "IfStatement",
                  "src": "1857:117:0",
                  "trueBody": {
                    "id": 183,
                    "nodeType": "Block",
                    "src": "1894:80:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 177,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 152,
                              "src": "1931:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 176,
                            "name": "LogPriceUpdateEth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
                            "src": "1913:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1913:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 179,
                        "nodeType": "EmitStatement",
                        "src": "1908:30:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 180,
                            "name": "updateEth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 376,
                            "src": "1952:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1952:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 182,
                        "nodeType": "ExpressionStatement",
                        "src": "1952:11:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_oraclizeState_$72",
                      "typeString": "enum OraclizeTest.oraclizeState"
                    },
                    "id": 189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 185,
                        "name": "o",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 166,
                        "src": "1988:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_oraclizeCallback_$75_memory_ptr",
                          "typeString": "struct OraclizeTest.oraclizeCallback memory"
                        }
                      },
                      "id": 186,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "oState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74,
                      "src": "1988:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$72",
                        "typeString": "enum OraclizeTest.oraclizeState"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 187,
                        "name": "oraclizeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "2000:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_oraclizeState_$72_$",
                          "typeString": "type(enum OraclizeTest.oraclizeState)"
                        }
                      },
                      "id": 188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ForEos",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2000:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$72",
                        "typeString": "enum OraclizeTest.oraclizeState"
                      }
                    },
                    "src": "1988:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 198,
                  "nodeType": "IfStatement",
                  "src": "1984:117:0",
                  "trueBody": {
                    "id": 197,
                    "nodeType": "Block",
                    "src": "2021:80:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 191,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 152,
                              "src": "2058:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 190,
                            "name": "LogPriceUpdateEos",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "2040:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2040:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 193,
                        "nodeType": "EmitStatement",
                        "src": "2035:30:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 194,
                            "name": "updateEos",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 415,
                            "src": "2079:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2079:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 196,
                        "nodeType": "ExpressionStatement",
                        "src": "2079:11:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_oraclizeState_$72",
                      "typeString": "enum OraclizeTest.oraclizeState"
                    },
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 199,
                        "name": "o",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 166,
                        "src": "2115:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_oraclizeCallback_$75_memory_ptr",
                          "typeString": "struct OraclizeTest.oraclizeCallback memory"
                        }
                      },
                      "id": 200,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "oState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74,
                      "src": "2115:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$72",
                        "typeString": "enum OraclizeTest.oraclizeState"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 201,
                        "name": "oraclizeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "2127:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_oraclizeState_$72_$",
                          "typeString": "type(enum OraclizeTest.oraclizeState)"
                        }
                      },
                      "id": 202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ForTrx",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2127:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$72",
                        "typeString": "enum OraclizeTest.oraclizeState"
                      }
                    },
                    "src": "2115:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 212,
                  "nodeType": "IfStatement",
                  "src": "2111:117:0",
                  "trueBody": {
                    "id": 211,
                    "nodeType": "Block",
                    "src": "2148:80:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 205,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 152,
                              "src": "2185:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 204,
                            "name": "LogPriceUpdateTrx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22,
                            "src": "2167:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2167:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 207,
                        "nodeType": "EmitStatement",
                        "src": "2162:30:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 208,
                            "name": "updateTrx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 454,
                            "src": "2206:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2206:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 210,
                        "nodeType": "ExpressionStatement",
                        "src": "2206:11:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_oraclizeState_$72",
                      "typeString": "enum OraclizeTest.oraclizeState"
                    },
                    "id": 217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 213,
                        "name": "o",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 166,
                        "src": "2242:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_oraclizeCallback_$75_memory_ptr",
                          "typeString": "struct OraclizeTest.oraclizeCallback memory"
                        }
                      },
                      "id": 214,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "oState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74,
                      "src": "2242:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$72",
                        "typeString": "enum OraclizeTest.oraclizeState"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 215,
                        "name": "oraclizeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "2254:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_oraclizeState_$72_$",
                          "typeString": "type(enum OraclizeTest.oraclizeState)"
                        }
                      },
                      "id": 216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ForVen",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2254:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$72",
                        "typeString": "enum OraclizeTest.oraclizeState"
                      }
                    },
                    "src": "2242:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 226,
                  "nodeType": "IfStatement",
                  "src": "2238:117:0",
                  "trueBody": {
                    "id": 225,
                    "nodeType": "Block",
                    "src": "2275:80:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 219,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 152,
                              "src": "2312:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 218,
                            "name": "LogPriceUpdateVen",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26,
                            "src": "2294:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2294:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 221,
                        "nodeType": "EmitStatement",
                        "src": "2289:30:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 222,
                            "name": "updateVen",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 493,
                            "src": "2333:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2333:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 224,
                        "nodeType": "ExpressionStatement",
                        "src": "2333:11:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_oraclizeState_$72",
                      "typeString": "enum OraclizeTest.oraclizeState"
                    },
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 227,
                        "name": "o",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 166,
                        "src": "2369:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_oraclizeCallback_$75_memory_ptr",
                          "typeString": "struct OraclizeTest.oraclizeCallback memory"
                        }
                      },
                      "id": 228,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "oState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74,
                      "src": "2369:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$72",
                        "typeString": "enum OraclizeTest.oraclizeState"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 229,
                        "name": "oraclizeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "2381:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_oraclizeState_$72_$",
                          "typeString": "type(enum OraclizeTest.oraclizeState)"
                        }
                      },
                      "id": 230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ForIcx",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2381:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$72",
                        "typeString": "enum OraclizeTest.oraclizeState"
                      }
                    },
                    "src": "2369:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 240,
                  "nodeType": "IfStatement",
                  "src": "2365:117:0",
                  "trueBody": {
                    "id": 239,
                    "nodeType": "Block",
                    "src": "2402:80:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 233,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 152,
                              "src": "2439:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 232,
                            "name": "LogPriceUpdateIcx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30,
                            "src": "2421:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2421:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 235,
                        "nodeType": "EmitStatement",
                        "src": "2416:30:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 236,
                            "name": "updateIcx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 532,
                            "src": "2460:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2460:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 238,
                        "nodeType": "ExpressionStatement",
                        "src": "2460:11:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_oraclizeState_$72",
                      "typeString": "enum OraclizeTest.oraclizeState"
                    },
                    "id": 245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 241,
                        "name": "o",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 166,
                        "src": "2496:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_oraclizeCallback_$75_memory_ptr",
                          "typeString": "struct OraclizeTest.oraclizeCallback memory"
                        }
                      },
                      "id": 242,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "oState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74,
                      "src": "2496:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$72",
                        "typeString": "enum OraclizeTest.oraclizeState"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 243,
                        "name": "oraclizeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "2508:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_oraclizeState_$72_$",
                          "typeString": "type(enum OraclizeTest.oraclizeState)"
                        }
                      },
                      "id": 244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ForBnb",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2508:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$72",
                        "typeString": "enum OraclizeTest.oraclizeState"
                      }
                    },
                    "src": "2496:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 254,
                  "nodeType": "IfStatement",
                  "src": "2492:117:0",
                  "trueBody": {
                    "id": 253,
                    "nodeType": "Block",
                    "src": "2529:80:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 247,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 152,
                              "src": "2566:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 246,
                            "name": "LogPriceUpdateBnb",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "2548:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2548:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 249,
                        "nodeType": "EmitStatement",
                        "src": "2543:30:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 250,
                            "name": "updateBnb",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 571,
                            "src": "2587:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2587:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 252,
                        "nodeType": "ExpressionStatement",
                        "src": "2587:11:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_oraclizeState_$72",
                      "typeString": "enum OraclizeTest.oraclizeState"
                    },
                    "id": 259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 255,
                        "name": "o",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 166,
                        "src": "2623:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_oraclizeCallback_$75_memory_ptr",
                          "typeString": "struct OraclizeTest.oraclizeCallback memory"
                        }
                      },
                      "id": 256,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "oState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74,
                      "src": "2623:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$72",
                        "typeString": "enum OraclizeTest.oraclizeState"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 257,
                        "name": "oraclizeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "2635:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_oraclizeState_$72_$",
                          "typeString": "type(enum OraclizeTest.oraclizeState)"
                        }
                      },
                      "id": 258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ForOmg",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2635:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$72",
                        "typeString": "enum OraclizeTest.oraclizeState"
                      }
                    },
                    "src": "2623:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 268,
                  "nodeType": "IfStatement",
                  "src": "2619:117:0",
                  "trueBody": {
                    "id": 267,
                    "nodeType": "Block",
                    "src": "2656:80:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 261,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 152,
                              "src": "2693:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 260,
                            "name": "LogPriceUpdateOmg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "2675:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2675:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 263,
                        "nodeType": "EmitStatement",
                        "src": "2670:30:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 264,
                            "name": "updateOmg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 610,
                            "src": "2714:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2714:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 266,
                        "nodeType": "ExpressionStatement",
                        "src": "2714:11:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_oraclizeState_$72",
                      "typeString": "enum OraclizeTest.oraclizeState"
                    },
                    "id": 273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 269,
                        "name": "o",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 166,
                        "src": "2750:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_oraclizeCallback_$75_memory_ptr",
                          "typeString": "struct OraclizeTest.oraclizeCallback memory"
                        }
                      },
                      "id": 270,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "oState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74,
                      "src": "2750:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$72",
                        "typeString": "enum OraclizeTest.oraclizeState"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 271,
                        "name": "oraclizeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "2762:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_oraclizeState_$72_$",
                          "typeString": "type(enum OraclizeTest.oraclizeState)"
                        }
                      },
                      "id": 272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ForZil",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2762:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$72",
                        "typeString": "enum OraclizeTest.oraclizeState"
                      }
                    },
                    "src": "2750:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 282,
                  "nodeType": "IfStatement",
                  "src": "2746:117:0",
                  "trueBody": {
                    "id": 281,
                    "nodeType": "Block",
                    "src": "2783:80:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 275,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 152,
                              "src": "2820:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 274,
                            "name": "LogPriceUpdateZil",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "2802:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2802:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 277,
                        "nodeType": "EmitStatement",
                        "src": "2797:30:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 278,
                            "name": "updateZil",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 649,
                            "src": "2841:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2841:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 280,
                        "nodeType": "ExpressionStatement",
                        "src": "2841:11:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_oraclizeState_$72",
                      "typeString": "enum OraclizeTest.oraclizeState"
                    },
                    "id": 287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 283,
                        "name": "o",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 166,
                        "src": "2877:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_oraclizeCallback_$75_memory_ptr",
                          "typeString": "struct OraclizeTest.oraclizeCallback memory"
                        }
                      },
                      "id": 284,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "oState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74,
                      "src": "2877:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$72",
                        "typeString": "enum OraclizeTest.oraclizeState"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 285,
                        "name": "oraclizeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "2889:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_oraclizeState_$72_$",
                          "typeString": "type(enum OraclizeTest.oraclizeState)"
                        }
                      },
                      "id": 286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ForAe",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2889:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$72",
                        "typeString": "enum OraclizeTest.oraclizeState"
                      }
                    },
                    "src": "2877:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 296,
                  "nodeType": "IfStatement",
                  "src": "2873:114:0",
                  "trueBody": {
                    "id": 295,
                    "nodeType": "Block",
                    "src": "2909:78:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 289,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 152,
                              "src": "2945:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 288,
                            "name": "LogPriceUpdateAe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46,
                            "src": "2928:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2928:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 291,
                        "nodeType": "EmitStatement",
                        "src": "2923:29:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 292,
                            "name": "updateAe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 688,
                            "src": "2966:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2966:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 294,
                        "nodeType": "ExpressionStatement",
                        "src": "2966:10:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_oraclizeState_$72",
                      "typeString": "enum OraclizeTest.oraclizeState"
                    },
                    "id": 301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 297,
                        "name": "o",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 166,
                        "src": "3001:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_oraclizeCallback_$75_memory_ptr",
                          "typeString": "struct OraclizeTest.oraclizeCallback memory"
                        }
                      },
                      "id": 298,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "oState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74,
                      "src": "3001:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$72",
                        "typeString": "enum OraclizeTest.oraclizeState"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 299,
                        "name": "oraclizeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "3013:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_oraclizeState_$72_$",
                          "typeString": "type(enum OraclizeTest.oraclizeState)"
                        }
                      },
                      "id": 300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ForZrx",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3013:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$72",
                        "typeString": "enum OraclizeTest.oraclizeState"
                      }
                    },
                    "src": "3001:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 310,
                  "nodeType": "IfStatement",
                  "src": "2997:117:0",
                  "trueBody": {
                    "id": 309,
                    "nodeType": "Block",
                    "src": "3034:80:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 303,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 152,
                              "src": "3071:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 302,
                            "name": "LogPriceUpdateZrx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50,
                            "src": "3053:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3053:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 305,
                        "nodeType": "EmitStatement",
                        "src": "3048:30:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 306,
                            "name": "updateZrx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 727,
                            "src": "3092:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3092:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 308,
                        "nodeType": "ExpressionStatement",
                        "src": "3092:11:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_oraclizeState_$72",
                      "typeString": "enum OraclizeTest.oraclizeState"
                    },
                    "id": 315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 311,
                        "name": "o",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 166,
                        "src": "3128:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_oraclizeCallback_$75_memory_ptr",
                          "typeString": "struct OraclizeTest.oraclizeCallback memory"
                        }
                      },
                      "id": 312,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "oState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74,
                      "src": "3128:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$72",
                        "typeString": "enum OraclizeTest.oraclizeState"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 313,
                        "name": "oraclizeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "3140:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_oraclizeState_$72_$",
                          "typeString": "type(enum OraclizeTest.oraclizeState)"
                        }
                      },
                      "id": 314,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ForBtm",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3140:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$72",
                        "typeString": "enum OraclizeTest.oraclizeState"
                      }
                    },
                    "src": "3128:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 324,
                  "nodeType": "IfStatement",
                  "src": "3124:117:0",
                  "trueBody": {
                    "id": 323,
                    "nodeType": "Block",
                    "src": "3161:80:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 317,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 152,
                              "src": "3198:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 316,
                            "name": "LogPriceUpdateBtm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "3180:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3180:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 319,
                        "nodeType": "EmitStatement",
                        "src": "3175:30:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 320,
                            "name": "updateBtm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 766,
                            "src": "3219:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3219:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 322,
                        "nodeType": "ExpressionStatement",
                        "src": "3219:11:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 326,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 150,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 326,
                  "src": "1683:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 149,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1683:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 152,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 326,
                  "src": "1695:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 151,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1695:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 154,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 326,
                  "src": "1710:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 153,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1710:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1682:40:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 156,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1734:0:0"
            },
            "scope": 767,
            "src": "1663:1585:0",
            "stateMutability": "nonpayable",
            "superFunction": 1177,
            "visibility": "public"
          },
          {
            "body": {
              "id": 336,
              "nodeType": "Block",
              "src": "3315:45:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 332,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6623,
                          "src": "3340:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OraclizeTest_$767",
                            "typeString": "contract OraclizeTest"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_OraclizeTest_$767",
                            "typeString": "contract OraclizeTest"
                          }
                        ],
                        "id": 331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3332:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 333,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3332:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "3332:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 330,
                  "id": 335,
                  "nodeType": "Return",
                  "src": "3325:28:0"
                }
              ]
            },
            "documentation": null,
            "id": 337,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "getBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 327,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3273:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 329,
                  "name": "_balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 337,
                  "src": "3300:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 328,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3300:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3299:15:0"
            },
            "scope": 767,
            "src": "3254:106:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 375,
              "nodeType": "Block",
              "src": "3410:547:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3493:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          }
                        ],
                        "id": 340,
                        "name": "oraclize_getPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          1192,
                          1210
                        ],
                        "referencedDeclaration": 1192,
                        "src": "3475:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) returns (uint256)"
                        }
                      },
                      "id": 342,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3475:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 344,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6623,
                            "src": "3510:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OraclizeTest_$767",
                              "typeString": "contract OraclizeTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OraclizeTest_$767",
                              "typeString": "contract OraclizeTest"
                            }
                          ],
                          "id": 343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3502:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3502:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 346,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3502:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3475:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 373,
                    "nodeType": "Block",
                    "src": "3651:300:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a6520455448207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                              "id": 354,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3678:59:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_92558dea68f12d65c4a2f4516135d351df59a49eeb3667f4729fc6b0d7b950f2",
                                "typeString": "literal_string \"Oraclize ETH query was sent, standing by for the answer..\""
                              },
                              "value": "Oraclize ETH query was sent, standing by for the answer.."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_92558dea68f12d65c4a2f4516135d351df59a49eeb3667f4729fc6b0d7b950f2",
                                "typeString": "literal_string \"Oraclize ETH query was sent, standing by for the answer..\""
                              }
                            ],
                            "id": 353,
                            "name": "LogInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "3670:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3670:68:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 356,
                        "nodeType": "EmitStatement",
                        "src": "3665:73:0"
                      },
                      {
                        "assignments": [
                          358
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 358,
                            "name": "queryId",
                            "nodeType": "VariableDeclaration",
                            "scope": 376,
                            "src": "3752:15:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 357,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "3752:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 363,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "55524c",
                              "id": 360,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3785:5:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              "value": "URL"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6a736f6e2868747470733a2f2f6170692e636f696e626173652e636f6d2f76322f7072696365732f4554482d5553442f73706f74292e646174612e616d6f756e74",
                              "id": 361,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3791:67:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1cb3d5ca41f100645c3363042b531a7bc4905d034354e722c749236677568a8d",
                                "typeString": "literal_string \"json(https://api.coinbase.com/v2/prices/ETH-USD/spot).data.amount\""
                              },
                              "value": "json(https://api.coinbase.com/v2/prices/ETH-USD/spot).data.amount"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1cb3d5ca41f100645c3363042b531a7bc4905d034354e722c749236677568a8d",
                                "typeString": "literal_string \"json(https://api.coinbase.com/v2/prices/ETH-USD/spot).data.amount\""
                              }
                            ],
                            "id": 359,
                            "name": "oraclize_query",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1250,
                              1292,
                              1338,
                              1382,
                              1425,
                              1470,
                              1519,
                              1566,
                              1613,
                              1662,
                              1715,
                              1766,
                              1803,
                              1843,
                              1886,
                              1926,
                              1971,
                              2019,
                              2070,
                              2118,
                              2171,
                              2227,
                              2286,
                              2342,
                              2403,
                              2467,
                              2534,
                              2598,
                              2667,
                              2739,
                              2814,
                              2886,
                              2933,
                              2982,
                              3035,
                              3086,
                              3123,
                              3163,
                              3206,
                              3246,
                              3291,
                              3339,
                              3390,
                              3438,
                              3491,
                              3547,
                              3606,
                              3662,
                              3723,
                              3787,
                              3854,
                              3918,
                              3987,
                              4059,
                              4134,
                              4206
                            ],
                            "referencedDeclaration": 1250,
                            "src": "3770:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (string memory,string memory) returns (bytes32)"
                            }
                          },
                          "id": 362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3770:89:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3752:107:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 364,
                              "name": "oraclizeCallbacks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79,
                              "src": "3873:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$75_storage_$",
                                "typeString": "mapping(bytes32 => struct OraclizeTest.oraclizeCallback storage ref)"
                              }
                            },
                            "id": 366,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 365,
                              "name": "queryId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 358,
                              "src": "3891:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3873:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$75_storage",
                              "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 368,
                                  "name": "oraclizeState",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 72,
                                  "src": "3919:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_oraclizeState_$72_$",
                                    "typeString": "type(enum OraclizeTest.oraclizeState)"
                                  }
                                },
                                "id": 369,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "ForEth",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "3919:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_oraclizeState_$72",
                                  "typeString": "enum OraclizeTest.oraclizeState"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_oraclizeState_$72",
                                  "typeString": "enum OraclizeTest.oraclizeState"
                                }
                              ],
                              "id": 367,
                              "name": "oraclizeCallback",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75,
                              "src": "3902:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_oraclizeCallback_$75_storage_ptr_$",
                                "typeString": "type(struct OraclizeTest.oraclizeCallback storage pointer)"
                              }
                            },
                            "id": 370,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3902:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$75_memory",
                              "typeString": "struct OraclizeTest.oraclizeCallback memory"
                            }
                          },
                          "src": "3873:67:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_oraclizeCallback_$75_storage",
                            "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                          }
                        },
                        "id": 372,
                        "nodeType": "ExpressionStatement",
                        "src": "3873:67:0"
                      }
                    ]
                  },
                  "id": 374,
                  "nodeType": "IfStatement",
                  "src": "3471:480:0",
                  "trueBody": {
                    "id": 352,
                    "nodeType": "Block",
                    "src": "3525:120:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a652045544820717565727920776173204e4f542073656e742c20706c656173652061646420736f6d652045544820746f20636f76657220666f722074686520717565727920666565",
                              "id": 349,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3552:81:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_86b4e52b9d7e6dbfbdb9744fcb31ec13df7de8e1138baadabd3c7def0014c40b",
                                "typeString": "literal_string \"Oraclize ETH query was NOT sent, please add some ETH to cover for the query fee\""
                              },
                              "value": "Oraclize ETH query was NOT sent, please add some ETH to cover for the query fee"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_86b4e52b9d7e6dbfbdb9744fcb31ec13df7de8e1138baadabd3c7def0014c40b",
                                "typeString": "literal_string \"Oraclize ETH query was NOT sent, please add some ETH to cover for the query fee\""
                              }
                            ],
                            "id": 348,
                            "name": "LogInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "3544:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3544:90:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 351,
                        "nodeType": "EmitStatement",
                        "src": "3539:95:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 376,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "updateEth",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 338,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3384:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 339,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3410:0:0"
            },
            "scope": 767,
            "src": "3366:591:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 414,
              "nodeType": "Block",
              "src": "4007:558:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4090:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          }
                        ],
                        "id": 379,
                        "name": "oraclize_getPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          1192,
                          1210
                        ],
                        "referencedDeclaration": 1192,
                        "src": "4072:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) returns (uint256)"
                        }
                      },
                      "id": 381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4072:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 383,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6623,
                            "src": "4107:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OraclizeTest_$767",
                              "typeString": "contract OraclizeTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OraclizeTest_$767",
                              "typeString": "contract OraclizeTest"
                            }
                          ],
                          "id": 382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4099:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4099:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 385,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4099:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4072:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 412,
                    "nodeType": "Block",
                    "src": "4248:311:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a6520454f53207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                              "id": 393,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4275:59:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3dd6bac8e6782f6a28d717bf03b7c1dca3915a82eb7d0562bd7f302520e80b9e",
                                "typeString": "literal_string \"Oraclize EOS query was sent, standing by for the answer..\""
                              },
                              "value": "Oraclize EOS query was sent, standing by for the answer.."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_3dd6bac8e6782f6a28d717bf03b7c1dca3915a82eb7d0562bd7f302520e80b9e",
                                "typeString": "literal_string \"Oraclize EOS query was sent, standing by for the answer..\""
                              }
                            ],
                            "id": 392,
                            "name": "LogInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "4267:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4267:68:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 395,
                        "nodeType": "EmitStatement",
                        "src": "4262:73:0"
                      },
                      {
                        "assignments": [
                          397
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 397,
                            "name": "queryId2",
                            "nodeType": "VariableDeclaration",
                            "scope": 415,
                            "src": "4349:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 396,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "4349:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 402,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "55524c",
                              "id": 399,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4383:5:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              "value": "URL"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6a736f6e2868747470733a2f2f6170692e636f696e6d61726b65746361702e636f6d2f76322f7469636b65722f313736352f292e646174612e71756f7465732e5553442e7072696365",
                              "id": 400,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4390:75:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2c5608835bf841bef10c3ef3104141a61345a8d47a72c0964bd1147744cf9883",
                                "typeString": "literal_string \"json(https://api.coinmarketcap.com/v2/ticker/1765/).data.quotes.USD.price\""
                              },
                              "value": "json(https://api.coinmarketcap.com/v2/ticker/1765/).data.quotes.USD.price"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2c5608835bf841bef10c3ef3104141a61345a8d47a72c0964bd1147744cf9883",
                                "typeString": "literal_string \"json(https://api.coinmarketcap.com/v2/ticker/1765/).data.quotes.USD.price\""
                              }
                            ],
                            "id": 398,
                            "name": "oraclize_query",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1250,
                              1292,
                              1338,
                              1382,
                              1425,
                              1470,
                              1519,
                              1566,
                              1613,
                              1662,
                              1715,
                              1766,
                              1803,
                              1843,
                              1886,
                              1926,
                              1971,
                              2019,
                              2070,
                              2118,
                              2171,
                              2227,
                              2286,
                              2342,
                              2403,
                              2467,
                              2534,
                              2598,
                              2667,
                              2739,
                              2814,
                              2886,
                              2933,
                              2982,
                              3035,
                              3086,
                              3123,
                              3163,
                              3206,
                              3246,
                              3291,
                              3339,
                              3390,
                              3438,
                              3491,
                              3547,
                              3606,
                              3662,
                              3723,
                              3787,
                              3854,
                              3918,
                              3987,
                              4059,
                              4134,
                              4206
                            ],
                            "referencedDeclaration": 1250,
                            "src": "4368:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (string memory,string memory) returns (bytes32)"
                            }
                          },
                          "id": 401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4368:98:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4349:117:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 403,
                              "name": "oraclizeCallbacks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79,
                              "src": "4480:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$75_storage_$",
                                "typeString": "mapping(bytes32 => struct OraclizeTest.oraclizeCallback storage ref)"
                              }
                            },
                            "id": 405,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 404,
                              "name": "queryId2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 397,
                              "src": "4498:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4480:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$75_storage",
                              "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 407,
                                  "name": "oraclizeState",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 72,
                                  "src": "4527:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_oraclizeState_$72_$",
                                    "typeString": "type(enum OraclizeTest.oraclizeState)"
                                  }
                                },
                                "id": 408,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "ForEos",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "4527:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_oraclizeState_$72",
                                  "typeString": "enum OraclizeTest.oraclizeState"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_oraclizeState_$72",
                                  "typeString": "enum OraclizeTest.oraclizeState"
                                }
                              ],
                              "id": 406,
                              "name": "oraclizeCallback",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75,
                              "src": "4510:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_oraclizeCallback_$75_storage_ptr_$",
                                "typeString": "type(struct OraclizeTest.oraclizeCallback storage pointer)"
                              }
                            },
                            "id": 409,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4510:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$75_memory",
                              "typeString": "struct OraclizeTest.oraclizeCallback memory"
                            }
                          },
                          "src": "4480:68:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_oraclizeCallback_$75_storage",
                            "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                          }
                        },
                        "id": 411,
                        "nodeType": "ExpressionStatement",
                        "src": "4480:68:0"
                      }
                    ]
                  },
                  "id": 413,
                  "nodeType": "IfStatement",
                  "src": "4068:491:0",
                  "trueBody": {
                    "id": 391,
                    "nodeType": "Block",
                    "src": "4122:120:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a6520454f5320717565727920776173204e4f542073656e742c20706c656173652061646420736f6d652045544820746f20636f76657220666f722074686520717565727920666565",
                              "id": 388,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4149:81:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ec3e5f7bbc3f01e04ca8b93b466ec6ba61bd107302e4a349f57eb76875ed9262",
                                "typeString": "literal_string \"Oraclize EOS query was NOT sent, please add some ETH to cover for the query fee\""
                              },
                              "value": "Oraclize EOS query was NOT sent, please add some ETH to cover for the query fee"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_ec3e5f7bbc3f01e04ca8b93b466ec6ba61bd107302e4a349f57eb76875ed9262",
                                "typeString": "literal_string \"Oraclize EOS query was NOT sent, please add some ETH to cover for the query fee\""
                              }
                            ],
                            "id": 387,
                            "name": "LogInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "4141:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4141:90:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 390,
                        "nodeType": "EmitStatement",
                        "src": "4136:95:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 415,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "updateEos",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 377,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3981:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 378,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4007:0:0"
            },
            "scope": 767,
            "src": "3963:602:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 453,
              "nodeType": "Block",
              "src": "4615:562:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4698:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          }
                        ],
                        "id": 418,
                        "name": "oraclize_getPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          1192,
                          1210
                        ],
                        "referencedDeclaration": 1192,
                        "src": "4680:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) returns (uint256)"
                        }
                      },
                      "id": 420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4680:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 422,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6623,
                            "src": "4715:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OraclizeTest_$767",
                              "typeString": "contract OraclizeTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OraclizeTest_$767",
                              "typeString": "contract OraclizeTest"
                            }
                          ],
                          "id": 421,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4707:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4707:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 424,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4707:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4680:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 451,
                    "nodeType": "Block",
                    "src": "4856:315:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a6520545258207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                              "id": 432,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4883:59:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bccd119587b99ab1ec8cf0905db878c7bab73f59d99addce7d4d02d4b7744a87",
                                "typeString": "literal_string \"Oraclize TRX query was sent, standing by for the answer..\""
                              },
                              "value": "Oraclize TRX query was sent, standing by for the answer.."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_bccd119587b99ab1ec8cf0905db878c7bab73f59d99addce7d4d02d4b7744a87",
                                "typeString": "literal_string \"Oraclize TRX query was sent, standing by for the answer..\""
                              }
                            ],
                            "id": 431,
                            "name": "LogInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "4875:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4875:68:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 434,
                        "nodeType": "EmitStatement",
                        "src": "4870:73:0"
                      },
                      {
                        "assignments": [
                          436
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 436,
                            "name": "queryId3",
                            "nodeType": "VariableDeclaration",
                            "scope": 454,
                            "src": "4957:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 435,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "4957:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 441,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "55524c",
                              "id": 438,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4991:5:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              "value": "URL"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6a736f6e2868747470733a2f2f6170692e636f696e6d61726b65746361702e636f6d2f76322f7469636b65722f313935382f292e646174612e71756f7465732e5553442e7072696365",
                              "id": 439,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4998:75:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d7fc1e72ed93ab9d088cf1f956f7a3e1a239f8ecbd4f79e10f1d53bb69b10624",
                                "typeString": "literal_string \"json(https://api.coinmarketcap.com/v2/ticker/1958/).data.quotes.USD.price\""
                              },
                              "value": "json(https://api.coinmarketcap.com/v2/ticker/1958/).data.quotes.USD.price"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d7fc1e72ed93ab9d088cf1f956f7a3e1a239f8ecbd4f79e10f1d53bb69b10624",
                                "typeString": "literal_string \"json(https://api.coinmarketcap.com/v2/ticker/1958/).data.quotes.USD.price\""
                              }
                            ],
                            "id": 437,
                            "name": "oraclize_query",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1250,
                              1292,
                              1338,
                              1382,
                              1425,
                              1470,
                              1519,
                              1566,
                              1613,
                              1662,
                              1715,
                              1766,
                              1803,
                              1843,
                              1886,
                              1926,
                              1971,
                              2019,
                              2070,
                              2118,
                              2171,
                              2227,
                              2286,
                              2342,
                              2403,
                              2467,
                              2534,
                              2598,
                              2667,
                              2739,
                              2814,
                              2886,
                              2933,
                              2982,
                              3035,
                              3086,
                              3123,
                              3163,
                              3206,
                              3246,
                              3291,
                              3339,
                              3390,
                              3438,
                              3491,
                              3547,
                              3606,
                              3662,
                              3723,
                              3787,
                              3854,
                              3918,
                              3987,
                              4059,
                              4134,
                              4206
                            ],
                            "referencedDeclaration": 1250,
                            "src": "4976:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (string memory,string memory) returns (bytes32)"
                            }
                          },
                          "id": 440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4976:98:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4957:117:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 442,
                              "name": "oraclizeCallbacks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79,
                              "src": "5088:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$75_storage_$",
                                "typeString": "mapping(bytes32 => struct OraclizeTest.oraclizeCallback storage ref)"
                              }
                            },
                            "id": 444,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 443,
                              "name": "queryId3",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 436,
                              "src": "5106:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5088:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$75_storage",
                              "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 446,
                                  "name": "oraclizeState",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 72,
                                  "src": "5135:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_oraclizeState_$72_$",
                                    "typeString": "type(enum OraclizeTest.oraclizeState)"
                                  }
                                },
                                "id": 447,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "ForTrx",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "5135:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_oraclizeState_$72",
                                  "typeString": "enum OraclizeTest.oraclizeState"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_oraclizeState_$72",
                                  "typeString": "enum OraclizeTest.oraclizeState"
                                }
                              ],
                              "id": 445,
                              "name": "oraclizeCallback",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75,
                              "src": "5118:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_oraclizeCallback_$75_storage_ptr_$",
                                "typeString": "type(struct OraclizeTest.oraclizeCallback storage pointer)"
                              }
                            },
                            "id": 448,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5118:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$75_memory",
                              "typeString": "struct OraclizeTest.oraclizeCallback memory"
                            }
                          },
                          "src": "5088:68:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_oraclizeCallback_$75_storage",
                            "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                          }
                        },
                        "id": 450,
                        "nodeType": "ExpressionStatement",
                        "src": "5088:68:0"
                      }
                    ]
                  },
                  "id": 452,
                  "nodeType": "IfStatement",
                  "src": "4676:495:0",
                  "trueBody": {
                    "id": 430,
                    "nodeType": "Block",
                    "src": "4730:120:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a652054525820717565727920776173204e4f542073656e742c20706c656173652061646420736f6d652045544820746f20636f76657220666f722074686520717565727920666565",
                              "id": 427,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4757:81:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_eb72ab145aea5b69675325a250bbcc0de0742e2b3031e2363ee174e51256e70e",
                                "typeString": "literal_string \"Oraclize TRX query was NOT sent, please add some ETH to cover for the query fee\""
                              },
                              "value": "Oraclize TRX query was NOT sent, please add some ETH to cover for the query fee"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_eb72ab145aea5b69675325a250bbcc0de0742e2b3031e2363ee174e51256e70e",
                                "typeString": "literal_string \"Oraclize TRX query was NOT sent, please add some ETH to cover for the query fee\""
                              }
                            ],
                            "id": 426,
                            "name": "LogInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "4749:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4749:90:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 429,
                        "nodeType": "EmitStatement",
                        "src": "4744:95:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 454,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "updateTrx",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4589:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 417,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4615:0:0"
            },
            "scope": 767,
            "src": "4571:606:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 492,
              "nodeType": "Block",
              "src": "5227:562:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5310:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          }
                        ],
                        "id": 457,
                        "name": "oraclize_getPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          1192,
                          1210
                        ],
                        "referencedDeclaration": 1192,
                        "src": "5292:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) returns (uint256)"
                        }
                      },
                      "id": 459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5292:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 461,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6623,
                            "src": "5327:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OraclizeTest_$767",
                              "typeString": "contract OraclizeTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OraclizeTest_$767",
                              "typeString": "contract OraclizeTest"
                            }
                          ],
                          "id": 460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5319:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5319:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 463,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5319:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5292:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 490,
                    "nodeType": "Block",
                    "src": "5468:315:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a652056454e207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                              "id": 471,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5495:59:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9f4428b2255d0f322d2ba9479f801b542002c77ff76280b5167d4e28598da385",
                                "typeString": "literal_string \"Oraclize VEN query was sent, standing by for the answer..\""
                              },
                              "value": "Oraclize VEN query was sent, standing by for the answer.."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_9f4428b2255d0f322d2ba9479f801b542002c77ff76280b5167d4e28598da385",
                                "typeString": "literal_string \"Oraclize VEN query was sent, standing by for the answer..\""
                              }
                            ],
                            "id": 470,
                            "name": "LogInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "5487:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5487:68:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 473,
                        "nodeType": "EmitStatement",
                        "src": "5482:73:0"
                      },
                      {
                        "assignments": [
                          475
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 475,
                            "name": "queryId4",
                            "nodeType": "VariableDeclaration",
                            "scope": 493,
                            "src": "5569:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 474,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "5569:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 480,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "55524c",
                              "id": 477,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5603:5:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              "value": "URL"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6a736f6e2868747470733a2f2f6170692e636f696e6d61726b65746361702e636f6d2f76322f7469636b65722f313930342f292e646174612e71756f7465732e5553442e7072696365",
                              "id": 478,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5610:75:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d9115cb06e803ddfbeb3997ac47b403dc16e6220c0019a65af7844e71db8f9e5",
                                "typeString": "literal_string \"json(https://api.coinmarketcap.com/v2/ticker/1904/).data.quotes.USD.price\""
                              },
                              "value": "json(https://api.coinmarketcap.com/v2/ticker/1904/).data.quotes.USD.price"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d9115cb06e803ddfbeb3997ac47b403dc16e6220c0019a65af7844e71db8f9e5",
                                "typeString": "literal_string \"json(https://api.coinmarketcap.com/v2/ticker/1904/).data.quotes.USD.price\""
                              }
                            ],
                            "id": 476,
                            "name": "oraclize_query",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1250,
                              1292,
                              1338,
                              1382,
                              1425,
                              1470,
                              1519,
                              1566,
                              1613,
                              1662,
                              1715,
                              1766,
                              1803,
                              1843,
                              1886,
                              1926,
                              1971,
                              2019,
                              2070,
                              2118,
                              2171,
                              2227,
                              2286,
                              2342,
                              2403,
                              2467,
                              2534,
                              2598,
                              2667,
                              2739,
                              2814,
                              2886,
                              2933,
                              2982,
                              3035,
                              3086,
                              3123,
                              3163,
                              3206,
                              3246,
                              3291,
                              3339,
                              3390,
                              3438,
                              3491,
                              3547,
                              3606,
                              3662,
                              3723,
                              3787,
                              3854,
                              3918,
                              3987,
                              4059,
                              4134,
                              4206
                            ],
                            "referencedDeclaration": 1250,
                            "src": "5588:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (string memory,string memory) returns (bytes32)"
                            }
                          },
                          "id": 479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5588:98:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5569:117:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 481,
                              "name": "oraclizeCallbacks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79,
                              "src": "5700:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$75_storage_$",
                                "typeString": "mapping(bytes32 => struct OraclizeTest.oraclizeCallback storage ref)"
                              }
                            },
                            "id": 483,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 482,
                              "name": "queryId4",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 475,
                              "src": "5718:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5700:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$75_storage",
                              "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 485,
                                  "name": "oraclizeState",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 72,
                                  "src": "5747:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_oraclizeState_$72_$",
                                    "typeString": "type(enum OraclizeTest.oraclizeState)"
                                  }
                                },
                                "id": 486,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "ForVen",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "5747:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_oraclizeState_$72",
                                  "typeString": "enum OraclizeTest.oraclizeState"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_oraclizeState_$72",
                                  "typeString": "enum OraclizeTest.oraclizeState"
                                }
                              ],
                              "id": 484,
                              "name": "oraclizeCallback",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75,
                              "src": "5730:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_oraclizeCallback_$75_storage_ptr_$",
                                "typeString": "type(struct OraclizeTest.oraclizeCallback storage pointer)"
                              }
                            },
                            "id": 487,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5730:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$75_memory",
                              "typeString": "struct OraclizeTest.oraclizeCallback memory"
                            }
                          },
                          "src": "5700:68:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_oraclizeCallback_$75_storage",
                            "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                          }
                        },
                        "id": 489,
                        "nodeType": "ExpressionStatement",
                        "src": "5700:68:0"
                      }
                    ]
                  },
                  "id": 491,
                  "nodeType": "IfStatement",
                  "src": "5288:495:0",
                  "trueBody": {
                    "id": 469,
                    "nodeType": "Block",
                    "src": "5342:120:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a652056454e20717565727920776173204e4f542073656e742c20706c656173652061646420736f6d652045544820746f20636f76657220666f722074686520717565727920666565",
                              "id": 466,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5369:81:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4f476254ce02f3482cf6df53fe30b2ce6d34d3be3c2f96a1778409a475d9fb53",
                                "typeString": "literal_string \"Oraclize VEN query was NOT sent, please add some ETH to cover for the query fee\""
                              },
                              "value": "Oraclize VEN query was NOT sent, please add some ETH to cover for the query fee"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_4f476254ce02f3482cf6df53fe30b2ce6d34d3be3c2f96a1778409a475d9fb53",
                                "typeString": "literal_string \"Oraclize VEN query was NOT sent, please add some ETH to cover for the query fee\""
                              }
                            ],
                            "id": 465,
                            "name": "LogInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "5361:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5361:90:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 468,
                        "nodeType": "EmitStatement",
                        "src": "5356:95:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 493,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "updateVen",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 455,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5201:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 456,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5227:0:0"
            },
            "scope": 767,
            "src": "5183:606:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 531,
              "nodeType": "Block",
              "src": "5839:562:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5922:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          }
                        ],
                        "id": 496,
                        "name": "oraclize_getPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          1192,
                          1210
                        ],
                        "referencedDeclaration": 1192,
                        "src": "5904:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) returns (uint256)"
                        }
                      },
                      "id": 498,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5904:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 500,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6623,
                            "src": "5939:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OraclizeTest_$767",
                              "typeString": "contract OraclizeTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OraclizeTest_$767",
                              "typeString": "contract OraclizeTest"
                            }
                          ],
                          "id": 499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5931:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 501,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5931:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5931:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5904:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 529,
                    "nodeType": "Block",
                    "src": "6080:315:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a6520494358207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                              "id": 510,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6107:59:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e38b2ff65418f5d1601376ee00bede6ddff4caa2987e0165bd3873dc04150d82",
                                "typeString": "literal_string \"Oraclize ICX query was sent, standing by for the answer..\""
                              },
                              "value": "Oraclize ICX query was sent, standing by for the answer.."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_e38b2ff65418f5d1601376ee00bede6ddff4caa2987e0165bd3873dc04150d82",
                                "typeString": "literal_string \"Oraclize ICX query was sent, standing by for the answer..\""
                              }
                            ],
                            "id": 509,
                            "name": "LogInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "6099:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6099:68:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 512,
                        "nodeType": "EmitStatement",
                        "src": "6094:73:0"
                      },
                      {
                        "assignments": [
                          514
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 514,
                            "name": "queryId5",
                            "nodeType": "VariableDeclaration",
                            "scope": 532,
                            "src": "6181:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 513,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "6181:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 519,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "55524c",
                              "id": 516,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6215:5:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              "value": "URL"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6a736f6e2868747470733a2f2f6170692e636f696e6d61726b65746361702e636f6d2f76322f7469636b65722f323039392f292e646174612e71756f7465732e5553442e7072696365",
                              "id": 517,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6222:75:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e7c0e04370c91c62f116817729e9896d67b973bb3607da3bb06901f4069aed4f",
                                "typeString": "literal_string \"json(https://api.coinmarketcap.com/v2/ticker/2099/).data.quotes.USD.price\""
                              },
                              "value": "json(https://api.coinmarketcap.com/v2/ticker/2099/).data.quotes.USD.price"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e7c0e04370c91c62f116817729e9896d67b973bb3607da3bb06901f4069aed4f",
                                "typeString": "literal_string \"json(https://api.coinmarketcap.com/v2/ticker/2099/).data.quotes.USD.price\""
                              }
                            ],
                            "id": 515,
                            "name": "oraclize_query",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1250,
                              1292,
                              1338,
                              1382,
                              1425,
                              1470,
                              1519,
                              1566,
                              1613,
                              1662,
                              1715,
                              1766,
                              1803,
                              1843,
                              1886,
                              1926,
                              1971,
                              2019,
                              2070,
                              2118,
                              2171,
                              2227,
                              2286,
                              2342,
                              2403,
                              2467,
                              2534,
                              2598,
                              2667,
                              2739,
                              2814,
                              2886,
                              2933,
                              2982,
                              3035,
                              3086,
                              3123,
                              3163,
                              3206,
                              3246,
                              3291,
                              3339,
                              3390,
                              3438,
                              3491,
                              3547,
                              3606,
                              3662,
                              3723,
                              3787,
                              3854,
                              3918,
                              3987,
                              4059,
                              4134,
                              4206
                            ],
                            "referencedDeclaration": 1250,
                            "src": "6200:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (string memory,string memory) returns (bytes32)"
                            }
                          },
                          "id": 518,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6200:98:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6181:117:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 520,
                              "name": "oraclizeCallbacks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79,
                              "src": "6312:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$75_storage_$",
                                "typeString": "mapping(bytes32 => struct OraclizeTest.oraclizeCallback storage ref)"
                              }
                            },
                            "id": 522,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 521,
                              "name": "queryId5",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 514,
                              "src": "6330:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6312:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$75_storage",
                              "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 524,
                                  "name": "oraclizeState",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 72,
                                  "src": "6359:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_oraclizeState_$72_$",
                                    "typeString": "type(enum OraclizeTest.oraclizeState)"
                                  }
                                },
                                "id": 525,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "ForIcx",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "6359:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_oraclizeState_$72",
                                  "typeString": "enum OraclizeTest.oraclizeState"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_oraclizeState_$72",
                                  "typeString": "enum OraclizeTest.oraclizeState"
                                }
                              ],
                              "id": 523,
                              "name": "oraclizeCallback",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75,
                              "src": "6342:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_oraclizeCallback_$75_storage_ptr_$",
                                "typeString": "type(struct OraclizeTest.oraclizeCallback storage pointer)"
                              }
                            },
                            "id": 526,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6342:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$75_memory",
                              "typeString": "struct OraclizeTest.oraclizeCallback memory"
                            }
                          },
                          "src": "6312:68:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_oraclizeCallback_$75_storage",
                            "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                          }
                        },
                        "id": 528,
                        "nodeType": "ExpressionStatement",
                        "src": "6312:68:0"
                      }
                    ]
                  },
                  "id": 530,
                  "nodeType": "IfStatement",
                  "src": "5900:495:0",
                  "trueBody": {
                    "id": 508,
                    "nodeType": "Block",
                    "src": "5954:120:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a652049435820717565727920776173204e4f542073656e742c20706c656173652061646420736f6d652045544820746f20636f76657220666f722074686520717565727920666565",
                              "id": 505,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5981:81:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4d7127acd5ef6f553563066426a01baa1192ef257aac9f27e9448ffc8dce3b78",
                                "typeString": "literal_string \"Oraclize ICX query was NOT sent, please add some ETH to cover for the query fee\""
                              },
                              "value": "Oraclize ICX query was NOT sent, please add some ETH to cover for the query fee"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_4d7127acd5ef6f553563066426a01baa1192ef257aac9f27e9448ffc8dce3b78",
                                "typeString": "literal_string \"Oraclize ICX query was NOT sent, please add some ETH to cover for the query fee\""
                              }
                            ],
                            "id": 504,
                            "name": "LogInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "5973:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5973:90:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 507,
                        "nodeType": "EmitStatement",
                        "src": "5968:95:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 532,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "updateIcx",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 494,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5813:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 495,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5839:0:0"
            },
            "scope": 767,
            "src": "5795:606:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 570,
              "nodeType": "Block",
              "src": "6455:562:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6538:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          }
                        ],
                        "id": 535,
                        "name": "oraclize_getPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          1192,
                          1210
                        ],
                        "referencedDeclaration": 1192,
                        "src": "6520:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) returns (uint256)"
                        }
                      },
                      "id": 537,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6520:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 539,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6623,
                            "src": "6555:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OraclizeTest_$767",
                              "typeString": "contract OraclizeTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OraclizeTest_$767",
                              "typeString": "contract OraclizeTest"
                            }
                          ],
                          "id": 538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6547:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6547:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6547:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6520:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 568,
                    "nodeType": "Block",
                    "src": "6696:315:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a6520424e42207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                              "id": 549,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6723:59:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_81354db14f90b029a7f0aeb367a982cbe716f21a377c842d28fe68b35e0191b2",
                                "typeString": "literal_string \"Oraclize BNB query was sent, standing by for the answer..\""
                              },
                              "value": "Oraclize BNB query was sent, standing by for the answer.."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_81354db14f90b029a7f0aeb367a982cbe716f21a377c842d28fe68b35e0191b2",
                                "typeString": "literal_string \"Oraclize BNB query was sent, standing by for the answer..\""
                              }
                            ],
                            "id": 548,
                            "name": "LogInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "6715:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6715:68:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 551,
                        "nodeType": "EmitStatement",
                        "src": "6710:73:0"
                      },
                      {
                        "assignments": [
                          553
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 553,
                            "name": "queryId6",
                            "nodeType": "VariableDeclaration",
                            "scope": 571,
                            "src": "6797:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 552,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "6797:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 558,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "55524c",
                              "id": 555,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6831:5:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              "value": "URL"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6a736f6e2868747470733a2f2f6170692e636f696e6d61726b65746361702e636f6d2f76322f7469636b65722f313833392f292e646174612e71756f7465732e5553442e7072696365",
                              "id": 556,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6838:75:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_adf2eb92c2f517ca913dda2d6321e42778941408fefc2f4b5ca9259e7eda31a9",
                                "typeString": "literal_string \"json(https://api.coinmarketcap.com/v2/ticker/1839/).data.quotes.USD.price\""
                              },
                              "value": "json(https://api.coinmarketcap.com/v2/ticker/1839/).data.quotes.USD.price"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_adf2eb92c2f517ca913dda2d6321e42778941408fefc2f4b5ca9259e7eda31a9",
                                "typeString": "literal_string \"json(https://api.coinmarketcap.com/v2/ticker/1839/).data.quotes.USD.price\""
                              }
                            ],
                            "id": 554,
                            "name": "oraclize_query",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1250,
                              1292,
                              1338,
                              1382,
                              1425,
                              1470,
                              1519,
                              1566,
                              1613,
                              1662,
                              1715,
                              1766,
                              1803,
                              1843,
                              1886,
                              1926,
                              1971,
                              2019,
                              2070,
                              2118,
                              2171,
                              2227,
                              2286,
                              2342,
                              2403,
                              2467,
                              2534,
                              2598,
                              2667,
                              2739,
                              2814,
                              2886,
                              2933,
                              2982,
                              3035,
                              3086,
                              3123,
                              3163,
                              3206,
                              3246,
                              3291,
                              3339,
                              3390,
                              3438,
                              3491,
                              3547,
                              3606,
                              3662,
                              3723,
                              3787,
                              3854,
                              3918,
                              3987,
                              4059,
                              4134,
                              4206
                            ],
                            "referencedDeclaration": 1250,
                            "src": "6816:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (string memory,string memory) returns (bytes32)"
                            }
                          },
                          "id": 557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6816:98:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6797:117:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 559,
                              "name": "oraclizeCallbacks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79,
                              "src": "6928:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$75_storage_$",
                                "typeString": "mapping(bytes32 => struct OraclizeTest.oraclizeCallback storage ref)"
                              }
                            },
                            "id": 561,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 560,
                              "name": "queryId6",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 553,
                              "src": "6946:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6928:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$75_storage",
                              "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 563,
                                  "name": "oraclizeState",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 72,
                                  "src": "6975:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_oraclizeState_$72_$",
                                    "typeString": "type(enum OraclizeTest.oraclizeState)"
                                  }
                                },
                                "id": 564,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "ForBnb",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "6975:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_oraclizeState_$72",
                                  "typeString": "enum OraclizeTest.oraclizeState"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_oraclizeState_$72",
                                  "typeString": "enum OraclizeTest.oraclizeState"
                                }
                              ],
                              "id": 562,
                              "name": "oraclizeCallback",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75,
                              "src": "6958:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_oraclizeCallback_$75_storage_ptr_$",
                                "typeString": "type(struct OraclizeTest.oraclizeCallback storage pointer)"
                              }
                            },
                            "id": 565,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6958:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$75_memory",
                              "typeString": "struct OraclizeTest.oraclizeCallback memory"
                            }
                          },
                          "src": "6928:68:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_oraclizeCallback_$75_storage",
                            "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                          }
                        },
                        "id": 567,
                        "nodeType": "ExpressionStatement",
                        "src": "6928:68:0"
                      }
                    ]
                  },
                  "id": 569,
                  "nodeType": "IfStatement",
                  "src": "6516:495:0",
                  "trueBody": {
                    "id": 547,
                    "nodeType": "Block",
                    "src": "6570:120:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a6520424e4220717565727920776173204e4f542073656e742c20706c656173652061646420736f6d652045544820746f20636f76657220666f722074686520717565727920666565",
                              "id": 544,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6597:81:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a44b50fa8a4d52089346fcd13bf6e08b4acce6183f9ed43eb1060fc3bfcb679e",
                                "typeString": "literal_string \"Oraclize BNB query was NOT sent, please add some ETH to cover for the query fee\""
                              },
                              "value": "Oraclize BNB query was NOT sent, please add some ETH to cover for the query fee"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_a44b50fa8a4d52089346fcd13bf6e08b4acce6183f9ed43eb1060fc3bfcb679e",
                                "typeString": "literal_string \"Oraclize BNB query was NOT sent, please add some ETH to cover for the query fee\""
                              }
                            ],
                            "id": 543,
                            "name": "LogInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "6589:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6589:90:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 546,
                        "nodeType": "EmitStatement",
                        "src": "6584:95:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 571,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "updateBnb",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 533,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6429:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 534,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6455:0:0"
            },
            "scope": 767,
            "src": "6411:606:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 609,
              "nodeType": "Block",
              "src": "7067:562:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 575,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7150:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          }
                        ],
                        "id": 574,
                        "name": "oraclize_getPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          1192,
                          1210
                        ],
                        "referencedDeclaration": 1192,
                        "src": "7132:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) returns (uint256)"
                        }
                      },
                      "id": 576,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7132:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 578,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6623,
                            "src": "7167:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OraclizeTest_$767",
                              "typeString": "contract OraclizeTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OraclizeTest_$767",
                              "typeString": "contract OraclizeTest"
                            }
                          ],
                          "id": 577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7159:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7159:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "7159:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7132:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 607,
                    "nodeType": "Block",
                    "src": "7308:315:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a65204f4d47207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                              "id": 588,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7335:59:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4db8cb8c768881ffff1204580482d750d1a35929cc81ddf6a61531d50d234f86",
                                "typeString": "literal_string \"Oraclize OMG query was sent, standing by for the answer..\""
                              },
                              "value": "Oraclize OMG query was sent, standing by for the answer.."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_4db8cb8c768881ffff1204580482d750d1a35929cc81ddf6a61531d50d234f86",
                                "typeString": "literal_string \"Oraclize OMG query was sent, standing by for the answer..\""
                              }
                            ],
                            "id": 587,
                            "name": "LogInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "7327:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7327:68:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 590,
                        "nodeType": "EmitStatement",
                        "src": "7322:73:0"
                      },
                      {
                        "assignments": [
                          592
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 592,
                            "name": "queryId7",
                            "nodeType": "VariableDeclaration",
                            "scope": 610,
                            "src": "7409:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 591,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "7409:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 597,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "55524c",
                              "id": 594,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7443:5:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              "value": "URL"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6a736f6e2868747470733a2f2f6170692e636f696e6d61726b65746361702e636f6d2f76322f7469636b65722f313830382f292e646174612e71756f7465732e5553442e7072696365",
                              "id": 595,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7450:75:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_93aade1d58b48f634f818540099fbcfbb8cfe5157cab9b693d7c0ecaaa1e0d35",
                                "typeString": "literal_string \"json(https://api.coinmarketcap.com/v2/ticker/1808/).data.quotes.USD.price\""
                              },
                              "value": "json(https://api.coinmarketcap.com/v2/ticker/1808/).data.quotes.USD.price"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_93aade1d58b48f634f818540099fbcfbb8cfe5157cab9b693d7c0ecaaa1e0d35",
                                "typeString": "literal_string \"json(https://api.coinmarketcap.com/v2/ticker/1808/).data.quotes.USD.price\""
                              }
                            ],
                            "id": 593,
                            "name": "oraclize_query",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1250,
                              1292,
                              1338,
                              1382,
                              1425,
                              1470,
                              1519,
                              1566,
                              1613,
                              1662,
                              1715,
                              1766,
                              1803,
                              1843,
                              1886,
                              1926,
                              1971,
                              2019,
                              2070,
                              2118,
                              2171,
                              2227,
                              2286,
                              2342,
                              2403,
                              2467,
                              2534,
                              2598,
                              2667,
                              2739,
                              2814,
                              2886,
                              2933,
                              2982,
                              3035,
                              3086,
                              3123,
                              3163,
                              3206,
                              3246,
                              3291,
                              3339,
                              3390,
                              3438,
                              3491,
                              3547,
                              3606,
                              3662,
                              3723,
                              3787,
                              3854,
                              3918,
                              3987,
                              4059,
                              4134,
                              4206
                            ],
                            "referencedDeclaration": 1250,
                            "src": "7428:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (string memory,string memory) returns (bytes32)"
                            }
                          },
                          "id": 596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7428:98:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7409:117:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 598,
                              "name": "oraclizeCallbacks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79,
                              "src": "7540:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$75_storage_$",
                                "typeString": "mapping(bytes32 => struct OraclizeTest.oraclizeCallback storage ref)"
                              }
                            },
                            "id": 600,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 599,
                              "name": "queryId7",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 592,
                              "src": "7558:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7540:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$75_storage",
                              "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 602,
                                  "name": "oraclizeState",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 72,
                                  "src": "7587:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_oraclizeState_$72_$",
                                    "typeString": "type(enum OraclizeTest.oraclizeState)"
                                  }
                                },
                                "id": 603,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "ForOmg",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "7587:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_oraclizeState_$72",
                                  "typeString": "enum OraclizeTest.oraclizeState"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_oraclizeState_$72",
                                  "typeString": "enum OraclizeTest.oraclizeState"
                                }
                              ],
                              "id": 601,
                              "name": "oraclizeCallback",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75,
                              "src": "7570:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_oraclizeCallback_$75_storage_ptr_$",
                                "typeString": "type(struct OraclizeTest.oraclizeCallback storage pointer)"
                              }
                            },
                            "id": 604,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7570:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$75_memory",
                              "typeString": "struct OraclizeTest.oraclizeCallback memory"
                            }
                          },
                          "src": "7540:68:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_oraclizeCallback_$75_storage",
                            "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                          }
                        },
                        "id": 606,
                        "nodeType": "ExpressionStatement",
                        "src": "7540:68:0"
                      }
                    ]
                  },
                  "id": 608,
                  "nodeType": "IfStatement",
                  "src": "7128:495:0",
                  "trueBody": {
                    "id": 586,
                    "nodeType": "Block",
                    "src": "7182:120:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a65204f4d4720717565727920776173204e4f542073656e742c20706c656173652061646420736f6d652045544820746f20636f76657220666f722074686520717565727920666565",
                              "id": 583,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7209:81:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6f3ac9e8b2cf465825c721d7aa1e1cb17dd31c704661e81e1398848c3f82a607",
                                "typeString": "literal_string \"Oraclize OMG query was NOT sent, please add some ETH to cover for the query fee\""
                              },
                              "value": "Oraclize OMG query was NOT sent, please add some ETH to cover for the query fee"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_6f3ac9e8b2cf465825c721d7aa1e1cb17dd31c704661e81e1398848c3f82a607",
                                "typeString": "literal_string \"Oraclize OMG query was NOT sent, please add some ETH to cover for the query fee\""
                              }
                            ],
                            "id": 582,
                            "name": "LogInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "7201:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7201:90:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 585,
                        "nodeType": "EmitStatement",
                        "src": "7196:95:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 610,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "updateOmg",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 572,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7041:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 573,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7067:0:0"
            },
            "scope": 767,
            "src": "7023:606:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 648,
              "nodeType": "Block",
              "src": "7679:562:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7762:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          }
                        ],
                        "id": 613,
                        "name": "oraclize_getPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          1192,
                          1210
                        ],
                        "referencedDeclaration": 1192,
                        "src": "7744:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) returns (uint256)"
                        }
                      },
                      "id": 615,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7744:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 617,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6623,
                            "src": "7779:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OraclizeTest_$767",
                              "typeString": "contract OraclizeTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OraclizeTest_$767",
                              "typeString": "contract OraclizeTest"
                            }
                          ],
                          "id": 616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7771:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7771:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 619,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "7771:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7744:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 646,
                    "nodeType": "Block",
                    "src": "7920:315:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a65205a494c207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                              "id": 627,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7947:59:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_99fc1cdfabdd16181f17689c76bfc67bc9c8271f8879cf29eafeeb05c052860f",
                                "typeString": "literal_string \"Oraclize ZIL query was sent, standing by for the answer..\""
                              },
                              "value": "Oraclize ZIL query was sent, standing by for the answer.."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_99fc1cdfabdd16181f17689c76bfc67bc9c8271f8879cf29eafeeb05c052860f",
                                "typeString": "literal_string \"Oraclize ZIL query was sent, standing by for the answer..\""
                              }
                            ],
                            "id": 626,
                            "name": "LogInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "7939:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 628,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7939:68:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 629,
                        "nodeType": "EmitStatement",
                        "src": "7934:73:0"
                      },
                      {
                        "assignments": [
                          631
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 631,
                            "name": "queryId8",
                            "nodeType": "VariableDeclaration",
                            "scope": 649,
                            "src": "8021:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 630,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "8021:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 636,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "55524c",
                              "id": 633,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8055:5:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              "value": "URL"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6a736f6e2868747470733a2f2f6170692e636f696e6d61726b65746361702e636f6d2f76322f7469636b65722f323436392f292e646174612e71756f7465732e5553442e7072696365",
                              "id": 634,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8062:75:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c84fb03807fde0e21892584203ef258f4c79a244de5d4f88e9f4e095e4cd87e6",
                                "typeString": "literal_string \"json(https://api.coinmarketcap.com/v2/ticker/2469/).data.quotes.USD.price\""
                              },
                              "value": "json(https://api.coinmarketcap.com/v2/ticker/2469/).data.quotes.USD.price"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c84fb03807fde0e21892584203ef258f4c79a244de5d4f88e9f4e095e4cd87e6",
                                "typeString": "literal_string \"json(https://api.coinmarketcap.com/v2/ticker/2469/).data.quotes.USD.price\""
                              }
                            ],
                            "id": 632,
                            "name": "oraclize_query",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1250,
                              1292,
                              1338,
                              1382,
                              1425,
                              1470,
                              1519,
                              1566,
                              1613,
                              1662,
                              1715,
                              1766,
                              1803,
                              1843,
                              1886,
                              1926,
                              1971,
                              2019,
                              2070,
                              2118,
                              2171,
                              2227,
                              2286,
                              2342,
                              2403,
                              2467,
                              2534,
                              2598,
                              2667,
                              2739,
                              2814,
                              2886,
                              2933,
                              2982,
                              3035,
                              3086,
                              3123,
                              3163,
                              3206,
                              3246,
                              3291,
                              3339,
                              3390,
                              3438,
                              3491,
                              3547,
                              3606,
                              3662,
                              3723,
                              3787,
                              3854,
                              3918,
                              3987,
                              4059,
                              4134,
                              4206
                            ],
                            "referencedDeclaration": 1250,
                            "src": "8040:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (string memory,string memory) returns (bytes32)"
                            }
                          },
                          "id": 635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8040:98:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8021:117:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 637,
                              "name": "oraclizeCallbacks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79,
                              "src": "8152:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$75_storage_$",
                                "typeString": "mapping(bytes32 => struct OraclizeTest.oraclizeCallback storage ref)"
                              }
                            },
                            "id": 639,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 638,
                              "name": "queryId8",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 631,
                              "src": "8170:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8152:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$75_storage",
                              "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 641,
                                  "name": "oraclizeState",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 72,
                                  "src": "8199:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_oraclizeState_$72_$",
                                    "typeString": "type(enum OraclizeTest.oraclizeState)"
                                  }
                                },
                                "id": 642,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "ForZil",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "8199:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_oraclizeState_$72",
                                  "typeString": "enum OraclizeTest.oraclizeState"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_oraclizeState_$72",
                                  "typeString": "enum OraclizeTest.oraclizeState"
                                }
                              ],
                              "id": 640,
                              "name": "oraclizeCallback",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75,
                              "src": "8182:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_oraclizeCallback_$75_storage_ptr_$",
                                "typeString": "type(struct OraclizeTest.oraclizeCallback storage pointer)"
                              }
                            },
                            "id": 643,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8182:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$75_memory",
                              "typeString": "struct OraclizeTest.oraclizeCallback memory"
                            }
                          },
                          "src": "8152:68:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_oraclizeCallback_$75_storage",
                            "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                          }
                        },
                        "id": 645,
                        "nodeType": "ExpressionStatement",
                        "src": "8152:68:0"
                      }
                    ]
                  },
                  "id": 647,
                  "nodeType": "IfStatement",
                  "src": "7740:495:0",
                  "trueBody": {
                    "id": 625,
                    "nodeType": "Block",
                    "src": "7794:120:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a65205a494c20717565727920776173204e4f542073656e742c20706c656173652061646420736f6d652045544820746f20636f76657220666f722074686520717565727920666565",
                              "id": 622,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7821:81:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_249e059a5bb341fbfbaa6af0b08fcf0f27a370bb3fd96e5be9f4933ccc2551ef",
                                "typeString": "literal_string \"Oraclize ZIL query was NOT sent, please add some ETH to cover for the query fee\""
                              },
                              "value": "Oraclize ZIL query was NOT sent, please add some ETH to cover for the query fee"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_249e059a5bb341fbfbaa6af0b08fcf0f27a370bb3fd96e5be9f4933ccc2551ef",
                                "typeString": "literal_string \"Oraclize ZIL query was NOT sent, please add some ETH to cover for the query fee\""
                              }
                            ],
                            "id": 621,
                            "name": "LogInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "7813:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7813:90:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 624,
                        "nodeType": "EmitStatement",
                        "src": "7808:95:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 649,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "updateZil",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 611,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7653:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 612,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7679:0:0"
            },
            "scope": 767,
            "src": "7635:606:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 687,
              "nodeType": "Block",
              "src": "8289:555:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8372:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          }
                        ],
                        "id": 652,
                        "name": "oraclize_getPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          1192,
                          1210
                        ],
                        "referencedDeclaration": 1192,
                        "src": "8354:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) returns (uint256)"
                        }
                      },
                      "id": 654,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8354:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 656,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6623,
                            "src": "8389:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OraclizeTest_$767",
                              "typeString": "contract OraclizeTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OraclizeTest_$767",
                              "typeString": "contract OraclizeTest"
                            }
                          ],
                          "id": 655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8381:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8381:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 658,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "8381:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8354:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 685,
                    "nodeType": "Block",
                    "src": "8529:309:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a65204145207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                              "id": 666,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8556:58:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c75ed109283abd43a6d8b8b9ecb16ae9ab49d428587091ba0dfcb337c66a7276",
                                "typeString": "literal_string \"Oraclize AE query was sent, standing by for the answer..\""
                              },
                              "value": "Oraclize AE query was sent, standing by for the answer.."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c75ed109283abd43a6d8b8b9ecb16ae9ab49d428587091ba0dfcb337c66a7276",
                                "typeString": "literal_string \"Oraclize AE query was sent, standing by for the answer..\""
                              }
                            ],
                            "id": 665,
                            "name": "LogInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "8548:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8548:67:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 668,
                        "nodeType": "EmitStatement",
                        "src": "8543:72:0"
                      },
                      {
                        "assignments": [
                          670
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 670,
                            "name": "queryId9",
                            "nodeType": "VariableDeclaration",
                            "scope": 688,
                            "src": "8629:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 669,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "8629:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 675,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "55524c",
                              "id": 672,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8663:5:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              "value": "URL"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6a736f6e2868747470733a2f2f6170692e636f696e6d61726b65746361702e636f6d2f76322f7469636b65722f313730302f292e646174612e71756f7465732e5553442e7072696365",
                              "id": 673,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8670:75:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_04446ebbde6246811a6bde2f1f1f5e8d89df79d75ced3b04bbfad6a377947e96",
                                "typeString": "literal_string \"json(https://api.coinmarketcap.com/v2/ticker/1700/).data.quotes.USD.price\""
                              },
                              "value": "json(https://api.coinmarketcap.com/v2/ticker/1700/).data.quotes.USD.price"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_04446ebbde6246811a6bde2f1f1f5e8d89df79d75ced3b04bbfad6a377947e96",
                                "typeString": "literal_string \"json(https://api.coinmarketcap.com/v2/ticker/1700/).data.quotes.USD.price\""
                              }
                            ],
                            "id": 671,
                            "name": "oraclize_query",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1250,
                              1292,
                              1338,
                              1382,
                              1425,
                              1470,
                              1519,
                              1566,
                              1613,
                              1662,
                              1715,
                              1766,
                              1803,
                              1843,
                              1886,
                              1926,
                              1971,
                              2019,
                              2070,
                              2118,
                              2171,
                              2227,
                              2286,
                              2342,
                              2403,
                              2467,
                              2534,
                              2598,
                              2667,
                              2739,
                              2814,
                              2886,
                              2933,
                              2982,
                              3035,
                              3086,
                              3123,
                              3163,
                              3206,
                              3246,
                              3291,
                              3339,
                              3390,
                              3438,
                              3491,
                              3547,
                              3606,
                              3662,
                              3723,
                              3787,
                              3854,
                              3918,
                              3987,
                              4059,
                              4134,
                              4206
                            ],
                            "referencedDeclaration": 1250,
                            "src": "8648:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (string memory,string memory) returns (bytes32)"
                            }
                          },
                          "id": 674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8648:98:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8629:117:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 676,
                              "name": "oraclizeCallbacks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79,
                              "src": "8760:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$75_storage_$",
                                "typeString": "mapping(bytes32 => struct OraclizeTest.oraclizeCallback storage ref)"
                              }
                            },
                            "id": 678,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 677,
                              "name": "queryId9",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 670,
                              "src": "8778:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8760:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$75_storage",
                              "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 680,
                                  "name": "oraclizeState",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 72,
                                  "src": "8807:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_oraclizeState_$72_$",
                                    "typeString": "type(enum OraclizeTest.oraclizeState)"
                                  }
                                },
                                "id": 681,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "ForAe",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "8807:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_oraclizeState_$72",
                                  "typeString": "enum OraclizeTest.oraclizeState"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_oraclizeState_$72",
                                  "typeString": "enum OraclizeTest.oraclizeState"
                                }
                              ],
                              "id": 679,
                              "name": "oraclizeCallback",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75,
                              "src": "8790:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_oraclizeCallback_$75_storage_ptr_$",
                                "typeString": "type(struct OraclizeTest.oraclizeCallback storage pointer)"
                              }
                            },
                            "id": 682,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8790:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$75_memory",
                              "typeString": "struct OraclizeTest.oraclizeCallback memory"
                            }
                          },
                          "src": "8760:67:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_oraclizeCallback_$75_storage",
                            "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                          }
                        },
                        "id": 684,
                        "nodeType": "ExpressionStatement",
                        "src": "8760:67:0"
                      }
                    ]
                  },
                  "id": 686,
                  "nodeType": "IfStatement",
                  "src": "8350:488:0",
                  "trueBody": {
                    "id": 664,
                    "nodeType": "Block",
                    "src": "8404:119:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a6520414520717565727920776173204e4f542073656e742c20706c656173652061646420736f6d652045544820746f20636f76657220666f722074686520717565727920666565",
                              "id": 661,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8431:80:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_78cddcab207b43aa5d0b9857e13d6a3ab5b6d2c30bd56c9532f92733458c9ab4",
                                "typeString": "literal_string \"Oraclize AE query was NOT sent, please add some ETH to cover for the query fee\""
                              },
                              "value": "Oraclize AE query was NOT sent, please add some ETH to cover for the query fee"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_78cddcab207b43aa5d0b9857e13d6a3ab5b6d2c30bd56c9532f92733458c9ab4",
                                "typeString": "literal_string \"Oraclize AE query was NOT sent, please add some ETH to cover for the query fee\""
                              }
                            ],
                            "id": 660,
                            "name": "LogInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "8423:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8423:89:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 663,
                        "nodeType": "EmitStatement",
                        "src": "8418:94:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 688,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "updateAe",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 650,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8263:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 651,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8289:0:0"
            },
            "scope": 767,
            "src": "8246:598:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 726,
              "nodeType": "Block",
              "src": "8893:564:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8976:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          }
                        ],
                        "id": 691,
                        "name": "oraclize_getPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          1192,
                          1210
                        ],
                        "referencedDeclaration": 1192,
                        "src": "8958:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) returns (uint256)"
                        }
                      },
                      "id": 693,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8958:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 695,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6623,
                            "src": "8993:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OraclizeTest_$767",
                              "typeString": "contract OraclizeTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OraclizeTest_$767",
                              "typeString": "contract OraclizeTest"
                            }
                          ],
                          "id": 694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8985:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8985:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "8985:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8958:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 724,
                    "nodeType": "Block",
                    "src": "9134:317:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a65205a5258207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                              "id": 705,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9161:59:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4a9baae57ed30acede8e80abecf2254708d1775aae5842b39f1e5ac98e7db7dc",
                                "typeString": "literal_string \"Oraclize ZRX query was sent, standing by for the answer..\""
                              },
                              "value": "Oraclize ZRX query was sent, standing by for the answer.."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_4a9baae57ed30acede8e80abecf2254708d1775aae5842b39f1e5ac98e7db7dc",
                                "typeString": "literal_string \"Oraclize ZRX query was sent, standing by for the answer..\""
                              }
                            ],
                            "id": 704,
                            "name": "LogInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "9153:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9153:68:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 707,
                        "nodeType": "EmitStatement",
                        "src": "9148:73:0"
                      },
                      {
                        "assignments": [
                          709
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 709,
                            "name": "queryId10",
                            "nodeType": "VariableDeclaration",
                            "scope": 727,
                            "src": "9235:17:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 708,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "9235:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 714,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "55524c",
                              "id": 711,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9270:5:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              "value": "URL"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6a736f6e2868747470733a2f2f6170692e636f696e6d61726b65746361702e636f6d2f76322f7469636b65722f313839362f292e646174612e71756f7465732e5553442e7072696365",
                              "id": 712,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9277:75:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e6c9710d1d85d44310c0186f369fd88920f17f4e7821af5af17e01b8a5232573",
                                "typeString": "literal_string \"json(https://api.coinmarketcap.com/v2/ticker/1896/).data.quotes.USD.price\""
                              },
                              "value": "json(https://api.coinmarketcap.com/v2/ticker/1896/).data.quotes.USD.price"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e6c9710d1d85d44310c0186f369fd88920f17f4e7821af5af17e01b8a5232573",
                                "typeString": "literal_string \"json(https://api.coinmarketcap.com/v2/ticker/1896/).data.quotes.USD.price\""
                              }
                            ],
                            "id": 710,
                            "name": "oraclize_query",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1250,
                              1292,
                              1338,
                              1382,
                              1425,
                              1470,
                              1519,
                              1566,
                              1613,
                              1662,
                              1715,
                              1766,
                              1803,
                              1843,
                              1886,
                              1926,
                              1971,
                              2019,
                              2070,
                              2118,
                              2171,
                              2227,
                              2286,
                              2342,
                              2403,
                              2467,
                              2534,
                              2598,
                              2667,
                              2739,
                              2814,
                              2886,
                              2933,
                              2982,
                              3035,
                              3086,
                              3123,
                              3163,
                              3206,
                              3246,
                              3291,
                              3339,
                              3390,
                              3438,
                              3491,
                              3547,
                              3606,
                              3662,
                              3723,
                              3787,
                              3854,
                              3918,
                              3987,
                              4059,
                              4134,
                              4206
                            ],
                            "referencedDeclaration": 1250,
                            "src": "9255:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (string memory,string memory) returns (bytes32)"
                            }
                          },
                          "id": 713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9255:98:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9235:118:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 715,
                              "name": "oraclizeCallbacks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79,
                              "src": "9367:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$75_storage_$",
                                "typeString": "mapping(bytes32 => struct OraclizeTest.oraclizeCallback storage ref)"
                              }
                            },
                            "id": 717,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 716,
                              "name": "queryId10",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 709,
                              "src": "9385:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9367:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$75_storage",
                              "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 719,
                                  "name": "oraclizeState",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 72,
                                  "src": "9415:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_oraclizeState_$72_$",
                                    "typeString": "type(enum OraclizeTest.oraclizeState)"
                                  }
                                },
                                "id": 720,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "ForZrx",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "9415:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_oraclizeState_$72",
                                  "typeString": "enum OraclizeTest.oraclizeState"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_oraclizeState_$72",
                                  "typeString": "enum OraclizeTest.oraclizeState"
                                }
                              ],
                              "id": 718,
                              "name": "oraclizeCallback",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75,
                              "src": "9398:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_oraclizeCallback_$75_storage_ptr_$",
                                "typeString": "type(struct OraclizeTest.oraclizeCallback storage pointer)"
                              }
                            },
                            "id": 721,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9398:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$75_memory",
                              "typeString": "struct OraclizeTest.oraclizeCallback memory"
                            }
                          },
                          "src": "9367:69:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_oraclizeCallback_$75_storage",
                            "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                          }
                        },
                        "id": 723,
                        "nodeType": "ExpressionStatement",
                        "src": "9367:69:0"
                      }
                    ]
                  },
                  "id": 725,
                  "nodeType": "IfStatement",
                  "src": "8954:497:0",
                  "trueBody": {
                    "id": 703,
                    "nodeType": "Block",
                    "src": "9008:120:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a65205a525820717565727920776173204e4f542073656e742c20706c656173652061646420736f6d652045544820746f20636f76657220666f722074686520717565727920666565",
                              "id": 700,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9035:81:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2612d39edd6a5bb05adad07ee5f6bae11cec679f118c605c9ca66eb38faf7327",
                                "typeString": "literal_string \"Oraclize ZRX query was NOT sent, please add some ETH to cover for the query fee\""
                              },
                              "value": "Oraclize ZRX query was NOT sent, please add some ETH to cover for the query fee"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_2612d39edd6a5bb05adad07ee5f6bae11cec679f118c605c9ca66eb38faf7327",
                                "typeString": "literal_string \"Oraclize ZRX query was NOT sent, please add some ETH to cover for the query fee\""
                              }
                            ],
                            "id": 699,
                            "name": "LogInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "9027:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9027:90:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 702,
                        "nodeType": "EmitStatement",
                        "src": "9022:95:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 727,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "updateZrx",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 689,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8867:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 690,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8893:0:0"
            },
            "scope": 767,
            "src": "8849:608:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 765,
              "nodeType": "Block",
              "src": "9507:564:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9590:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          }
                        ],
                        "id": 730,
                        "name": "oraclize_getPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          1192,
                          1210
                        ],
                        "referencedDeclaration": 1192,
                        "src": "9572:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) returns (uint256)"
                        }
                      },
                      "id": 732,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9572:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 734,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6623,
                            "src": "9607:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OraclizeTest_$767",
                              "typeString": "contract OraclizeTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OraclizeTest_$767",
                              "typeString": "contract OraclizeTest"
                            }
                          ],
                          "id": 733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9599:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9599:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 736,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "9599:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9572:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 763,
                    "nodeType": "Block",
                    "src": "9748:317:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a652042544d207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                              "id": 744,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9775:59:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2573d4a393139471ac1b7d11518cce297e45020ceed6731b0105324e1e8f1306",
                                "typeString": "literal_string \"Oraclize BTM query was sent, standing by for the answer..\""
                              },
                              "value": "Oraclize BTM query was sent, standing by for the answer.."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_2573d4a393139471ac1b7d11518cce297e45020ceed6731b0105324e1e8f1306",
                                "typeString": "literal_string \"Oraclize BTM query was sent, standing by for the answer..\""
                              }
                            ],
                            "id": 743,
                            "name": "LogInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "9767:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 745,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9767:68:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 746,
                        "nodeType": "EmitStatement",
                        "src": "9762:73:0"
                      },
                      {
                        "assignments": [
                          748
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 748,
                            "name": "queryId11",
                            "nodeType": "VariableDeclaration",
                            "scope": 766,
                            "src": "9849:17:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 747,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "9849:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 753,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "55524c",
                              "id": 750,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9884:5:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              "value": "URL"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6a736f6e2868747470733a2f2f6170692e636f696e6d61726b65746361702e636f6d2f76322f7469636b65722f313836362f292e646174612e71756f7465732e5553442e7072696365",
                              "id": 751,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9891:75:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_43aeee2fbdc44d6c2df5a368914e5f791dd8dbd27dd8f413810750701ca7d00d",
                                "typeString": "literal_string \"json(https://api.coinmarketcap.com/v2/ticker/1866/).data.quotes.USD.price\""
                              },
                              "value": "json(https://api.coinmarketcap.com/v2/ticker/1866/).data.quotes.USD.price"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_43aeee2fbdc44d6c2df5a368914e5f791dd8dbd27dd8f413810750701ca7d00d",
                                "typeString": "literal_string \"json(https://api.coinmarketcap.com/v2/ticker/1866/).data.quotes.USD.price\""
                              }
                            ],
                            "id": 749,
                            "name": "oraclize_query",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1250,
                              1292,
                              1338,
                              1382,
                              1425,
                              1470,
                              1519,
                              1566,
                              1613,
                              1662,
                              1715,
                              1766,
                              1803,
                              1843,
                              1886,
                              1926,
                              1971,
                              2019,
                              2070,
                              2118,
                              2171,
                              2227,
                              2286,
                              2342,
                              2403,
                              2467,
                              2534,
                              2598,
                              2667,
                              2739,
                              2814,
                              2886,
                              2933,
                              2982,
                              3035,
                              3086,
                              3123,
                              3163,
                              3206,
                              3246,
                              3291,
                              3339,
                              3390,
                              3438,
                              3491,
                              3547,
                              3606,
                              3662,
                              3723,
                              3787,
                              3854,
                              3918,
                              3987,
                              4059,
                              4134,
                              4206
                            ],
                            "referencedDeclaration": 1250,
                            "src": "9869:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (string memory,string memory) returns (bytes32)"
                            }
                          },
                          "id": 752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9869:98:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9849:118:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 754,
                              "name": "oraclizeCallbacks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79,
                              "src": "9981:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$75_storage_$",
                                "typeString": "mapping(bytes32 => struct OraclizeTest.oraclizeCallback storage ref)"
                              }
                            },
                            "id": 756,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 755,
                              "name": "queryId11",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 748,
                              "src": "9999:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9981:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$75_storage",
                              "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 758,
                                  "name": "oraclizeState",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 72,
                                  "src": "10029:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_oraclizeState_$72_$",
                                    "typeString": "type(enum OraclizeTest.oraclizeState)"
                                  }
                                },
                                "id": 759,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "ForBtm",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "10029:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_oraclizeState_$72",
                                  "typeString": "enum OraclizeTest.oraclizeState"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_oraclizeState_$72",
                                  "typeString": "enum OraclizeTest.oraclizeState"
                                }
                              ],
                              "id": 757,
                              "name": "oraclizeCallback",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75,
                              "src": "10012:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_oraclizeCallback_$75_storage_ptr_$",
                                "typeString": "type(struct OraclizeTest.oraclizeCallback storage pointer)"
                              }
                            },
                            "id": 760,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10012:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$75_memory",
                              "typeString": "struct OraclizeTest.oraclizeCallback memory"
                            }
                          },
                          "src": "9981:69:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_oraclizeCallback_$75_storage",
                            "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                          }
                        },
                        "id": 762,
                        "nodeType": "ExpressionStatement",
                        "src": "9981:69:0"
                      }
                    ]
                  },
                  "id": 764,
                  "nodeType": "IfStatement",
                  "src": "9568:497:0",
                  "trueBody": {
                    "id": 742,
                    "nodeType": "Block",
                    "src": "9622:120:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a652042544d20717565727920776173204e4f542073656e742c20706c656173652061646420736f6d652045544820746f20636f76657220666f722074686520717565727920666565",
                              "id": 739,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9649:81:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_58b6064d24d7afa1d8c624fa7d1bf60f7e36ffc523d8520bcd9985bac7d146a8",
                                "typeString": "literal_string \"Oraclize BTM query was NOT sent, please add some ETH to cover for the query fee\""
                              },
                              "value": "Oraclize BTM query was NOT sent, please add some ETH to cover for the query fee"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_58b6064d24d7afa1d8c624fa7d1bf60f7e36ffc523d8520bcd9985bac7d146a8",
                                "typeString": "literal_string \"Oraclize BTM query was NOT sent, please add some ETH to cover for the query fee\""
                              }
                            ],
                            "id": 738,
                            "name": "LogInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "9641:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9641:90:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 741,
                        "nodeType": "EmitStatement",
                        "src": "9636:95:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 766,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "updateBtm",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 728,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9481:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 729,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9507:0:0"
            },
            "scope": 767,
            "src": "9463:608:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 768,
        "src": "97:9976:0"
      }
    ],
    "src": "0:10073:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/jeffreyyu/Desktop/ClassRelated/CS359B/cs359b-diy-a-new-decentralized-index/oracleDapp/contracts/OraclizeTest.sol",
    "exportedSymbols": {
      "OraclizeTest": [
        767
      ]
    },
    "id": 768,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "installed_contracts/oraclize-api/contracts/usingOraclize.sol",
        "file": "installed_contracts/oraclize-api/contracts/usingOraclize.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 768,
        "sourceUnit": 6590,
        "src": "25:70:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6589,
              "src": "122:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$6589",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "122:13:0"
          }
        ],
        "contractDependencies": [
          6589
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 767,
        "linearizedBaseContracts": [
          767,
          6589
        ],
        "name": "OraclizeTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 767,
            "src": "143:13:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "143:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 10,
            "name": "LogInfo",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8,
                  "indexed": false,
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "scope": 10,
                  "src": "177:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "177:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "176:20:0"
            },
            "src": "163:34:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 14,
            "name": "LogPriceUpdateEth",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12,
                  "indexed": false,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 14,
                  "src": "226:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "226:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "225:14:0"
            },
            "src": "202:38:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 18,
            "name": "LogPriceUpdateEos",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16,
                  "indexed": false,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 18,
                  "src": "269:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "269:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "268:14:0"
            },
            "src": "245:38:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 22,
            "name": "LogPriceUpdateTrx",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20,
                  "indexed": false,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 22,
                  "src": "312:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "312:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "311:14:0"
            },
            "src": "288:38:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 26,
            "name": "LogPriceUpdateVen",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 25,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24,
                  "indexed": false,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 26,
                  "src": "355:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "355:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "354:14:0"
            },
            "src": "331:38:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 30,
            "name": "LogPriceUpdateIcx",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28,
                  "indexed": false,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "398:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "398:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "397:14:0"
            },
            "src": "374:38:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 34,
            "name": "LogPriceUpdateBnb",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32,
                  "indexed": false,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 34,
                  "src": "441:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "441:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "440:14:0"
            },
            "src": "417:38:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 38,
            "name": "LogPriceUpdateOmg",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36,
                  "indexed": false,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 38,
                  "src": "484:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "484:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "483:14:0"
            },
            "src": "460:38:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 42,
            "name": "LogPriceUpdateZil",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40,
                  "indexed": false,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 42,
                  "src": "527:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "527:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "526:14:0"
            },
            "src": "503:38:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 46,
            "name": "LogPriceUpdateAe",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44,
                  "indexed": false,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 46,
                  "src": "569:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "569:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "568:14:0"
            },
            "src": "546:37:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 50,
            "name": "LogPriceUpdateZrx",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48,
                  "indexed": false,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 50,
                  "src": "612:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "612:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "611:14:0"
            },
            "src": "588:38:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 54,
            "name": "LogPriceUpdateBtm",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52,
                  "indexed": false,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 54,
                  "src": "655:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "655:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "654:14:0"
            },
            "src": "631:38:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 60,
            "name": "LogUpdate",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56,
                  "indexed": true,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 60,
                  "src": "690:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "690:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58,
                  "indexed": true,
                  "name": "_balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 60,
                  "src": "714:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "714:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "689:47:0"
            },
            "src": "674:63:0"
          },
          {
            "canonicalName": "OraclizeTest.oraclizeState",
            "id": 72,
            "members": [
              {
                "id": 61,
                "name": "ForEth",
                "nodeType": "EnumValue",
                "src": "763:6:0"
              },
              {
                "id": 62,
                "name": "ForEos",
                "nodeType": "EnumValue",
                "src": "771:6:0"
              },
              {
                "id": 63,
                "name": "ForTrx",
                "nodeType": "EnumValue",
                "src": "779:6:0"
              },
              {
                "id": 64,
                "name": "ForVen",
                "nodeType": "EnumValue",
                "src": "787:6:0"
              },
              {
                "id": 65,
                "name": "ForIcx",
                "nodeType": "EnumValue",
                "src": "795:6:0"
              },
              {
                "id": 66,
                "name": "ForBnb",
                "nodeType": "EnumValue",
                "src": "803:6:0"
              },
              {
                "id": 67,
                "name": "ForOmg",
                "nodeType": "EnumValue",
                "src": "811:6:0"
              },
              {
                "id": 68,
                "name": "ForZil",
                "nodeType": "EnumValue",
                "src": "819:6:0"
              },
              {
                "id": 69,
                "name": "ForAe",
                "nodeType": "EnumValue",
                "src": "827:5:0"
              },
              {
                "id": 70,
                "name": "ForZrx",
                "nodeType": "EnumValue",
                "src": "834:6:0"
              },
              {
                "id": 71,
                "name": "ForBtm",
                "nodeType": "EnumValue",
                "src": "842:6:0"
              }
            ],
            "name": "oraclizeState",
            "nodeType": "EnumDefinition",
            "src": "742:107:0"
          },
          {
            "canonicalName": "OraclizeTest.oraclizeCallback",
            "id": 75,
            "members": [
              {
                "constant": false,
                "id": 74,
                "name": "oState",
                "nodeType": "VariableDeclaration",
                "scope": 75,
                "src": "889:20:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_oraclizeState_$72",
                  "typeString": "enum OraclizeTest.oraclizeState"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 73,
                  "name": "oraclizeState",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 72,
                  "src": "889:13:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_oraclizeState_$72",
                    "typeString": "enum OraclizeTest.oraclizeState"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "oraclizeCallback",
            "nodeType": "StructDefinition",
            "scope": 767,
            "src": "855:61:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 79,
            "name": "oraclizeCallbacks",
            "nodeType": "VariableDeclaration",
            "scope": 767,
            "src": "922:62:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$75_storage_$",
              "typeString": "mapping(bytes32 => struct OraclizeTest.oraclizeCallback)"
            },
            "typeName": {
              "id": 78,
              "keyType": {
                "id": 76,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "931:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "922:37:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$75_storage_$",
                "typeString": "mapping(bytes32 => struct OraclizeTest.oraclizeCallback)"
              },
              "valueType": {
                "contractScope": null,
                "id": 77,
                "name": "oraclizeCallback",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 75,
                "src": "942:16:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_oraclizeCallback_$75_storage_ptr",
                  "typeString": "struct OraclizeTest.oraclizeCallback"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 140,
              "nodeType": "Block",
              "src": "1057:523:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 82,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "1067:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 83,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6604,
                        "src": "1075:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 84,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1075:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1067:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "1067:18:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 88,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "1111:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 90,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6623,
                              "src": "1126:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OraclizeTest_$767",
                                "typeString": "contract OraclizeTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_OraclizeTest_$767",
                                "typeString": "contract OraclizeTest"
                              }
                            ],
                            "id": 89,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1118:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 91,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1118:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 92,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1118:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 87,
                      "name": "LogUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "1101:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1101:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 94,
                  "nodeType": "EmitStatement",
                  "src": "1096:44:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 95,
                      "name": "OAR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 945,
                      "src": "1203:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$885",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "307830383139334332333830346232393234353261366664633045383846343246643132314132343433",
                          "id": 97,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1231:42:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x08193C23804b292452a6fdc0E88F42Fd121A2443"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 96,
                        "name": "OraclizeAddrResolverI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 885,
                        "src": "1209:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OraclizeAddrResolverI_$885_$",
                          "typeString": "type(contract OraclizeAddrResolverI)"
                        }
                      },
                      "id": 98,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1209:65:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$885",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "src": "1203:71:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$885",
                      "typeString": "contract OraclizeAddrResolverI"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "1203:71:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        },
                        "id": 104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 102,
                          "name": "proofType_TLSNotary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 916,
                          "src": "1303:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "|",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 103,
                          "name": "proofStorage_IPFS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 928,
                          "src": "1325:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "src": "1303:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      ],
                      "id": 101,
                      "name": "oraclize_setProof",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4231,
                      "src": "1285:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes1_$returns$__$",
                        "typeString": "function (bytes1)"
                      }
                    },
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1285:58:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 106,
                  "nodeType": "ExpressionStatement",
                  "src": "1285:58:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 107,
                      "name": "updateEth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 376,
                      "src": "1353:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1353:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "1353:11:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 110,
                      "name": "updateEos",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 415,
                      "src": "1374:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1374:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 112,
                  "nodeType": "ExpressionStatement",
                  "src": "1374:11:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 113,
                      "name": "updateTrx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 454,
                      "src": "1395:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1395:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 115,
                  "nodeType": "ExpressionStatement",
                  "src": "1395:11:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 116,
                      "name": "updateVen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 493,
                      "src": "1416:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1416:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 118,
                  "nodeType": "ExpressionStatement",
                  "src": "1416:11:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 119,
                      "name": "updateIcx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 532,
                      "src": "1437:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1437:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 121,
                  "nodeType": "ExpressionStatement",
                  "src": "1437:11:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 122,
                      "name": "updateBnb",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 571,
                      "src": "1458:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1458:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "1458:11:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 125,
                      "name": "updateOmg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 610,
                      "src": "1479:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1479:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 127,
                  "nodeType": "ExpressionStatement",
                  "src": "1479:11:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 128,
                      "name": "updateZil",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 649,
                      "src": "1500:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1500:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 130,
                  "nodeType": "ExpressionStatement",
                  "src": "1500:11:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 131,
                      "name": "updateAe",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 688,
                      "src": "1521:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1521:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 133,
                  "nodeType": "ExpressionStatement",
                  "src": "1521:10:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 134,
                      "name": "updateZrx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 727,
                      "src": "1541:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1541:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 136,
                  "nodeType": "ExpressionStatement",
                  "src": "1541:11:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 137,
                      "name": "updateBtm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 766,
                      "src": "1562:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1562:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 139,
                  "nodeType": "ExpressionStatement",
                  "src": "1562:11:0"
                }
              ]
            },
            "documentation": null,
            "id": 141,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "OraclizeTest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1031:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1057:0:0"
            },
            "scope": 767,
            "src": "1010:570:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 147,
              "nodeType": "Block",
              "src": "1632:25:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 144,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6609,
                        6610
                      ],
                      "referencedDeclaration": 6609,
                      "src": "1642:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1642:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 146,
                  "nodeType": "ExpressionStatement",
                  "src": "1642:8:0"
                }
              ]
            },
            "documentation": null,
            "id": 148,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1619:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 143,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1632:0:0"
            },
            "scope": 767,
            "src": "1611:46:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 325,
              "nodeType": "Block",
              "src": "1734:1514:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 158,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6604,
                            "src": "1752:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1752:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 160,
                            "name": "oraclize_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4218,
                            "src": "1766:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1766:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1752:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 157,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6607,
                        6608
                      ],
                      "referencedDeclaration": 6607,
                      "src": "1744:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1744:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 164,
                  "nodeType": "ExpressionStatement",
                  "src": "1744:43:0"
                },
                {
                  "assignments": [
                    166
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 166,
                      "name": "o",
                      "nodeType": "VariableDeclaration",
                      "scope": 326,
                      "src": "1798:25:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_oraclizeCallback_$75_memory_ptr",
                        "typeString": "struct OraclizeTest.oraclizeCallback"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 165,
                        "name": "oraclizeCallback",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 75,
                        "src": "1798:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_oraclizeCallback_$75_storage_ptr",
                          "typeString": "struct OraclizeTest.oraclizeCallback"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 170,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 167,
                      "name": "oraclizeCallbacks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79,
                      "src": "1826:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$75_storage_$",
                        "typeString": "mapping(bytes32 => struct OraclizeTest.oraclizeCallback storage ref)"
                      }
                    },
                    "id": 169,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 168,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 150,
                      "src": "1844:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1826:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_oraclizeCallback_$75_storage",
                      "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1798:49:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_oraclizeState_$72",
                      "typeString": "enum OraclizeTest.oraclizeState"
                    },
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 171,
                        "name": "o",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 166,
                        "src": "1861:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_oraclizeCallback_$75_memory_ptr",
                          "typeString": "struct OraclizeTest.oraclizeCallback memory"
                        }
                      },
                      "id": 172,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "oState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74,
                      "src": "1861:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$72",
                        "typeString": "enum OraclizeTest.oraclizeState"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 173,
                        "name": "oraclizeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "1873:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_oraclizeState_$72_$",
                          "typeString": "type(enum OraclizeTest.oraclizeState)"
                        }
                      },
                      "id": 174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ForEth",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1873:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$72",
                        "typeString": "enum OraclizeTest.oraclizeState"
                      }
                    },
                    "src": "1861:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 184,
                  "nodeType": "IfStatement",
                  "src": "1857:117:0",
                  "trueBody": {
                    "id": 183,
                    "nodeType": "Block",
                    "src": "1894:80:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 177,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 152,
                              "src": "1931:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 176,
                            "name": "LogPriceUpdateEth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
                            "src": "1913:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1913:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 179,
                        "nodeType": "EmitStatement",
                        "src": "1908:30:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 180,
                            "name": "updateEth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 376,
                            "src": "1952:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1952:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 182,
                        "nodeType": "ExpressionStatement",
                        "src": "1952:11:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_oraclizeState_$72",
                      "typeString": "enum OraclizeTest.oraclizeState"
                    },
                    "id": 189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 185,
                        "name": "o",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 166,
                        "src": "1988:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_oraclizeCallback_$75_memory_ptr",
                          "typeString": "struct OraclizeTest.oraclizeCallback memory"
                        }
                      },
                      "id": 186,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "oState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74,
                      "src": "1988:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$72",
                        "typeString": "enum OraclizeTest.oraclizeState"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 187,
                        "name": "oraclizeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "2000:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_oraclizeState_$72_$",
                          "typeString": "type(enum OraclizeTest.oraclizeState)"
                        }
                      },
                      "id": 188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ForEos",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2000:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$72",
                        "typeString": "enum OraclizeTest.oraclizeState"
                      }
                    },
                    "src": "1988:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 198,
                  "nodeType": "IfStatement",
                  "src": "1984:117:0",
                  "trueBody": {
                    "id": 197,
                    "nodeType": "Block",
                    "src": "2021:80:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 191,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 152,
                              "src": "2058:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 190,
                            "name": "LogPriceUpdateEos",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "2040:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2040:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 193,
                        "nodeType": "EmitStatement",
                        "src": "2035:30:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 194,
                            "name": "updateEos",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 415,
                            "src": "2079:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2079:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 196,
                        "nodeType": "ExpressionStatement",
                        "src": "2079:11:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_oraclizeState_$72",
                      "typeString": "enum OraclizeTest.oraclizeState"
                    },
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 199,
                        "name": "o",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 166,
                        "src": "2115:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_oraclizeCallback_$75_memory_ptr",
                          "typeString": "struct OraclizeTest.oraclizeCallback memory"
                        }
                      },
                      "id": 200,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "oState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74,
                      "src": "2115:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$72",
                        "typeString": "enum OraclizeTest.oraclizeState"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 201,
                        "name": "oraclizeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "2127:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_oraclizeState_$72_$",
                          "typeString": "type(enum OraclizeTest.oraclizeState)"
                        }
                      },
                      "id": 202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ForTrx",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2127:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$72",
                        "typeString": "enum OraclizeTest.oraclizeState"
                      }
                    },
                    "src": "2115:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 212,
                  "nodeType": "IfStatement",
                  "src": "2111:117:0",
                  "trueBody": {
                    "id": 211,
                    "nodeType": "Block",
                    "src": "2148:80:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 205,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 152,
                              "src": "2185:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 204,
                            "name": "LogPriceUpdateTrx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22,
                            "src": "2167:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2167:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 207,
                        "nodeType": "EmitStatement",
                        "src": "2162:30:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 208,
                            "name": "updateTrx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 454,
                            "src": "2206:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2206:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 210,
                        "nodeType": "ExpressionStatement",
                        "src": "2206:11:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_oraclizeState_$72",
                      "typeString": "enum OraclizeTest.oraclizeState"
                    },
                    "id": 217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 213,
                        "name": "o",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 166,
                        "src": "2242:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_oraclizeCallback_$75_memory_ptr",
                          "typeString": "struct OraclizeTest.oraclizeCallback memory"
                        }
                      },
                      "id": 214,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "oState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74,
                      "src": "2242:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$72",
                        "typeString": "enum OraclizeTest.oraclizeState"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 215,
                        "name": "oraclizeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "2254:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_oraclizeState_$72_$",
                          "typeString": "type(enum OraclizeTest.oraclizeState)"
                        }
                      },
                      "id": 216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ForVen",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2254:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$72",
                        "typeString": "enum OraclizeTest.oraclizeState"
                      }
                    },
                    "src": "2242:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 226,
                  "nodeType": "IfStatement",
                  "src": "2238:117:0",
                  "trueBody": {
                    "id": 225,
                    "nodeType": "Block",
                    "src": "2275:80:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 219,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 152,
                              "src": "2312:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 218,
                            "name": "LogPriceUpdateVen",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26,
                            "src": "2294:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2294:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 221,
                        "nodeType": "EmitStatement",
                        "src": "2289:30:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 222,
                            "name": "updateVen",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 493,
                            "src": "2333:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2333:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 224,
                        "nodeType": "ExpressionStatement",
                        "src": "2333:11:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_oraclizeState_$72",
                      "typeString": "enum OraclizeTest.oraclizeState"
                    },
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 227,
                        "name": "o",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 166,
                        "src": "2369:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_oraclizeCallback_$75_memory_ptr",
                          "typeString": "struct OraclizeTest.oraclizeCallback memory"
                        }
                      },
                      "id": 228,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "oState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74,
                      "src": "2369:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$72",
                        "typeString": "enum OraclizeTest.oraclizeState"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 229,
                        "name": "oraclizeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "2381:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_oraclizeState_$72_$",
                          "typeString": "type(enum OraclizeTest.oraclizeState)"
                        }
                      },
                      "id": 230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ForIcx",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2381:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$72",
                        "typeString": "enum OraclizeTest.oraclizeState"
                      }
                    },
                    "src": "2369:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 240,
                  "nodeType": "IfStatement",
                  "src": "2365:117:0",
                  "trueBody": {
                    "id": 239,
                    "nodeType": "Block",
                    "src": "2402:80:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 233,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 152,
                              "src": "2439:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 232,
                            "name": "LogPriceUpdateIcx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30,
                            "src": "2421:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2421:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 235,
                        "nodeType": "EmitStatement",
                        "src": "2416:30:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 236,
                            "name": "updateIcx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 532,
                            "src": "2460:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2460:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 238,
                        "nodeType": "ExpressionStatement",
                        "src": "2460:11:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_oraclizeState_$72",
                      "typeString": "enum OraclizeTest.oraclizeState"
                    },
                    "id": 245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 241,
                        "name": "o",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 166,
                        "src": "2496:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_oraclizeCallback_$75_memory_ptr",
                          "typeString": "struct OraclizeTest.oraclizeCallback memory"
                        }
                      },
                      "id": 242,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "oState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74,
                      "src": "2496:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$72",
                        "typeString": "enum OraclizeTest.oraclizeState"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 243,
                        "name": "oraclizeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "2508:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_oraclizeState_$72_$",
                          "typeString": "type(enum OraclizeTest.oraclizeState)"
                        }
                      },
                      "id": 244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ForBnb",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2508:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$72",
                        "typeString": "enum OraclizeTest.oraclizeState"
                      }
                    },
                    "src": "2496:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 254,
                  "nodeType": "IfStatement",
                  "src": "2492:117:0",
                  "trueBody": {
                    "id": 253,
                    "nodeType": "Block",
                    "src": "2529:80:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 247,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 152,
                              "src": "2566:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 246,
                            "name": "LogPriceUpdateBnb",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "2548:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2548:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 249,
                        "nodeType": "EmitStatement",
                        "src": "2543:30:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 250,
                            "name": "updateBnb",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 571,
                            "src": "2587:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2587:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 252,
                        "nodeType": "ExpressionStatement",
                        "src": "2587:11:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_oraclizeState_$72",
                      "typeString": "enum OraclizeTest.oraclizeState"
                    },
                    "id": 259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 255,
                        "name": "o",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 166,
                        "src": "2623:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_oraclizeCallback_$75_memory_ptr",
                          "typeString": "struct OraclizeTest.oraclizeCallback memory"
                        }
                      },
                      "id": 256,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "oState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74,
                      "src": "2623:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$72",
                        "typeString": "enum OraclizeTest.oraclizeState"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 257,
                        "name": "oraclizeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "2635:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_oraclizeState_$72_$",
                          "typeString": "type(enum OraclizeTest.oraclizeState)"
                        }
                      },
                      "id": 258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ForOmg",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2635:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$72",
                        "typeString": "enum OraclizeTest.oraclizeState"
                      }
                    },
                    "src": "2623:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 268,
                  "nodeType": "IfStatement",
                  "src": "2619:117:0",
                  "trueBody": {
                    "id": 267,
                    "nodeType": "Block",
                    "src": "2656:80:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 261,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 152,
                              "src": "2693:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 260,
                            "name": "LogPriceUpdateOmg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "2675:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2675:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 263,
                        "nodeType": "EmitStatement",
                        "src": "2670:30:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 264,
                            "name": "updateOmg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 610,
                            "src": "2714:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2714:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 266,
                        "nodeType": "ExpressionStatement",
                        "src": "2714:11:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_oraclizeState_$72",
                      "typeString": "enum OraclizeTest.oraclizeState"
                    },
                    "id": 273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 269,
                        "name": "o",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 166,
                        "src": "2750:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_oraclizeCallback_$75_memory_ptr",
                          "typeString": "struct OraclizeTest.oraclizeCallback memory"
                        }
                      },
                      "id": 270,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "oState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74,
                      "src": "2750:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$72",
                        "typeString": "enum OraclizeTest.oraclizeState"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 271,
                        "name": "oraclizeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "2762:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_oraclizeState_$72_$",
                          "typeString": "type(enum OraclizeTest.oraclizeState)"
                        }
                      },
                      "id": 272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ForZil",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2762:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$72",
                        "typeString": "enum OraclizeTest.oraclizeState"
                      }
                    },
                    "src": "2750:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 282,
                  "nodeType": "IfStatement",
                  "src": "2746:117:0",
                  "trueBody": {
                    "id": 281,
                    "nodeType": "Block",
                    "src": "2783:80:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 275,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 152,
                              "src": "2820:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 274,
                            "name": "LogPriceUpdateZil",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "2802:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2802:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 277,
                        "nodeType": "EmitStatement",
                        "src": "2797:30:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 278,
                            "name": "updateZil",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 649,
                            "src": "2841:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2841:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 280,
                        "nodeType": "ExpressionStatement",
                        "src": "2841:11:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_oraclizeState_$72",
                      "typeString": "enum OraclizeTest.oraclizeState"
                    },
                    "id": 287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 283,
                        "name": "o",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 166,
                        "src": "2877:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_oraclizeCallback_$75_memory_ptr",
                          "typeString": "struct OraclizeTest.oraclizeCallback memory"
                        }
                      },
                      "id": 284,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "oState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74,
                      "src": "2877:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$72",
                        "typeString": "enum OraclizeTest.oraclizeState"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 285,
                        "name": "oraclizeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "2889:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_oraclizeState_$72_$",
                          "typeString": "type(enum OraclizeTest.oraclizeState)"
                        }
                      },
                      "id": 286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ForAe",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2889:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$72",
                        "typeString": "enum OraclizeTest.oraclizeState"
                      }
                    },
                    "src": "2877:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 296,
                  "nodeType": "IfStatement",
                  "src": "2873:114:0",
                  "trueBody": {
                    "id": 295,
                    "nodeType": "Block",
                    "src": "2909:78:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 289,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 152,
                              "src": "2945:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 288,
                            "name": "LogPriceUpdateAe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46,
                            "src": "2928:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2928:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 291,
                        "nodeType": "EmitStatement",
                        "src": "2923:29:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 292,
                            "name": "updateAe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 688,
                            "src": "2966:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2966:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 294,
                        "nodeType": "ExpressionStatement",
                        "src": "2966:10:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_oraclizeState_$72",
                      "typeString": "enum OraclizeTest.oraclizeState"
                    },
                    "id": 301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 297,
                        "name": "o",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 166,
                        "src": "3001:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_oraclizeCallback_$75_memory_ptr",
                          "typeString": "struct OraclizeTest.oraclizeCallback memory"
                        }
                      },
                      "id": 298,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "oState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74,
                      "src": "3001:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$72",
                        "typeString": "enum OraclizeTest.oraclizeState"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 299,
                        "name": "oraclizeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "3013:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_oraclizeState_$72_$",
                          "typeString": "type(enum OraclizeTest.oraclizeState)"
                        }
                      },
                      "id": 300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ForZrx",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3013:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$72",
                        "typeString": "enum OraclizeTest.oraclizeState"
                      }
                    },
                    "src": "3001:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 310,
                  "nodeType": "IfStatement",
                  "src": "2997:117:0",
                  "trueBody": {
                    "id": 309,
                    "nodeType": "Block",
                    "src": "3034:80:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 303,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 152,
                              "src": "3071:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 302,
                            "name": "LogPriceUpdateZrx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50,
                            "src": "3053:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3053:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 305,
                        "nodeType": "EmitStatement",
                        "src": "3048:30:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 306,
                            "name": "updateZrx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 727,
                            "src": "3092:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3092:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 308,
                        "nodeType": "ExpressionStatement",
                        "src": "3092:11:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_oraclizeState_$72",
                      "typeString": "enum OraclizeTest.oraclizeState"
                    },
                    "id": 315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 311,
                        "name": "o",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 166,
                        "src": "3128:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_oraclizeCallback_$75_memory_ptr",
                          "typeString": "struct OraclizeTest.oraclizeCallback memory"
                        }
                      },
                      "id": 312,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "oState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74,
                      "src": "3128:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$72",
                        "typeString": "enum OraclizeTest.oraclizeState"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 313,
                        "name": "oraclizeState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "3140:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_oraclizeState_$72_$",
                          "typeString": "type(enum OraclizeTest.oraclizeState)"
                        }
                      },
                      "id": 314,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ForBtm",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3140:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_oraclizeState_$72",
                        "typeString": "enum OraclizeTest.oraclizeState"
                      }
                    },
                    "src": "3128:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 324,
                  "nodeType": "IfStatement",
                  "src": "3124:117:0",
                  "trueBody": {
                    "id": 323,
                    "nodeType": "Block",
                    "src": "3161:80:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 317,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 152,
                              "src": "3198:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 316,
                            "name": "LogPriceUpdateBtm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "3180:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3180:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 319,
                        "nodeType": "EmitStatement",
                        "src": "3175:30:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 320,
                            "name": "updateBtm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 766,
                            "src": "3219:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3219:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 322,
                        "nodeType": "ExpressionStatement",
                        "src": "3219:11:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 326,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 150,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 326,
                  "src": "1683:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 149,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1683:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 152,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 326,
                  "src": "1695:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 151,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1695:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 154,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 326,
                  "src": "1710:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 153,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1710:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1682:40:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 156,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1734:0:0"
            },
            "scope": 767,
            "src": "1663:1585:0",
            "stateMutability": "nonpayable",
            "superFunction": 1177,
            "visibility": "public"
          },
          {
            "body": {
              "id": 336,
              "nodeType": "Block",
              "src": "3315:45:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 332,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6623,
                          "src": "3340:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OraclizeTest_$767",
                            "typeString": "contract OraclizeTest"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_OraclizeTest_$767",
                            "typeString": "contract OraclizeTest"
                          }
                        ],
                        "id": 331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3332:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 333,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3332:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "3332:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 330,
                  "id": 335,
                  "nodeType": "Return",
                  "src": "3325:28:0"
                }
              ]
            },
            "documentation": null,
            "id": 337,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "getBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 327,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3273:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 329,
                  "name": "_balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 337,
                  "src": "3300:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 328,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3300:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3299:15:0"
            },
            "scope": 767,
            "src": "3254:106:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 375,
              "nodeType": "Block",
              "src": "3410:547:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3493:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          }
                        ],
                        "id": 340,
                        "name": "oraclize_getPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          1192,
                          1210
                        ],
                        "referencedDeclaration": 1192,
                        "src": "3475:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) returns (uint256)"
                        }
                      },
                      "id": 342,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3475:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 344,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6623,
                            "src": "3510:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OraclizeTest_$767",
                              "typeString": "contract OraclizeTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OraclizeTest_$767",
                              "typeString": "contract OraclizeTest"
                            }
                          ],
                          "id": 343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3502:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3502:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 346,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3502:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3475:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 373,
                    "nodeType": "Block",
                    "src": "3651:300:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a6520455448207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                              "id": 354,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3678:59:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_92558dea68f12d65c4a2f4516135d351df59a49eeb3667f4729fc6b0d7b950f2",
                                "typeString": "literal_string \"Oraclize ETH query was sent, standing by for the answer..\""
                              },
                              "value": "Oraclize ETH query was sent, standing by for the answer.."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_92558dea68f12d65c4a2f4516135d351df59a49eeb3667f4729fc6b0d7b950f2",
                                "typeString": "literal_string \"Oraclize ETH query was sent, standing by for the answer..\""
                              }
                            ],
                            "id": 353,
                            "name": "LogInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "3670:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3670:68:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 356,
                        "nodeType": "EmitStatement",
                        "src": "3665:73:0"
                      },
                      {
                        "assignments": [
                          358
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 358,
                            "name": "queryId",
                            "nodeType": "VariableDeclaration",
                            "scope": 376,
                            "src": "3752:15:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 357,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "3752:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 363,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "55524c",
                              "id": 360,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3785:5:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              "value": "URL"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6a736f6e2868747470733a2f2f6170692e636f696e626173652e636f6d2f76322f7072696365732f4554482d5553442f73706f74292e646174612e616d6f756e74",
                              "id": 361,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3791:67:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1cb3d5ca41f100645c3363042b531a7bc4905d034354e722c749236677568a8d",
                                "typeString": "literal_string \"json(https://api.coinbase.com/v2/prices/ETH-USD/spot).data.amount\""
                              },
                              "value": "json(https://api.coinbase.com/v2/prices/ETH-USD/spot).data.amount"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1cb3d5ca41f100645c3363042b531a7bc4905d034354e722c749236677568a8d",
                                "typeString": "literal_string \"json(https://api.coinbase.com/v2/prices/ETH-USD/spot).data.amount\""
                              }
                            ],
                            "id": 359,
                            "name": "oraclize_query",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1250,
                              1292,
                              1338,
                              1382,
                              1425,
                              1470,
                              1519,
                              1566,
                              1613,
                              1662,
                              1715,
                              1766,
                              1803,
                              1843,
                              1886,
                              1926,
                              1971,
                              2019,
                              2070,
                              2118,
                              2171,
                              2227,
                              2286,
                              2342,
                              2403,
                              2467,
                              2534,
                              2598,
                              2667,
                              2739,
                              2814,
                              2886,
                              2933,
                              2982,
                              3035,
                              3086,
                              3123,
                              3163,
                              3206,
                              3246,
                              3291,
                              3339,
                              3390,
                              3438,
                              3491,
                              3547,
                              3606,
                              3662,
                              3723,
                              3787,
                              3854,
                              3918,
                              3987,
                              4059,
                              4134,
                              4206
                            ],
                            "referencedDeclaration": 1250,
                            "src": "3770:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (string memory,string memory) returns (bytes32)"
                            }
                          },
                          "id": 362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3770:89:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3752:107:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 364,
                              "name": "oraclizeCallbacks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79,
                              "src": "3873:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$75_storage_$",
                                "typeString": "mapping(bytes32 => struct OraclizeTest.oraclizeCallback storage ref)"
                              }
                            },
                            "id": 366,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 365,
                              "name": "queryId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 358,
                              "src": "3891:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3873:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$75_storage",
                              "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 368,
                                  "name": "oraclizeState",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 72,
                                  "src": "3919:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_oraclizeState_$72_$",
                                    "typeString": "type(enum OraclizeTest.oraclizeState)"
                                  }
                                },
                                "id": 369,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "ForEth",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "3919:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_oraclizeState_$72",
                                  "typeString": "enum OraclizeTest.oraclizeState"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_oraclizeState_$72",
                                  "typeString": "enum OraclizeTest.oraclizeState"
                                }
                              ],
                              "id": 367,
                              "name": "oraclizeCallback",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75,
                              "src": "3902:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_oraclizeCallback_$75_storage_ptr_$",
                                "typeString": "type(struct OraclizeTest.oraclizeCallback storage pointer)"
                              }
                            },
                            "id": 370,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3902:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$75_memory",
                              "typeString": "struct OraclizeTest.oraclizeCallback memory"
                            }
                          },
                          "src": "3873:67:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_oraclizeCallback_$75_storage",
                            "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                          }
                        },
                        "id": 372,
                        "nodeType": "ExpressionStatement",
                        "src": "3873:67:0"
                      }
                    ]
                  },
                  "id": 374,
                  "nodeType": "IfStatement",
                  "src": "3471:480:0",
                  "trueBody": {
                    "id": 352,
                    "nodeType": "Block",
                    "src": "3525:120:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a652045544820717565727920776173204e4f542073656e742c20706c656173652061646420736f6d652045544820746f20636f76657220666f722074686520717565727920666565",
                              "id": 349,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3552:81:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_86b4e52b9d7e6dbfbdb9744fcb31ec13df7de8e1138baadabd3c7def0014c40b",
                                "typeString": "literal_string \"Oraclize ETH query was NOT sent, please add some ETH to cover for the query fee\""
                              },
                              "value": "Oraclize ETH query was NOT sent, please add some ETH to cover for the query fee"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_86b4e52b9d7e6dbfbdb9744fcb31ec13df7de8e1138baadabd3c7def0014c40b",
                                "typeString": "literal_string \"Oraclize ETH query was NOT sent, please add some ETH to cover for the query fee\""
                              }
                            ],
                            "id": 348,
                            "name": "LogInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "3544:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3544:90:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 351,
                        "nodeType": "EmitStatement",
                        "src": "3539:95:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 376,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "updateEth",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 338,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3384:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 339,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3410:0:0"
            },
            "scope": 767,
            "src": "3366:591:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 414,
              "nodeType": "Block",
              "src": "4007:558:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4090:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          }
                        ],
                        "id": 379,
                        "name": "oraclize_getPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          1192,
                          1210
                        ],
                        "referencedDeclaration": 1192,
                        "src": "4072:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) returns (uint256)"
                        }
                      },
                      "id": 381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4072:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 383,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6623,
                            "src": "4107:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OraclizeTest_$767",
                              "typeString": "contract OraclizeTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OraclizeTest_$767",
                              "typeString": "contract OraclizeTest"
                            }
                          ],
                          "id": 382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4099:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4099:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 385,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4099:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4072:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 412,
                    "nodeType": "Block",
                    "src": "4248:311:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a6520454f53207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                              "id": 393,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4275:59:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3dd6bac8e6782f6a28d717bf03b7c1dca3915a82eb7d0562bd7f302520e80b9e",
                                "typeString": "literal_string \"Oraclize EOS query was sent, standing by for the answer..\""
                              },
                              "value": "Oraclize EOS query was sent, standing by for the answer.."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_3dd6bac8e6782f6a28d717bf03b7c1dca3915a82eb7d0562bd7f302520e80b9e",
                                "typeString": "literal_string \"Oraclize EOS query was sent, standing by for the answer..\""
                              }
                            ],
                            "id": 392,
                            "name": "LogInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "4267:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4267:68:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 395,
                        "nodeType": "EmitStatement",
                        "src": "4262:73:0"
                      },
                      {
                        "assignments": [
                          397
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 397,
                            "name": "queryId2",
                            "nodeType": "VariableDeclaration",
                            "scope": 415,
                            "src": "4349:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 396,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "4349:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 402,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "55524c",
                              "id": 399,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4383:5:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              "value": "URL"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6a736f6e2868747470733a2f2f6170692e636f696e6d61726b65746361702e636f6d2f76322f7469636b65722f313736352f292e646174612e71756f7465732e5553442e7072696365",
                              "id": 400,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4390:75:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2c5608835bf841bef10c3ef3104141a61345a8d47a72c0964bd1147744cf9883",
                                "typeString": "literal_string \"json(https://api.coinmarketcap.com/v2/ticker/1765/).data.quotes.USD.price\""
                              },
                              "value": "json(https://api.coinmarketcap.com/v2/ticker/1765/).data.quotes.USD.price"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2c5608835bf841bef10c3ef3104141a61345a8d47a72c0964bd1147744cf9883",
                                "typeString": "literal_string \"json(https://api.coinmarketcap.com/v2/ticker/1765/).data.quotes.USD.price\""
                              }
                            ],
                            "id": 398,
                            "name": "oraclize_query",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1250,
                              1292,
                              1338,
                              1382,
                              1425,
                              1470,
                              1519,
                              1566,
                              1613,
                              1662,
                              1715,
                              1766,
                              1803,
                              1843,
                              1886,
                              1926,
                              1971,
                              2019,
                              2070,
                              2118,
                              2171,
                              2227,
                              2286,
                              2342,
                              2403,
                              2467,
                              2534,
                              2598,
                              2667,
                              2739,
                              2814,
                              2886,
                              2933,
                              2982,
                              3035,
                              3086,
                              3123,
                              3163,
                              3206,
                              3246,
                              3291,
                              3339,
                              3390,
                              3438,
                              3491,
                              3547,
                              3606,
                              3662,
                              3723,
                              3787,
                              3854,
                              3918,
                              3987,
                              4059,
                              4134,
                              4206
                            ],
                            "referencedDeclaration": 1250,
                            "src": "4368:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (string memory,string memory) returns (bytes32)"
                            }
                          },
                          "id": 401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4368:98:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4349:117:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 403,
                              "name": "oraclizeCallbacks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79,
                              "src": "4480:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$75_storage_$",
                                "typeString": "mapping(bytes32 => struct OraclizeTest.oraclizeCallback storage ref)"
                              }
                            },
                            "id": 405,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 404,
                              "name": "queryId2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 397,
                              "src": "4498:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4480:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$75_storage",
                              "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 407,
                                  "name": "oraclizeState",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 72,
                                  "src": "4527:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_oraclizeState_$72_$",
                                    "typeString": "type(enum OraclizeTest.oraclizeState)"
                                  }
                                },
                                "id": 408,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "ForEos",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "4527:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_oraclizeState_$72",
                                  "typeString": "enum OraclizeTest.oraclizeState"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_oraclizeState_$72",
                                  "typeString": "enum OraclizeTest.oraclizeState"
                                }
                              ],
                              "id": 406,
                              "name": "oraclizeCallback",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75,
                              "src": "4510:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_oraclizeCallback_$75_storage_ptr_$",
                                "typeString": "type(struct OraclizeTest.oraclizeCallback storage pointer)"
                              }
                            },
                            "id": 409,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4510:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$75_memory",
                              "typeString": "struct OraclizeTest.oraclizeCallback memory"
                            }
                          },
                          "src": "4480:68:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_oraclizeCallback_$75_storage",
                            "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                          }
                        },
                        "id": 411,
                        "nodeType": "ExpressionStatement",
                        "src": "4480:68:0"
                      }
                    ]
                  },
                  "id": 413,
                  "nodeType": "IfStatement",
                  "src": "4068:491:0",
                  "trueBody": {
                    "id": 391,
                    "nodeType": "Block",
                    "src": "4122:120:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a6520454f5320717565727920776173204e4f542073656e742c20706c656173652061646420736f6d652045544820746f20636f76657220666f722074686520717565727920666565",
                              "id": 388,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4149:81:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ec3e5f7bbc3f01e04ca8b93b466ec6ba61bd107302e4a349f57eb76875ed9262",
                                "typeString": "literal_string \"Oraclize EOS query was NOT sent, please add some ETH to cover for the query fee\""
                              },
                              "value": "Oraclize EOS query was NOT sent, please add some ETH to cover for the query fee"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_ec3e5f7bbc3f01e04ca8b93b466ec6ba61bd107302e4a349f57eb76875ed9262",
                                "typeString": "literal_string \"Oraclize EOS query was NOT sent, please add some ETH to cover for the query fee\""
                              }
                            ],
                            "id": 387,
                            "name": "LogInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "4141:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4141:90:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 390,
                        "nodeType": "EmitStatement",
                        "src": "4136:95:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 415,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "updateEos",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 377,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3981:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 378,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4007:0:0"
            },
            "scope": 767,
            "src": "3963:602:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 453,
              "nodeType": "Block",
              "src": "4615:562:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4698:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          }
                        ],
                        "id": 418,
                        "name": "oraclize_getPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          1192,
                          1210
                        ],
                        "referencedDeclaration": 1192,
                        "src": "4680:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) returns (uint256)"
                        }
                      },
                      "id": 420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4680:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 422,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6623,
                            "src": "4715:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OraclizeTest_$767",
                              "typeString": "contract OraclizeTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OraclizeTest_$767",
                              "typeString": "contract OraclizeTest"
                            }
                          ],
                          "id": 421,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4707:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4707:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 424,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4707:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4680:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 451,
                    "nodeType": "Block",
                    "src": "4856:315:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a6520545258207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                              "id": 432,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4883:59:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bccd119587b99ab1ec8cf0905db878c7bab73f59d99addce7d4d02d4b7744a87",
                                "typeString": "literal_string \"Oraclize TRX query was sent, standing by for the answer..\""
                              },
                              "value": "Oraclize TRX query was sent, standing by for the answer.."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_bccd119587b99ab1ec8cf0905db878c7bab73f59d99addce7d4d02d4b7744a87",
                                "typeString": "literal_string \"Oraclize TRX query was sent, standing by for the answer..\""
                              }
                            ],
                            "id": 431,
                            "name": "LogInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "4875:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4875:68:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 434,
                        "nodeType": "EmitStatement",
                        "src": "4870:73:0"
                      },
                      {
                        "assignments": [
                          436
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 436,
                            "name": "queryId3",
                            "nodeType": "VariableDeclaration",
                            "scope": 454,
                            "src": "4957:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 435,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "4957:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 441,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "55524c",
                              "id": 438,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4991:5:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              "value": "URL"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6a736f6e2868747470733a2f2f6170692e636f696e6d61726b65746361702e636f6d2f76322f7469636b65722f313935382f292e646174612e71756f7465732e5553442e7072696365",
                              "id": 439,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4998:75:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d7fc1e72ed93ab9d088cf1f956f7a3e1a239f8ecbd4f79e10f1d53bb69b10624",
                                "typeString": "literal_string \"json(https://api.coinmarketcap.com/v2/ticker/1958/).data.quotes.USD.price\""
                              },
                              "value": "json(https://api.coinmarketcap.com/v2/ticker/1958/).data.quotes.USD.price"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d7fc1e72ed93ab9d088cf1f956f7a3e1a239f8ecbd4f79e10f1d53bb69b10624",
                                "typeString": "literal_string \"json(https://api.coinmarketcap.com/v2/ticker/1958/).data.quotes.USD.price\""
                              }
                            ],
                            "id": 437,
                            "name": "oraclize_query",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1250,
                              1292,
                              1338,
                              1382,
                              1425,
                              1470,
                              1519,
                              1566,
                              1613,
                              1662,
                              1715,
                              1766,
                              1803,
                              1843,
                              1886,
                              1926,
                              1971,
                              2019,
                              2070,
                              2118,
                              2171,
                              2227,
                              2286,
                              2342,
                              2403,
                              2467,
                              2534,
                              2598,
                              2667,
                              2739,
                              2814,
                              2886,
                              2933,
                              2982,
                              3035,
                              3086,
                              3123,
                              3163,
                              3206,
                              3246,
                              3291,
                              3339,
                              3390,
                              3438,
                              3491,
                              3547,
                              3606,
                              3662,
                              3723,
                              3787,
                              3854,
                              3918,
                              3987,
                              4059,
                              4134,
                              4206
                            ],
                            "referencedDeclaration": 1250,
                            "src": "4976:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (string memory,string memory) returns (bytes32)"
                            }
                          },
                          "id": 440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4976:98:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4957:117:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 442,
                              "name": "oraclizeCallbacks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79,
                              "src": "5088:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$75_storage_$",
                                "typeString": "mapping(bytes32 => struct OraclizeTest.oraclizeCallback storage ref)"
                              }
                            },
                            "id": 444,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 443,
                              "name": "queryId3",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 436,
                              "src": "5106:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5088:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$75_storage",
                              "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 446,
                                  "name": "oraclizeState",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 72,
                                  "src": "5135:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_oraclizeState_$72_$",
                                    "typeString": "type(enum OraclizeTest.oraclizeState)"
                                  }
                                },
                                "id": 447,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "ForTrx",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "5135:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_oraclizeState_$72",
                                  "typeString": "enum OraclizeTest.oraclizeState"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_oraclizeState_$72",
                                  "typeString": "enum OraclizeTest.oraclizeState"
                                }
                              ],
                              "id": 445,
                              "name": "oraclizeCallback",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75,
                              "src": "5118:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_oraclizeCallback_$75_storage_ptr_$",
                                "typeString": "type(struct OraclizeTest.oraclizeCallback storage pointer)"
                              }
                            },
                            "id": 448,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5118:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$75_memory",
                              "typeString": "struct OraclizeTest.oraclizeCallback memory"
                            }
                          },
                          "src": "5088:68:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_oraclizeCallback_$75_storage",
                            "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                          }
                        },
                        "id": 450,
                        "nodeType": "ExpressionStatement",
                        "src": "5088:68:0"
                      }
                    ]
                  },
                  "id": 452,
                  "nodeType": "IfStatement",
                  "src": "4676:495:0",
                  "trueBody": {
                    "id": 430,
                    "nodeType": "Block",
                    "src": "4730:120:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a652054525820717565727920776173204e4f542073656e742c20706c656173652061646420736f6d652045544820746f20636f76657220666f722074686520717565727920666565",
                              "id": 427,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4757:81:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_eb72ab145aea5b69675325a250bbcc0de0742e2b3031e2363ee174e51256e70e",
                                "typeString": "literal_string \"Oraclize TRX query was NOT sent, please add some ETH to cover for the query fee\""
                              },
                              "value": "Oraclize TRX query was NOT sent, please add some ETH to cover for the query fee"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_eb72ab145aea5b69675325a250bbcc0de0742e2b3031e2363ee174e51256e70e",
                                "typeString": "literal_string \"Oraclize TRX query was NOT sent, please add some ETH to cover for the query fee\""
                              }
                            ],
                            "id": 426,
                            "name": "LogInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "4749:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4749:90:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 429,
                        "nodeType": "EmitStatement",
                        "src": "4744:95:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 454,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "updateTrx",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4589:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 417,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4615:0:0"
            },
            "scope": 767,
            "src": "4571:606:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 492,
              "nodeType": "Block",
              "src": "5227:562:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5310:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          }
                        ],
                        "id": 457,
                        "name": "oraclize_getPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          1192,
                          1210
                        ],
                        "referencedDeclaration": 1192,
                        "src": "5292:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) returns (uint256)"
                        }
                      },
                      "id": 459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5292:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 461,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6623,
                            "src": "5327:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OraclizeTest_$767",
                              "typeString": "contract OraclizeTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OraclizeTest_$767",
                              "typeString": "contract OraclizeTest"
                            }
                          ],
                          "id": 460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5319:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5319:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 463,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5319:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5292:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 490,
                    "nodeType": "Block",
                    "src": "5468:315:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a652056454e207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                              "id": 471,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5495:59:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9f4428b2255d0f322d2ba9479f801b542002c77ff76280b5167d4e28598da385",
                                "typeString": "literal_string \"Oraclize VEN query was sent, standing by for the answer..\""
                              },
                              "value": "Oraclize VEN query was sent, standing by for the answer.."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_9f4428b2255d0f322d2ba9479f801b542002c77ff76280b5167d4e28598da385",
                                "typeString": "literal_string \"Oraclize VEN query was sent, standing by for the answer..\""
                              }
                            ],
                            "id": 470,
                            "name": "LogInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "5487:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5487:68:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 473,
                        "nodeType": "EmitStatement",
                        "src": "5482:73:0"
                      },
                      {
                        "assignments": [
                          475
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 475,
                            "name": "queryId4",
                            "nodeType": "VariableDeclaration",
                            "scope": 493,
                            "src": "5569:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 474,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "5569:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 480,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "55524c",
                              "id": 477,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5603:5:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              "value": "URL"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6a736f6e2868747470733a2f2f6170692e636f696e6d61726b65746361702e636f6d2f76322f7469636b65722f313930342f292e646174612e71756f7465732e5553442e7072696365",
                              "id": 478,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5610:75:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d9115cb06e803ddfbeb3997ac47b403dc16e6220c0019a65af7844e71db8f9e5",
                                "typeString": "literal_string \"json(https://api.coinmarketcap.com/v2/ticker/1904/).data.quotes.USD.price\""
                              },
                              "value": "json(https://api.coinmarketcap.com/v2/ticker/1904/).data.quotes.USD.price"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d9115cb06e803ddfbeb3997ac47b403dc16e6220c0019a65af7844e71db8f9e5",
                                "typeString": "literal_string \"json(https://api.coinmarketcap.com/v2/ticker/1904/).data.quotes.USD.price\""
                              }
                            ],
                            "id": 476,
                            "name": "oraclize_query",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1250,
                              1292,
                              1338,
                              1382,
                              1425,
                              1470,
                              1519,
                              1566,
                              1613,
                              1662,
                              1715,
                              1766,
                              1803,
                              1843,
                              1886,
                              1926,
                              1971,
                              2019,
                              2070,
                              2118,
                              2171,
                              2227,
                              2286,
                              2342,
                              2403,
                              2467,
                              2534,
                              2598,
                              2667,
                              2739,
                              2814,
                              2886,
                              2933,
                              2982,
                              3035,
                              3086,
                              3123,
                              3163,
                              3206,
                              3246,
                              3291,
                              3339,
                              3390,
                              3438,
                              3491,
                              3547,
                              3606,
                              3662,
                              3723,
                              3787,
                              3854,
                              3918,
                              3987,
                              4059,
                              4134,
                              4206
                            ],
                            "referencedDeclaration": 1250,
                            "src": "5588:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (string memory,string memory) returns (bytes32)"
                            }
                          },
                          "id": 479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5588:98:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5569:117:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 481,
                              "name": "oraclizeCallbacks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79,
                              "src": "5700:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$75_storage_$",
                                "typeString": "mapping(bytes32 => struct OraclizeTest.oraclizeCallback storage ref)"
                              }
                            },
                            "id": 483,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 482,
                              "name": "queryId4",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 475,
                              "src": "5718:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5700:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$75_storage",
                              "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 485,
                                  "name": "oraclizeState",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 72,
                                  "src": "5747:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_oraclizeState_$72_$",
                                    "typeString": "type(enum OraclizeTest.oraclizeState)"
                                  }
                                },
                                "id": 486,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "ForVen",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "5747:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_oraclizeState_$72",
                                  "typeString": "enum OraclizeTest.oraclizeState"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_oraclizeState_$72",
                                  "typeString": "enum OraclizeTest.oraclizeState"
                                }
                              ],
                              "id": 484,
                              "name": "oraclizeCallback",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75,
                              "src": "5730:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_oraclizeCallback_$75_storage_ptr_$",
                                "typeString": "type(struct OraclizeTest.oraclizeCallback storage pointer)"
                              }
                            },
                            "id": 487,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5730:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$75_memory",
                              "typeString": "struct OraclizeTest.oraclizeCallback memory"
                            }
                          },
                          "src": "5700:68:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_oraclizeCallback_$75_storage",
                            "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                          }
                        },
                        "id": 489,
                        "nodeType": "ExpressionStatement",
                        "src": "5700:68:0"
                      }
                    ]
                  },
                  "id": 491,
                  "nodeType": "IfStatement",
                  "src": "5288:495:0",
                  "trueBody": {
                    "id": 469,
                    "nodeType": "Block",
                    "src": "5342:120:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a652056454e20717565727920776173204e4f542073656e742c20706c656173652061646420736f6d652045544820746f20636f76657220666f722074686520717565727920666565",
                              "id": 466,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5369:81:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4f476254ce02f3482cf6df53fe30b2ce6d34d3be3c2f96a1778409a475d9fb53",
                                "typeString": "literal_string \"Oraclize VEN query was NOT sent, please add some ETH to cover for the query fee\""
                              },
                              "value": "Oraclize VEN query was NOT sent, please add some ETH to cover for the query fee"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_4f476254ce02f3482cf6df53fe30b2ce6d34d3be3c2f96a1778409a475d9fb53",
                                "typeString": "literal_string \"Oraclize VEN query was NOT sent, please add some ETH to cover for the query fee\""
                              }
                            ],
                            "id": 465,
                            "name": "LogInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "5361:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5361:90:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 468,
                        "nodeType": "EmitStatement",
                        "src": "5356:95:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 493,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "updateVen",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 455,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5201:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 456,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5227:0:0"
            },
            "scope": 767,
            "src": "5183:606:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 531,
              "nodeType": "Block",
              "src": "5839:562:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5922:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          }
                        ],
                        "id": 496,
                        "name": "oraclize_getPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          1192,
                          1210
                        ],
                        "referencedDeclaration": 1192,
                        "src": "5904:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) returns (uint256)"
                        }
                      },
                      "id": 498,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5904:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 500,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6623,
                            "src": "5939:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OraclizeTest_$767",
                              "typeString": "contract OraclizeTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OraclizeTest_$767",
                              "typeString": "contract OraclizeTest"
                            }
                          ],
                          "id": 499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5931:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 501,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5931:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5931:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5904:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 529,
                    "nodeType": "Block",
                    "src": "6080:315:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a6520494358207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                              "id": 510,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6107:59:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e38b2ff65418f5d1601376ee00bede6ddff4caa2987e0165bd3873dc04150d82",
                                "typeString": "literal_string \"Oraclize ICX query was sent, standing by for the answer..\""
                              },
                              "value": "Oraclize ICX query was sent, standing by for the answer.."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_e38b2ff65418f5d1601376ee00bede6ddff4caa2987e0165bd3873dc04150d82",
                                "typeString": "literal_string \"Oraclize ICX query was sent, standing by for the answer..\""
                              }
                            ],
                            "id": 509,
                            "name": "LogInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "6099:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6099:68:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 512,
                        "nodeType": "EmitStatement",
                        "src": "6094:73:0"
                      },
                      {
                        "assignments": [
                          514
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 514,
                            "name": "queryId5",
                            "nodeType": "VariableDeclaration",
                            "scope": 532,
                            "src": "6181:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 513,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "6181:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 519,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "55524c",
                              "id": 516,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6215:5:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              "value": "URL"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6a736f6e2868747470733a2f2f6170692e636f696e6d61726b65746361702e636f6d2f76322f7469636b65722f323039392f292e646174612e71756f7465732e5553442e7072696365",
                              "id": 517,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6222:75:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e7c0e04370c91c62f116817729e9896d67b973bb3607da3bb06901f4069aed4f",
                                "typeString": "literal_string \"json(https://api.coinmarketcap.com/v2/ticker/2099/).data.quotes.USD.price\""
                              },
                              "value": "json(https://api.coinmarketcap.com/v2/ticker/2099/).data.quotes.USD.price"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e7c0e04370c91c62f116817729e9896d67b973bb3607da3bb06901f4069aed4f",
                                "typeString": "literal_string \"json(https://api.coinmarketcap.com/v2/ticker/2099/).data.quotes.USD.price\""
                              }
                            ],
                            "id": 515,
                            "name": "oraclize_query",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1250,
                              1292,
                              1338,
                              1382,
                              1425,
                              1470,
                              1519,
                              1566,
                              1613,
                              1662,
                              1715,
                              1766,
                              1803,
                              1843,
                              1886,
                              1926,
                              1971,
                              2019,
                              2070,
                              2118,
                              2171,
                              2227,
                              2286,
                              2342,
                              2403,
                              2467,
                              2534,
                              2598,
                              2667,
                              2739,
                              2814,
                              2886,
                              2933,
                              2982,
                              3035,
                              3086,
                              3123,
                              3163,
                              3206,
                              3246,
                              3291,
                              3339,
                              3390,
                              3438,
                              3491,
                              3547,
                              3606,
                              3662,
                              3723,
                              3787,
                              3854,
                              3918,
                              3987,
                              4059,
                              4134,
                              4206
                            ],
                            "referencedDeclaration": 1250,
                            "src": "6200:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (string memory,string memory) returns (bytes32)"
                            }
                          },
                          "id": 518,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6200:98:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6181:117:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 520,
                              "name": "oraclizeCallbacks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79,
                              "src": "6312:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$75_storage_$",
                                "typeString": "mapping(bytes32 => struct OraclizeTest.oraclizeCallback storage ref)"
                              }
                            },
                            "id": 522,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 521,
                              "name": "queryId5",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 514,
                              "src": "6330:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6312:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$75_storage",
                              "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 524,
                                  "name": "oraclizeState",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 72,
                                  "src": "6359:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_oraclizeState_$72_$",
                                    "typeString": "type(enum OraclizeTest.oraclizeState)"
                                  }
                                },
                                "id": 525,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "ForIcx",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "6359:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_oraclizeState_$72",
                                  "typeString": "enum OraclizeTest.oraclizeState"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_oraclizeState_$72",
                                  "typeString": "enum OraclizeTest.oraclizeState"
                                }
                              ],
                              "id": 523,
                              "name": "oraclizeCallback",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75,
                              "src": "6342:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_oraclizeCallback_$75_storage_ptr_$",
                                "typeString": "type(struct OraclizeTest.oraclizeCallback storage pointer)"
                              }
                            },
                            "id": 526,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6342:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$75_memory",
                              "typeString": "struct OraclizeTest.oraclizeCallback memory"
                            }
                          },
                          "src": "6312:68:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_oraclizeCallback_$75_storage",
                            "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                          }
                        },
                        "id": 528,
                        "nodeType": "ExpressionStatement",
                        "src": "6312:68:0"
                      }
                    ]
                  },
                  "id": 530,
                  "nodeType": "IfStatement",
                  "src": "5900:495:0",
                  "trueBody": {
                    "id": 508,
                    "nodeType": "Block",
                    "src": "5954:120:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a652049435820717565727920776173204e4f542073656e742c20706c656173652061646420736f6d652045544820746f20636f76657220666f722074686520717565727920666565",
                              "id": 505,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5981:81:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4d7127acd5ef6f553563066426a01baa1192ef257aac9f27e9448ffc8dce3b78",
                                "typeString": "literal_string \"Oraclize ICX query was NOT sent, please add some ETH to cover for the query fee\""
                              },
                              "value": "Oraclize ICX query was NOT sent, please add some ETH to cover for the query fee"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_4d7127acd5ef6f553563066426a01baa1192ef257aac9f27e9448ffc8dce3b78",
                                "typeString": "literal_string \"Oraclize ICX query was NOT sent, please add some ETH to cover for the query fee\""
                              }
                            ],
                            "id": 504,
                            "name": "LogInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "5973:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5973:90:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 507,
                        "nodeType": "EmitStatement",
                        "src": "5968:95:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 532,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "updateIcx",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 494,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5813:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 495,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5839:0:0"
            },
            "scope": 767,
            "src": "5795:606:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 570,
              "nodeType": "Block",
              "src": "6455:562:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6538:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          }
                        ],
                        "id": 535,
                        "name": "oraclize_getPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          1192,
                          1210
                        ],
                        "referencedDeclaration": 1192,
                        "src": "6520:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) returns (uint256)"
                        }
                      },
                      "id": 537,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6520:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 539,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6623,
                            "src": "6555:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OraclizeTest_$767",
                              "typeString": "contract OraclizeTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OraclizeTest_$767",
                              "typeString": "contract OraclizeTest"
                            }
                          ],
                          "id": 538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6547:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6547:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6547:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6520:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 568,
                    "nodeType": "Block",
                    "src": "6696:315:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a6520424e42207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                              "id": 549,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6723:59:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_81354db14f90b029a7f0aeb367a982cbe716f21a377c842d28fe68b35e0191b2",
                                "typeString": "literal_string \"Oraclize BNB query was sent, standing by for the answer..\""
                              },
                              "value": "Oraclize BNB query was sent, standing by for the answer.."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_81354db14f90b029a7f0aeb367a982cbe716f21a377c842d28fe68b35e0191b2",
                                "typeString": "literal_string \"Oraclize BNB query was sent, standing by for the answer..\""
                              }
                            ],
                            "id": 548,
                            "name": "LogInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "6715:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6715:68:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 551,
                        "nodeType": "EmitStatement",
                        "src": "6710:73:0"
                      },
                      {
                        "assignments": [
                          553
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 553,
                            "name": "queryId6",
                            "nodeType": "VariableDeclaration",
                            "scope": 571,
                            "src": "6797:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 552,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "6797:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 558,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "55524c",
                              "id": 555,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6831:5:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              "value": "URL"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6a736f6e2868747470733a2f2f6170692e636f696e6d61726b65746361702e636f6d2f76322f7469636b65722f313833392f292e646174612e71756f7465732e5553442e7072696365",
                              "id": 556,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6838:75:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_adf2eb92c2f517ca913dda2d6321e42778941408fefc2f4b5ca9259e7eda31a9",
                                "typeString": "literal_string \"json(https://api.coinmarketcap.com/v2/ticker/1839/).data.quotes.USD.price\""
                              },
                              "value": "json(https://api.coinmarketcap.com/v2/ticker/1839/).data.quotes.USD.price"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_adf2eb92c2f517ca913dda2d6321e42778941408fefc2f4b5ca9259e7eda31a9",
                                "typeString": "literal_string \"json(https://api.coinmarketcap.com/v2/ticker/1839/).data.quotes.USD.price\""
                              }
                            ],
                            "id": 554,
                            "name": "oraclize_query",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1250,
                              1292,
                              1338,
                              1382,
                              1425,
                              1470,
                              1519,
                              1566,
                              1613,
                              1662,
                              1715,
                              1766,
                              1803,
                              1843,
                              1886,
                              1926,
                              1971,
                              2019,
                              2070,
                              2118,
                              2171,
                              2227,
                              2286,
                              2342,
                              2403,
                              2467,
                              2534,
                              2598,
                              2667,
                              2739,
                              2814,
                              2886,
                              2933,
                              2982,
                              3035,
                              3086,
                              3123,
                              3163,
                              3206,
                              3246,
                              3291,
                              3339,
                              3390,
                              3438,
                              3491,
                              3547,
                              3606,
                              3662,
                              3723,
                              3787,
                              3854,
                              3918,
                              3987,
                              4059,
                              4134,
                              4206
                            ],
                            "referencedDeclaration": 1250,
                            "src": "6816:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (string memory,string memory) returns (bytes32)"
                            }
                          },
                          "id": 557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6816:98:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6797:117:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 559,
                              "name": "oraclizeCallbacks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79,
                              "src": "6928:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$75_storage_$",
                                "typeString": "mapping(bytes32 => struct OraclizeTest.oraclizeCallback storage ref)"
                              }
                            },
                            "id": 561,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 560,
                              "name": "queryId6",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 553,
                              "src": "6946:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6928:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$75_storage",
                              "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 563,
                                  "name": "oraclizeState",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 72,
                                  "src": "6975:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_oraclizeState_$72_$",
                                    "typeString": "type(enum OraclizeTest.oraclizeState)"
                                  }
                                },
                                "id": 564,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "ForBnb",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "6975:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_oraclizeState_$72",
                                  "typeString": "enum OraclizeTest.oraclizeState"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_oraclizeState_$72",
                                  "typeString": "enum OraclizeTest.oraclizeState"
                                }
                              ],
                              "id": 562,
                              "name": "oraclizeCallback",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75,
                              "src": "6958:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_oraclizeCallback_$75_storage_ptr_$",
                                "typeString": "type(struct OraclizeTest.oraclizeCallback storage pointer)"
                              }
                            },
                            "id": 565,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6958:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$75_memory",
                              "typeString": "struct OraclizeTest.oraclizeCallback memory"
                            }
                          },
                          "src": "6928:68:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_oraclizeCallback_$75_storage",
                            "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                          }
                        },
                        "id": 567,
                        "nodeType": "ExpressionStatement",
                        "src": "6928:68:0"
                      }
                    ]
                  },
                  "id": 569,
                  "nodeType": "IfStatement",
                  "src": "6516:495:0",
                  "trueBody": {
                    "id": 547,
                    "nodeType": "Block",
                    "src": "6570:120:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a6520424e4220717565727920776173204e4f542073656e742c20706c656173652061646420736f6d652045544820746f20636f76657220666f722074686520717565727920666565",
                              "id": 544,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6597:81:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a44b50fa8a4d52089346fcd13bf6e08b4acce6183f9ed43eb1060fc3bfcb679e",
                                "typeString": "literal_string \"Oraclize BNB query was NOT sent, please add some ETH to cover for the query fee\""
                              },
                              "value": "Oraclize BNB query was NOT sent, please add some ETH to cover for the query fee"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_a44b50fa8a4d52089346fcd13bf6e08b4acce6183f9ed43eb1060fc3bfcb679e",
                                "typeString": "literal_string \"Oraclize BNB query was NOT sent, please add some ETH to cover for the query fee\""
                              }
                            ],
                            "id": 543,
                            "name": "LogInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "6589:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6589:90:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 546,
                        "nodeType": "EmitStatement",
                        "src": "6584:95:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 571,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "updateBnb",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 533,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6429:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 534,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6455:0:0"
            },
            "scope": 767,
            "src": "6411:606:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 609,
              "nodeType": "Block",
              "src": "7067:562:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 575,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7150:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          }
                        ],
                        "id": 574,
                        "name": "oraclize_getPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          1192,
                          1210
                        ],
                        "referencedDeclaration": 1192,
                        "src": "7132:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) returns (uint256)"
                        }
                      },
                      "id": 576,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7132:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 578,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6623,
                            "src": "7167:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OraclizeTest_$767",
                              "typeString": "contract OraclizeTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OraclizeTest_$767",
                              "typeString": "contract OraclizeTest"
                            }
                          ],
                          "id": 577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7159:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7159:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "7159:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7132:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 607,
                    "nodeType": "Block",
                    "src": "7308:315:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a65204f4d47207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                              "id": 588,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7335:59:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4db8cb8c768881ffff1204580482d750d1a35929cc81ddf6a61531d50d234f86",
                                "typeString": "literal_string \"Oraclize OMG query was sent, standing by for the answer..\""
                              },
                              "value": "Oraclize OMG query was sent, standing by for the answer.."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_4db8cb8c768881ffff1204580482d750d1a35929cc81ddf6a61531d50d234f86",
                                "typeString": "literal_string \"Oraclize OMG query was sent, standing by for the answer..\""
                              }
                            ],
                            "id": 587,
                            "name": "LogInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "7327:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7327:68:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 590,
                        "nodeType": "EmitStatement",
                        "src": "7322:73:0"
                      },
                      {
                        "assignments": [
                          592
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 592,
                            "name": "queryId7",
                            "nodeType": "VariableDeclaration",
                            "scope": 610,
                            "src": "7409:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 591,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "7409:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 597,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "55524c",
                              "id": 594,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7443:5:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              "value": "URL"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6a736f6e2868747470733a2f2f6170692e636f696e6d61726b65746361702e636f6d2f76322f7469636b65722f313830382f292e646174612e71756f7465732e5553442e7072696365",
                              "id": 595,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7450:75:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_93aade1d58b48f634f818540099fbcfbb8cfe5157cab9b693d7c0ecaaa1e0d35",
                                "typeString": "literal_string \"json(https://api.coinmarketcap.com/v2/ticker/1808/).data.quotes.USD.price\""
                              },
                              "value": "json(https://api.coinmarketcap.com/v2/ticker/1808/).data.quotes.USD.price"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_93aade1d58b48f634f818540099fbcfbb8cfe5157cab9b693d7c0ecaaa1e0d35",
                                "typeString": "literal_string \"json(https://api.coinmarketcap.com/v2/ticker/1808/).data.quotes.USD.price\""
                              }
                            ],
                            "id": 593,
                            "name": "oraclize_query",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1250,
                              1292,
                              1338,
                              1382,
                              1425,
                              1470,
                              1519,
                              1566,
                              1613,
                              1662,
                              1715,
                              1766,
                              1803,
                              1843,
                              1886,
                              1926,
                              1971,
                              2019,
                              2070,
                              2118,
                              2171,
                              2227,
                              2286,
                              2342,
                              2403,
                              2467,
                              2534,
                              2598,
                              2667,
                              2739,
                              2814,
                              2886,
                              2933,
                              2982,
                              3035,
                              3086,
                              3123,
                              3163,
                              3206,
                              3246,
                              3291,
                              3339,
                              3390,
                              3438,
                              3491,
                              3547,
                              3606,
                              3662,
                              3723,
                              3787,
                              3854,
                              3918,
                              3987,
                              4059,
                              4134,
                              4206
                            ],
                            "referencedDeclaration": 1250,
                            "src": "7428:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (string memory,string memory) returns (bytes32)"
                            }
                          },
                          "id": 596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7428:98:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7409:117:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 598,
                              "name": "oraclizeCallbacks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79,
                              "src": "7540:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$75_storage_$",
                                "typeString": "mapping(bytes32 => struct OraclizeTest.oraclizeCallback storage ref)"
                              }
                            },
                            "id": 600,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 599,
                              "name": "queryId7",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 592,
                              "src": "7558:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7540:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$75_storage",
                              "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 602,
                                  "name": "oraclizeState",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 72,
                                  "src": "7587:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_oraclizeState_$72_$",
                                    "typeString": "type(enum OraclizeTest.oraclizeState)"
                                  }
                                },
                                "id": 603,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "ForOmg",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "7587:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_oraclizeState_$72",
                                  "typeString": "enum OraclizeTest.oraclizeState"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_oraclizeState_$72",
                                  "typeString": "enum OraclizeTest.oraclizeState"
                                }
                              ],
                              "id": 601,
                              "name": "oraclizeCallback",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75,
                              "src": "7570:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_oraclizeCallback_$75_storage_ptr_$",
                                "typeString": "type(struct OraclizeTest.oraclizeCallback storage pointer)"
                              }
                            },
                            "id": 604,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7570:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$75_memory",
                              "typeString": "struct OraclizeTest.oraclizeCallback memory"
                            }
                          },
                          "src": "7540:68:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_oraclizeCallback_$75_storage",
                            "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                          }
                        },
                        "id": 606,
                        "nodeType": "ExpressionStatement",
                        "src": "7540:68:0"
                      }
                    ]
                  },
                  "id": 608,
                  "nodeType": "IfStatement",
                  "src": "7128:495:0",
                  "trueBody": {
                    "id": 586,
                    "nodeType": "Block",
                    "src": "7182:120:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a65204f4d4720717565727920776173204e4f542073656e742c20706c656173652061646420736f6d652045544820746f20636f76657220666f722074686520717565727920666565",
                              "id": 583,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7209:81:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6f3ac9e8b2cf465825c721d7aa1e1cb17dd31c704661e81e1398848c3f82a607",
                                "typeString": "literal_string \"Oraclize OMG query was NOT sent, please add some ETH to cover for the query fee\""
                              },
                              "value": "Oraclize OMG query was NOT sent, please add some ETH to cover for the query fee"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_6f3ac9e8b2cf465825c721d7aa1e1cb17dd31c704661e81e1398848c3f82a607",
                                "typeString": "literal_string \"Oraclize OMG query was NOT sent, please add some ETH to cover for the query fee\""
                              }
                            ],
                            "id": 582,
                            "name": "LogInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "7201:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7201:90:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 585,
                        "nodeType": "EmitStatement",
                        "src": "7196:95:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 610,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "updateOmg",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 572,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7041:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 573,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7067:0:0"
            },
            "scope": 767,
            "src": "7023:606:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 648,
              "nodeType": "Block",
              "src": "7679:562:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7762:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          }
                        ],
                        "id": 613,
                        "name": "oraclize_getPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          1192,
                          1210
                        ],
                        "referencedDeclaration": 1192,
                        "src": "7744:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) returns (uint256)"
                        }
                      },
                      "id": 615,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7744:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 617,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6623,
                            "src": "7779:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OraclizeTest_$767",
                              "typeString": "contract OraclizeTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OraclizeTest_$767",
                              "typeString": "contract OraclizeTest"
                            }
                          ],
                          "id": 616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7771:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7771:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 619,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "7771:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7744:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 646,
                    "nodeType": "Block",
                    "src": "7920:315:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a65205a494c207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                              "id": 627,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7947:59:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_99fc1cdfabdd16181f17689c76bfc67bc9c8271f8879cf29eafeeb05c052860f",
                                "typeString": "literal_string \"Oraclize ZIL query was sent, standing by for the answer..\""
                              },
                              "value": "Oraclize ZIL query was sent, standing by for the answer.."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_99fc1cdfabdd16181f17689c76bfc67bc9c8271f8879cf29eafeeb05c052860f",
                                "typeString": "literal_string \"Oraclize ZIL query was sent, standing by for the answer..\""
                              }
                            ],
                            "id": 626,
                            "name": "LogInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "7939:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 628,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7939:68:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 629,
                        "nodeType": "EmitStatement",
                        "src": "7934:73:0"
                      },
                      {
                        "assignments": [
                          631
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 631,
                            "name": "queryId8",
                            "nodeType": "VariableDeclaration",
                            "scope": 649,
                            "src": "8021:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 630,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "8021:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 636,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "55524c",
                              "id": 633,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8055:5:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              "value": "URL"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6a736f6e2868747470733a2f2f6170692e636f696e6d61726b65746361702e636f6d2f76322f7469636b65722f323436392f292e646174612e71756f7465732e5553442e7072696365",
                              "id": 634,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8062:75:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c84fb03807fde0e21892584203ef258f4c79a244de5d4f88e9f4e095e4cd87e6",
                                "typeString": "literal_string \"json(https://api.coinmarketcap.com/v2/ticker/2469/).data.quotes.USD.price\""
                              },
                              "value": "json(https://api.coinmarketcap.com/v2/ticker/2469/).data.quotes.USD.price"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c84fb03807fde0e21892584203ef258f4c79a244de5d4f88e9f4e095e4cd87e6",
                                "typeString": "literal_string \"json(https://api.coinmarketcap.com/v2/ticker/2469/).data.quotes.USD.price\""
                              }
                            ],
                            "id": 632,
                            "name": "oraclize_query",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1250,
                              1292,
                              1338,
                              1382,
                              1425,
                              1470,
                              1519,
                              1566,
                              1613,
                              1662,
                              1715,
                              1766,
                              1803,
                              1843,
                              1886,
                              1926,
                              1971,
                              2019,
                              2070,
                              2118,
                              2171,
                              2227,
                              2286,
                              2342,
                              2403,
                              2467,
                              2534,
                              2598,
                              2667,
                              2739,
                              2814,
                              2886,
                              2933,
                              2982,
                              3035,
                              3086,
                              3123,
                              3163,
                              3206,
                              3246,
                              3291,
                              3339,
                              3390,
                              3438,
                              3491,
                              3547,
                              3606,
                              3662,
                              3723,
                              3787,
                              3854,
                              3918,
                              3987,
                              4059,
                              4134,
                              4206
                            ],
                            "referencedDeclaration": 1250,
                            "src": "8040:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (string memory,string memory) returns (bytes32)"
                            }
                          },
                          "id": 635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8040:98:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8021:117:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 637,
                              "name": "oraclizeCallbacks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79,
                              "src": "8152:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$75_storage_$",
                                "typeString": "mapping(bytes32 => struct OraclizeTest.oraclizeCallback storage ref)"
                              }
                            },
                            "id": 639,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 638,
                              "name": "queryId8",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 631,
                              "src": "8170:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8152:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$75_storage",
                              "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 641,
                                  "name": "oraclizeState",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 72,
                                  "src": "8199:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_oraclizeState_$72_$",
                                    "typeString": "type(enum OraclizeTest.oraclizeState)"
                                  }
                                },
                                "id": 642,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "ForZil",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "8199:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_oraclizeState_$72",
                                  "typeString": "enum OraclizeTest.oraclizeState"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_oraclizeState_$72",
                                  "typeString": "enum OraclizeTest.oraclizeState"
                                }
                              ],
                              "id": 640,
                              "name": "oraclizeCallback",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75,
                              "src": "8182:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_oraclizeCallback_$75_storage_ptr_$",
                                "typeString": "type(struct OraclizeTest.oraclizeCallback storage pointer)"
                              }
                            },
                            "id": 643,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8182:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$75_memory",
                              "typeString": "struct OraclizeTest.oraclizeCallback memory"
                            }
                          },
                          "src": "8152:68:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_oraclizeCallback_$75_storage",
                            "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                          }
                        },
                        "id": 645,
                        "nodeType": "ExpressionStatement",
                        "src": "8152:68:0"
                      }
                    ]
                  },
                  "id": 647,
                  "nodeType": "IfStatement",
                  "src": "7740:495:0",
                  "trueBody": {
                    "id": 625,
                    "nodeType": "Block",
                    "src": "7794:120:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a65205a494c20717565727920776173204e4f542073656e742c20706c656173652061646420736f6d652045544820746f20636f76657220666f722074686520717565727920666565",
                              "id": 622,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7821:81:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_249e059a5bb341fbfbaa6af0b08fcf0f27a370bb3fd96e5be9f4933ccc2551ef",
                                "typeString": "literal_string \"Oraclize ZIL query was NOT sent, please add some ETH to cover for the query fee\""
                              },
                              "value": "Oraclize ZIL query was NOT sent, please add some ETH to cover for the query fee"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_249e059a5bb341fbfbaa6af0b08fcf0f27a370bb3fd96e5be9f4933ccc2551ef",
                                "typeString": "literal_string \"Oraclize ZIL query was NOT sent, please add some ETH to cover for the query fee\""
                              }
                            ],
                            "id": 621,
                            "name": "LogInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "7813:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7813:90:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 624,
                        "nodeType": "EmitStatement",
                        "src": "7808:95:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 649,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "updateZil",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 611,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7653:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 612,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7679:0:0"
            },
            "scope": 767,
            "src": "7635:606:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 687,
              "nodeType": "Block",
              "src": "8289:555:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8372:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          }
                        ],
                        "id": 652,
                        "name": "oraclize_getPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          1192,
                          1210
                        ],
                        "referencedDeclaration": 1192,
                        "src": "8354:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) returns (uint256)"
                        }
                      },
                      "id": 654,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8354:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 656,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6623,
                            "src": "8389:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OraclizeTest_$767",
                              "typeString": "contract OraclizeTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OraclizeTest_$767",
                              "typeString": "contract OraclizeTest"
                            }
                          ],
                          "id": 655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8381:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8381:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 658,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "8381:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8354:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 685,
                    "nodeType": "Block",
                    "src": "8529:309:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a65204145207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                              "id": 666,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8556:58:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c75ed109283abd43a6d8b8b9ecb16ae9ab49d428587091ba0dfcb337c66a7276",
                                "typeString": "literal_string \"Oraclize AE query was sent, standing by for the answer..\""
                              },
                              "value": "Oraclize AE query was sent, standing by for the answer.."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c75ed109283abd43a6d8b8b9ecb16ae9ab49d428587091ba0dfcb337c66a7276",
                                "typeString": "literal_string \"Oraclize AE query was sent, standing by for the answer..\""
                              }
                            ],
                            "id": 665,
                            "name": "LogInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "8548:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8548:67:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 668,
                        "nodeType": "EmitStatement",
                        "src": "8543:72:0"
                      },
                      {
                        "assignments": [
                          670
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 670,
                            "name": "queryId9",
                            "nodeType": "VariableDeclaration",
                            "scope": 688,
                            "src": "8629:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 669,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "8629:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 675,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "55524c",
                              "id": 672,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8663:5:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              "value": "URL"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6a736f6e2868747470733a2f2f6170692e636f696e6d61726b65746361702e636f6d2f76322f7469636b65722f313730302f292e646174612e71756f7465732e5553442e7072696365",
                              "id": 673,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8670:75:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_04446ebbde6246811a6bde2f1f1f5e8d89df79d75ced3b04bbfad6a377947e96",
                                "typeString": "literal_string \"json(https://api.coinmarketcap.com/v2/ticker/1700/).data.quotes.USD.price\""
                              },
                              "value": "json(https://api.coinmarketcap.com/v2/ticker/1700/).data.quotes.USD.price"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_04446ebbde6246811a6bde2f1f1f5e8d89df79d75ced3b04bbfad6a377947e96",
                                "typeString": "literal_string \"json(https://api.coinmarketcap.com/v2/ticker/1700/).data.quotes.USD.price\""
                              }
                            ],
                            "id": 671,
                            "name": "oraclize_query",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1250,
                              1292,
                              1338,
                              1382,
                              1425,
                              1470,
                              1519,
                              1566,
                              1613,
                              1662,
                              1715,
                              1766,
                              1803,
                              1843,
                              1886,
                              1926,
                              1971,
                              2019,
                              2070,
                              2118,
                              2171,
                              2227,
                              2286,
                              2342,
                              2403,
                              2467,
                              2534,
                              2598,
                              2667,
                              2739,
                              2814,
                              2886,
                              2933,
                              2982,
                              3035,
                              3086,
                              3123,
                              3163,
                              3206,
                              3246,
                              3291,
                              3339,
                              3390,
                              3438,
                              3491,
                              3547,
                              3606,
                              3662,
                              3723,
                              3787,
                              3854,
                              3918,
                              3987,
                              4059,
                              4134,
                              4206
                            ],
                            "referencedDeclaration": 1250,
                            "src": "8648:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (string memory,string memory) returns (bytes32)"
                            }
                          },
                          "id": 674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8648:98:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8629:117:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 676,
                              "name": "oraclizeCallbacks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79,
                              "src": "8760:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$75_storage_$",
                                "typeString": "mapping(bytes32 => struct OraclizeTest.oraclizeCallback storage ref)"
                              }
                            },
                            "id": 678,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 677,
                              "name": "queryId9",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 670,
                              "src": "8778:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8760:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$75_storage",
                              "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 680,
                                  "name": "oraclizeState",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 72,
                                  "src": "8807:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_oraclizeState_$72_$",
                                    "typeString": "type(enum OraclizeTest.oraclizeState)"
                                  }
                                },
                                "id": 681,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "ForAe",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "8807:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_oraclizeState_$72",
                                  "typeString": "enum OraclizeTest.oraclizeState"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_oraclizeState_$72",
                                  "typeString": "enum OraclizeTest.oraclizeState"
                                }
                              ],
                              "id": 679,
                              "name": "oraclizeCallback",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75,
                              "src": "8790:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_oraclizeCallback_$75_storage_ptr_$",
                                "typeString": "type(struct OraclizeTest.oraclizeCallback storage pointer)"
                              }
                            },
                            "id": 682,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8790:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$75_memory",
                              "typeString": "struct OraclizeTest.oraclizeCallback memory"
                            }
                          },
                          "src": "8760:67:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_oraclizeCallback_$75_storage",
                            "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                          }
                        },
                        "id": 684,
                        "nodeType": "ExpressionStatement",
                        "src": "8760:67:0"
                      }
                    ]
                  },
                  "id": 686,
                  "nodeType": "IfStatement",
                  "src": "8350:488:0",
                  "trueBody": {
                    "id": 664,
                    "nodeType": "Block",
                    "src": "8404:119:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a6520414520717565727920776173204e4f542073656e742c20706c656173652061646420736f6d652045544820746f20636f76657220666f722074686520717565727920666565",
                              "id": 661,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8431:80:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_78cddcab207b43aa5d0b9857e13d6a3ab5b6d2c30bd56c9532f92733458c9ab4",
                                "typeString": "literal_string \"Oraclize AE query was NOT sent, please add some ETH to cover for the query fee\""
                              },
                              "value": "Oraclize AE query was NOT sent, please add some ETH to cover for the query fee"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_78cddcab207b43aa5d0b9857e13d6a3ab5b6d2c30bd56c9532f92733458c9ab4",
                                "typeString": "literal_string \"Oraclize AE query was NOT sent, please add some ETH to cover for the query fee\""
                              }
                            ],
                            "id": 660,
                            "name": "LogInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "8423:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8423:89:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 663,
                        "nodeType": "EmitStatement",
                        "src": "8418:94:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 688,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "updateAe",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 650,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8263:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 651,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8289:0:0"
            },
            "scope": 767,
            "src": "8246:598:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 726,
              "nodeType": "Block",
              "src": "8893:564:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8976:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          }
                        ],
                        "id": 691,
                        "name": "oraclize_getPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          1192,
                          1210
                        ],
                        "referencedDeclaration": 1192,
                        "src": "8958:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) returns (uint256)"
                        }
                      },
                      "id": 693,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8958:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 695,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6623,
                            "src": "8993:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OraclizeTest_$767",
                              "typeString": "contract OraclizeTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OraclizeTest_$767",
                              "typeString": "contract OraclizeTest"
                            }
                          ],
                          "id": 694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8985:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8985:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "8985:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8958:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 724,
                    "nodeType": "Block",
                    "src": "9134:317:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a65205a5258207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                              "id": 705,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9161:59:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4a9baae57ed30acede8e80abecf2254708d1775aae5842b39f1e5ac98e7db7dc",
                                "typeString": "literal_string \"Oraclize ZRX query was sent, standing by for the answer..\""
                              },
                              "value": "Oraclize ZRX query was sent, standing by for the answer.."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_4a9baae57ed30acede8e80abecf2254708d1775aae5842b39f1e5ac98e7db7dc",
                                "typeString": "literal_string \"Oraclize ZRX query was sent, standing by for the answer..\""
                              }
                            ],
                            "id": 704,
                            "name": "LogInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "9153:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9153:68:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 707,
                        "nodeType": "EmitStatement",
                        "src": "9148:73:0"
                      },
                      {
                        "assignments": [
                          709
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 709,
                            "name": "queryId10",
                            "nodeType": "VariableDeclaration",
                            "scope": 727,
                            "src": "9235:17:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 708,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "9235:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 714,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "55524c",
                              "id": 711,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9270:5:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              "value": "URL"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6a736f6e2868747470733a2f2f6170692e636f696e6d61726b65746361702e636f6d2f76322f7469636b65722f313839362f292e646174612e71756f7465732e5553442e7072696365",
                              "id": 712,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9277:75:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e6c9710d1d85d44310c0186f369fd88920f17f4e7821af5af17e01b8a5232573",
                                "typeString": "literal_string \"json(https://api.coinmarketcap.com/v2/ticker/1896/).data.quotes.USD.price\""
                              },
                              "value": "json(https://api.coinmarketcap.com/v2/ticker/1896/).data.quotes.USD.price"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e6c9710d1d85d44310c0186f369fd88920f17f4e7821af5af17e01b8a5232573",
                                "typeString": "literal_string \"json(https://api.coinmarketcap.com/v2/ticker/1896/).data.quotes.USD.price\""
                              }
                            ],
                            "id": 710,
                            "name": "oraclize_query",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1250,
                              1292,
                              1338,
                              1382,
                              1425,
                              1470,
                              1519,
                              1566,
                              1613,
                              1662,
                              1715,
                              1766,
                              1803,
                              1843,
                              1886,
                              1926,
                              1971,
                              2019,
                              2070,
                              2118,
                              2171,
                              2227,
                              2286,
                              2342,
                              2403,
                              2467,
                              2534,
                              2598,
                              2667,
                              2739,
                              2814,
                              2886,
                              2933,
                              2982,
                              3035,
                              3086,
                              3123,
                              3163,
                              3206,
                              3246,
                              3291,
                              3339,
                              3390,
                              3438,
                              3491,
                              3547,
                              3606,
                              3662,
                              3723,
                              3787,
                              3854,
                              3918,
                              3987,
                              4059,
                              4134,
                              4206
                            ],
                            "referencedDeclaration": 1250,
                            "src": "9255:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (string memory,string memory) returns (bytes32)"
                            }
                          },
                          "id": 713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9255:98:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9235:118:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 715,
                              "name": "oraclizeCallbacks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79,
                              "src": "9367:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$75_storage_$",
                                "typeString": "mapping(bytes32 => struct OraclizeTest.oraclizeCallback storage ref)"
                              }
                            },
                            "id": 717,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 716,
                              "name": "queryId10",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 709,
                              "src": "9385:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9367:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$75_storage",
                              "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 719,
                                  "name": "oraclizeState",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 72,
                                  "src": "9415:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_oraclizeState_$72_$",
                                    "typeString": "type(enum OraclizeTest.oraclizeState)"
                                  }
                                },
                                "id": 720,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "ForZrx",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "9415:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_oraclizeState_$72",
                                  "typeString": "enum OraclizeTest.oraclizeState"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_oraclizeState_$72",
                                  "typeString": "enum OraclizeTest.oraclizeState"
                                }
                              ],
                              "id": 718,
                              "name": "oraclizeCallback",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75,
                              "src": "9398:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_oraclizeCallback_$75_storage_ptr_$",
                                "typeString": "type(struct OraclizeTest.oraclizeCallback storage pointer)"
                              }
                            },
                            "id": 721,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9398:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$75_memory",
                              "typeString": "struct OraclizeTest.oraclizeCallback memory"
                            }
                          },
                          "src": "9367:69:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_oraclizeCallback_$75_storage",
                            "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                          }
                        },
                        "id": 723,
                        "nodeType": "ExpressionStatement",
                        "src": "9367:69:0"
                      }
                    ]
                  },
                  "id": 725,
                  "nodeType": "IfStatement",
                  "src": "8954:497:0",
                  "trueBody": {
                    "id": 703,
                    "nodeType": "Block",
                    "src": "9008:120:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a65205a525820717565727920776173204e4f542073656e742c20706c656173652061646420736f6d652045544820746f20636f76657220666f722074686520717565727920666565",
                              "id": 700,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9035:81:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2612d39edd6a5bb05adad07ee5f6bae11cec679f118c605c9ca66eb38faf7327",
                                "typeString": "literal_string \"Oraclize ZRX query was NOT sent, please add some ETH to cover for the query fee\""
                              },
                              "value": "Oraclize ZRX query was NOT sent, please add some ETH to cover for the query fee"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_2612d39edd6a5bb05adad07ee5f6bae11cec679f118c605c9ca66eb38faf7327",
                                "typeString": "literal_string \"Oraclize ZRX query was NOT sent, please add some ETH to cover for the query fee\""
                              }
                            ],
                            "id": 699,
                            "name": "LogInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "9027:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9027:90:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 702,
                        "nodeType": "EmitStatement",
                        "src": "9022:95:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 727,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "updateZrx",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 689,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8867:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 690,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8893:0:0"
            },
            "scope": 767,
            "src": "8849:608:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 765,
              "nodeType": "Block",
              "src": "9507:564:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9590:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          }
                        ],
                        "id": 730,
                        "name": "oraclize_getPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          1192,
                          1210
                        ],
                        "referencedDeclaration": 1192,
                        "src": "9572:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) returns (uint256)"
                        }
                      },
                      "id": 732,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9572:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 734,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6623,
                            "src": "9607:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OraclizeTest_$767",
                              "typeString": "contract OraclizeTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OraclizeTest_$767",
                              "typeString": "contract OraclizeTest"
                            }
                          ],
                          "id": 733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9599:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9599:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 736,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "9599:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9572:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 763,
                    "nodeType": "Block",
                    "src": "9748:317:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a652042544d207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                              "id": 744,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9775:59:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2573d4a393139471ac1b7d11518cce297e45020ceed6731b0105324e1e8f1306",
                                "typeString": "literal_string \"Oraclize BTM query was sent, standing by for the answer..\""
                              },
                              "value": "Oraclize BTM query was sent, standing by for the answer.."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_2573d4a393139471ac1b7d11518cce297e45020ceed6731b0105324e1e8f1306",
                                "typeString": "literal_string \"Oraclize BTM query was sent, standing by for the answer..\""
                              }
                            ],
                            "id": 743,
                            "name": "LogInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "9767:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 745,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9767:68:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 746,
                        "nodeType": "EmitStatement",
                        "src": "9762:73:0"
                      },
                      {
                        "assignments": [
                          748
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 748,
                            "name": "queryId11",
                            "nodeType": "VariableDeclaration",
                            "scope": 766,
                            "src": "9849:17:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 747,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "9849:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 753,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "55524c",
                              "id": 750,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9884:5:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              "value": "URL"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6a736f6e2868747470733a2f2f6170692e636f696e6d61726b65746361702e636f6d2f76322f7469636b65722f313836362f292e646174612e71756f7465732e5553442e7072696365",
                              "id": 751,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9891:75:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_43aeee2fbdc44d6c2df5a368914e5f791dd8dbd27dd8f413810750701ca7d00d",
                                "typeString": "literal_string \"json(https://api.coinmarketcap.com/v2/ticker/1866/).data.quotes.USD.price\""
                              },
                              "value": "json(https://api.coinmarketcap.com/v2/ticker/1866/).data.quotes.USD.price"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_43aeee2fbdc44d6c2df5a368914e5f791dd8dbd27dd8f413810750701ca7d00d",
                                "typeString": "literal_string \"json(https://api.coinmarketcap.com/v2/ticker/1866/).data.quotes.USD.price\""
                              }
                            ],
                            "id": 749,
                            "name": "oraclize_query",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1250,
                              1292,
                              1338,
                              1382,
                              1425,
                              1470,
                              1519,
                              1566,
                              1613,
                              1662,
                              1715,
                              1766,
                              1803,
                              1843,
                              1886,
                              1926,
                              1971,
                              2019,
                              2070,
                              2118,
                              2171,
                              2227,
                              2286,
                              2342,
                              2403,
                              2467,
                              2534,
                              2598,
                              2667,
                              2739,
                              2814,
                              2886,
                              2933,
                              2982,
                              3035,
                              3086,
                              3123,
                              3163,
                              3206,
                              3246,
                              3291,
                              3339,
                              3390,
                              3438,
                              3491,
                              3547,
                              3606,
                              3662,
                              3723,
                              3787,
                              3854,
                              3918,
                              3987,
                              4059,
                              4134,
                              4206
                            ],
                            "referencedDeclaration": 1250,
                            "src": "9869:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (string memory,string memory) returns (bytes32)"
                            }
                          },
                          "id": 752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9869:98:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9849:118:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 754,
                              "name": "oraclizeCallbacks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79,
                              "src": "9981:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_oraclizeCallback_$75_storage_$",
                                "typeString": "mapping(bytes32 => struct OraclizeTest.oraclizeCallback storage ref)"
                              }
                            },
                            "id": 756,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 755,
                              "name": "queryId11",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 748,
                              "src": "9999:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9981:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$75_storage",
                              "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 758,
                                  "name": "oraclizeState",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 72,
                                  "src": "10029:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_oraclizeState_$72_$",
                                    "typeString": "type(enum OraclizeTest.oraclizeState)"
                                  }
                                },
                                "id": 759,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "ForBtm",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "10029:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_oraclizeState_$72",
                                  "typeString": "enum OraclizeTest.oraclizeState"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_oraclizeState_$72",
                                  "typeString": "enum OraclizeTest.oraclizeState"
                                }
                              ],
                              "id": 757,
                              "name": "oraclizeCallback",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75,
                              "src": "10012:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_oraclizeCallback_$75_storage_ptr_$",
                                "typeString": "type(struct OraclizeTest.oraclizeCallback storage pointer)"
                              }
                            },
                            "id": 760,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10012:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_oraclizeCallback_$75_memory",
                              "typeString": "struct OraclizeTest.oraclizeCallback memory"
                            }
                          },
                          "src": "9981:69:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_oraclizeCallback_$75_storage",
                            "typeString": "struct OraclizeTest.oraclizeCallback storage ref"
                          }
                        },
                        "id": 762,
                        "nodeType": "ExpressionStatement",
                        "src": "9981:69:0"
                      }
                    ]
                  },
                  "id": 764,
                  "nodeType": "IfStatement",
                  "src": "9568:497:0",
                  "trueBody": {
                    "id": 742,
                    "nodeType": "Block",
                    "src": "9622:120:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a652042544d20717565727920776173204e4f542073656e742c20706c656173652061646420736f6d652045544820746f20636f76657220666f722074686520717565727920666565",
                              "id": 739,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9649:81:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_58b6064d24d7afa1d8c624fa7d1bf60f7e36ffc523d8520bcd9985bac7d146a8",
                                "typeString": "literal_string \"Oraclize BTM query was NOT sent, please add some ETH to cover for the query fee\""
                              },
                              "value": "Oraclize BTM query was NOT sent, please add some ETH to cover for the query fee"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_58b6064d24d7afa1d8c624fa7d1bf60f7e36ffc523d8520bcd9985bac7d146a8",
                                "typeString": "literal_string \"Oraclize BTM query was NOT sent, please add some ETH to cover for the query fee\""
                              }
                            ],
                            "id": 738,
                            "name": "LogInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "9641:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9641:90:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 741,
                        "nodeType": "EmitStatement",
                        "src": "9636:95:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 766,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "updateBtm",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 728,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9481:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 729,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9507:0:0"
            },
            "scope": 767,
            "src": "9463:608:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 768,
        "src": "97:9976:0"
      }
    ],
    "src": "0:10073:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.23+commit.124ca40d.Emscripten.clang"
  },
  "networks": {
    "1526104725480": {
      "events": {},
      "links": {},
      "address": "0x05462546a54b89019458707781570cc6c4a10d3e",
      "transactionHash": "0x0991cd8aea84bddf728599b25c70bab35bdc98365cfaded94389a3fc888e2eb2"
    },
    "1526106557443": {
      "events": {},
      "links": {},
      "address": "0x1190011127e61177887591e8cbab80a01bedd693",
      "transactionHash": "0x99ba5fa621c95f6be72ed91347e2147a62aded02131fe847d88ca92d846289ac"
    },
    "1526107425595": {
      "events": {},
      "links": {},
      "address": "0x82034a9010344cf4d2a95f2716dbcd03b3fec477",
      "transactionHash": "0xdda529474bd93a2d6a49678fea05ebc4c4c608f499b9805cd112e42e21bd1e1c"
    },
    "1526110849215": {
      "events": {},
      "links": {},
      "address": "0x5d20d57d345fb4b93a925432edf33b6ac498b3bb",
      "transactionHash": "0x76fa4952955a99978ffd0946883416b03ae73d2f499413c70bfb8d495b17675e"
    },
    "1526111141973": {
      "events": {},
      "links": {},
      "address": "0x95ff7fad99b6bb2ee3cec70f1da48612ba8332ea",
      "transactionHash": "0xacfc8b0adb482f38d97ecbd1ca61b22bd230bf9974487db4984134c75f0c7304"
    },
    "1526113890666": {
      "events": {},
      "links": {},
      "address": "0x71c55be92bb099eb977c00d3c49760a2fd739d51",
      "transactionHash": "0xe6ca08f139928e0b84faa2baaed45b519b2d0c3cfb08d16f3dae7141d49fa406"
    },
    "1526126366591": {
      "events": {},
      "links": {},
      "address": "0x42e309c7b6ac7736b0dbeb06d20a41c38e6d1cec",
      "transactionHash": "0x8e865249ca6ffc6b27ce2b0b60eeddb58259d9673b3928f20c3b3f0b744fedb4"
    },
    "1526254790019": {
      "events": {},
      "links": {},
      "address": "0xe0208ca923a70cd80f1a0948bc7ddf21419a00d5",
      "transactionHash": "0xfd864a108f4ce8efa4aeb39548d5f4c38eaaf6e1957d4d4f2f92d76a24393ce5"
    },
    "1526267559548": {
      "events": {},
      "links": {},
      "address": "0xc6fc49ee4b79b9a3dd4bfb08ccc13539f6bb76dd",
      "transactionHash": "0xfd864a108f4ce8efa4aeb39548d5f4c38eaaf6e1957d4d4f2f92d76a24393ce5"
    },
    "1526271159086": {
      "events": {},
      "links": {},
      "address": "0xc6f26feb36e11a1d4e341148f51ed31bd86beceb",
      "transactionHash": "0x4b8c113c21043a1a9d78fe11f3f042a2815c57c03c6a81c37cd34e159bfef8f3"
    },
    "1526314316444": {
      "events": {},
      "links": {},
      "address": "0x437be51a1c5315f94d71c5886b4d84fa5547732d",
      "transactionHash": "0x88791920ac3cba8609a70bccbb8e302722e4a5b92b0d1f223c7cb43915abc27e"
    }
  },
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-05-14T17:33:36.352Z"
}